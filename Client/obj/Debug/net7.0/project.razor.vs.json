{"SerializedFilePath":"C:\\Users\\ittai\\source\\repos\\VehicleSpeedControlSystem\\Client\\obj\\Debug\\net7.0\\project.razor.vs.json","FilePath":"C:\\Users\\ittai\\source\\repos\\VehicleSpeedControlSystem\\Client\\VehicleSpeedControlSystem.Client.csproj","Configuration":{"ConfigurationName":"Default","LanguageVersion":"7.0","Extensions":[]},"ProjectWorkspaceState":{"TagHelpers":[{"HashCode":-1659049326,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView\">\r\n             <summary>\r\n             Combines the behaviors of <see cref=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\" /> and <see cref=\"T:Microsoft.AspNetCore.Components.RouteView\" />,\r\n             so that it displays the page matching the specified route but only if the user\r\n             is authorized to see it.\r\n            \r\n             Additionally, this component supplies a cascading parameter of type <see cref=\"T:System.Threading.Tasks.Task`1\" />,\r\n             which makes the user's current authentication state available to descendants.\r\n             </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NotAuthorized","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Authorizing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Resource\">\r\n            <summary>\r\n            The resource to which access is being controlled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Resource","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This determines the page that will be\r\n            displayed and the parameter values that will be supplied to the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RouteData","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\r\n            <summary>\r\n            Gets or sets the type of a layout to be used if the page does not\r\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\r\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DefaultLayout","Common.GloballyQualifiedTypeName":"global::System.Type"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView","Common.TypeNameIdentifier":"AuthorizeRouteView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Runtime.Name":"Components.IComponent"}},{"HashCode":-2067093338,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView\">\r\n             <summary>\r\n             Combines the behaviors of <see cref=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\" /> and <see cref=\"T:Microsoft.AspNetCore.Components.RouteView\" />,\r\n             so that it displays the page matching the specified route but only if the user\r\n             is authorized to see it.\r\n            \r\n             Additionally, this component supplies a cascading parameter of type <see cref=\"T:System.Threading.Tasks.Task`1\" />,\r\n             which makes the user's current authentication state available to descendants.\r\n             </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NotAuthorized","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Authorizing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Resource\">\r\n            <summary>\r\n            The resource to which access is being controlled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Resource","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This determines the page that will be\r\n            displayed and the parameter values that will be supplied to the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RouteData","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\r\n            <summary>\r\n            Gets or sets the type of a layout to be used if the page does not\r\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\r\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DefaultLayout","Common.GloballyQualifiedTypeName":"global::System.Type"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView","Common.TypeNameIdentifier":"AuthorizeRouteView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1602723046,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["NotAuthorized"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","Common.TypeNameIdentifier":"AuthorizeRouteView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":109476351,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["NotAuthorized"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","Common.TypeNameIdentifier":"AuthorizeRouteView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1127560569,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"AuthorizeRouteView"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","Common.TypeNameIdentifier":"AuthorizeRouteView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":6310419,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","Common.TypeNameIdentifier":"AuthorizeRouteView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-97470475,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\">\r\n            <summary>\r\n            Displays differing content depending on the user's authorization status.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Policy","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Policy\">\r\n            <summary>\r\n            The policy name that determines whether the content can be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Policy","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Roles","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Roles\">\r\n            <summary>\r\n            A comma delimited list of roles that are allowed to display the content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Roles","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NotAuthorized","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Authorized","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Authorizing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Resource\">\r\n            <summary>\r\n            The resource to which access is being controlled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Resource","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView","Common.TypeNameIdentifier":"AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Runtime.Name":"Components.IComponent"}},{"HashCode":-1591375188,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\">\r\n            <summary>\r\n            Displays differing content depending on the user's authorization status.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Policy","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Policy\">\r\n            <summary>\r\n            The policy name that determines whether the content can be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Policy","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Roles","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Roles\">\r\n            <summary>\r\n            A comma delimited list of roles that are allowed to display the content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Roles","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NotAuthorized","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Authorized","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Authorizing","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Resource\">\r\n            <summary>\r\n            The resource to which access is being controlled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Resource","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView","Common.TypeNameIdentifier":"AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":529893422,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ChildContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","Common.TypeNameIdentifier":"AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-283371522,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ChildContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","Common.TypeNameIdentifier":"AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1730663890,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["NotAuthorized"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","Common.TypeNameIdentifier":"AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":2080400133,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["NotAuthorized"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","Common.TypeNameIdentifier":"AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1428985557,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorized","ParentTag":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Authorized"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","Common.TypeNameIdentifier":"AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-2020738019,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorized","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Authorized"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","Common.TypeNameIdentifier":"AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":2013499727,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"AuthorizeView"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","Common.TypeNameIdentifier":"AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":621119194,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","Common.TypeNameIdentifier":"AuthorizeView","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-472966043,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CascadingAuthenticationState"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\r\n            <summary>\r\n            The content to which the authentication state should be provided.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState","Common.TypeNameIdentifier":"CascadingAuthenticationState","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Runtime.Name":"Components.IComponent"}},{"HashCode":859759164,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\r\n            <summary>\r\n            The content to which the authentication state should be provided.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState","Common.TypeNameIdentifier":"CascadingAuthenticationState","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-113265668,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\r\n            <summary>\r\n            The content to which the authentication state should be provided.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CascadingAuthenticationState"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","Common.TypeNameIdentifier":"CascadingAuthenticationState","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1063076882,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\r\n            <summary>\r\n            The content to which the authentication state should be provided.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","Common.TypeNameIdentifier":"CascadingAuthenticationState","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1464568835,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core._Imports","AssemblyName":"dymaptic.GeoBlazor.Core","CaseSensitive":true,"TagMatchingRules":[{"TagName":"_Imports"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core._Imports","Common.TypeNameIdentifier":"_Imports","Common.TypeNamespace":"dymaptic.GeoBlazor.Core","Runtime.Name":"Components.IComponent"}},{"HashCode":824065993,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core._Imports","AssemblyName":"dymaptic.GeoBlazor.Core","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core._Imports"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core._Imports","Common.TypeNameIdentifier":"_Imports","Common.TypeNamespace":"dymaptic.GeoBlazor.Core","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-857278216,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.ActionButton","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.ActionButton\">\r\n            <summary>\r\n                A customizable button that performs a specific action(s) used in widgets such as the Popup, LayerList, and\r\n                BasemapLayerList.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ActionButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Image","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.ActionButton.Image\">\r\n            <summary>\r\n                The URL to an image that will be used to represent the action. This property will be used as a background image for\r\n                the node. It may be used in conjunction with the className property or by itself. If neither image nor className\r\n                are specified, a default icon will display\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Image","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ClassName","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.ActionButton.ClassName\">\r\n            <summary>\r\n                This adds a CSS class to the ActionButton's node.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ClassName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.ActionBase.Title\">\r\n            <summary>\r\n                The title of the action.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.ActionBase.Id\">\r\n            <summary>\r\n                The name of the ID assigned to this action.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Active","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.ActionBase.Active\">\r\n            <summary>\r\n                Set this property to true to display a spinner icon. You should do this if the action executes an async operation,\r\n                such as a query, that requires letting the end user know that a process is ongoing in the background. Set the\r\n                property back to false to communicate to the user that the process has finished.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Active","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.ActionBase.Disabled\">\r\n            <summary>\r\n                Indicates whether this action is disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.ActionBase.Visible\">\r\n            <summary>\r\n                Indicates if the action is visible.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CallbackFunction","TypeName":"System.Func<System.Threading.Tasks.Task>","IsEditorRequired":true,"Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.ActionBase.CallbackFunction\">\r\n            <summary>\r\n                The action function to perform on click.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::System.Threading.Tasks.Task>","Common.PropertyName":"CallbackFunction","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.ActionButton","Common.TypeNameIdentifier":"ActionButton","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Runtime.Name":"Components.IComponent"}},{"HashCode":1572384199,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.ActionButton","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.ActionButton\">\r\n            <summary>\r\n                A customizable button that performs a specific action(s) used in widgets such as the Popup, LayerList, and\r\n                BasemapLayerList.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.ActionButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Image","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.ActionButton.Image\">\r\n            <summary>\r\n                The URL to an image that will be used to represent the action. This property will be used as a background image for\r\n                the node. It may be used in conjunction with the className property or by itself. If neither image nor className\r\n                are specified, a default icon will display\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Image","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ClassName","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.ActionButton.ClassName\">\r\n            <summary>\r\n                This adds a CSS class to the ActionButton's node.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ClassName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.ActionBase.Title\">\r\n            <summary>\r\n                The title of the action.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.ActionBase.Id\">\r\n            <summary>\r\n                The name of the ID assigned to this action.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Active","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.ActionBase.Active\">\r\n            <summary>\r\n                Set this property to true to display a spinner icon. You should do this if the action executes an async operation,\r\n                such as a query, that requires letting the end user know that a process is ongoing in the background. Set the\r\n                property back to false to communicate to the user that the process has finished.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Active","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.ActionBase.Disabled\">\r\n            <summary>\r\n                Indicates whether this action is disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.ActionBase.Visible\">\r\n            <summary>\r\n                Indicates if the action is visible.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CallbackFunction","TypeName":"System.Func<System.Threading.Tasks.Task>","IsEditorRequired":true,"Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.ActionBase.CallbackFunction\">\r\n            <summary>\r\n                The action function to perform on click.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::System.Threading.Tasks.Task>","Common.PropertyName":"CallbackFunction","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.ActionButton","Common.TypeNameIdentifier":"ActionButton","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":683783529,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.ActionButton.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ActionButton"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.ActionButton.ChildContent","Common.TypeNameIdentifier":"ActionButton","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1391334064,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.ActionButton.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.ActionButton"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.ActionButton.ChildContent","Common.TypeNameIdentifier":"ActionButton","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1636054805,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.ActionToggle","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.ActionToggle\">\r\n            <summary>\r\n                A customizable toggle used in the LayerList widget that performs a specific action(s) which can be toggled on/off.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ActionToggle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Value","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.ActionToggle.Value\">\r\n            <summary>\r\n                Indicates the value of whether the action is toggled on/off.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.ActionBase.Title\">\r\n            <summary>\r\n                The title of the action.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.ActionBase.Id\">\r\n            <summary>\r\n                The name of the ID assigned to this action.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Active","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.ActionBase.Active\">\r\n            <summary>\r\n                Set this property to true to display a spinner icon. You should do this if the action executes an async operation,\r\n                such as a query, that requires letting the end user know that a process is ongoing in the background. Set the\r\n                property back to false to communicate to the user that the process has finished.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Active","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.ActionBase.Disabled\">\r\n            <summary>\r\n                Indicates whether this action is disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.ActionBase.Visible\">\r\n            <summary>\r\n                Indicates if the action is visible.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CallbackFunction","TypeName":"System.Func<System.Threading.Tasks.Task>","IsEditorRequired":true,"Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.ActionBase.CallbackFunction\">\r\n            <summary>\r\n                The action function to perform on click.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::System.Threading.Tasks.Task>","Common.PropertyName":"CallbackFunction","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.ActionToggle","Common.TypeNameIdentifier":"ActionToggle","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Runtime.Name":"Components.IComponent"}},{"HashCode":-1262946578,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.ActionToggle","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.ActionToggle\">\r\n            <summary>\r\n                A customizable toggle used in the LayerList widget that performs a specific action(s) which can be toggled on/off.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.ActionToggle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Value","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.ActionToggle.Value\">\r\n            <summary>\r\n                Indicates the value of whether the action is toggled on/off.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.ActionBase.Title\">\r\n            <summary>\r\n                The title of the action.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.ActionBase.Id\">\r\n            <summary>\r\n                The name of the ID assigned to this action.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Active","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.ActionBase.Active\">\r\n            <summary>\r\n                Set this property to true to display a spinner icon. You should do this if the action executes an async operation,\r\n                such as a query, that requires letting the end user know that a process is ongoing in the background. Set the\r\n                property back to false to communicate to the user that the process has finished.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Active","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.ActionBase.Disabled\">\r\n            <summary>\r\n                Indicates whether this action is disabled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.ActionBase.Visible\">\r\n            <summary>\r\n                Indicates if the action is visible.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CallbackFunction","TypeName":"System.Func<System.Threading.Tasks.Task>","IsEditorRequired":true,"Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.ActionBase.CallbackFunction\">\r\n            <summary>\r\n                The action function to perform on click.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::System.Threading.Tasks.Task>","Common.PropertyName":"CallbackFunction","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.ActionToggle","Common.TypeNameIdentifier":"ActionToggle","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1280039762,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.ActionToggle.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ActionToggle"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.ActionToggle.ChildContent","Common.TypeNameIdentifier":"ActionToggle","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1858994723,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.ActionToggle.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.ActionToggle"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.ActionToggle.ChildContent","Common.TypeNameIdentifier":"ActionToggle","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-962916040,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Basemap","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Basemap\">\r\n            <summary>\r\n                Creates a new basemap object. Basemaps can be created from a PortalItem, from a well known basemap ID, or can be\r\n                used for creating custom basemaps. These basemaps may be created from tiled services you publish to your own\r\n                server, or from tiled services published by third parties.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-Basemap.html\">\r\n                    ArcGIS JS\r\n                    API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Basemap"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Basemap","Common.TypeNameIdentifier":"Basemap","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Runtime.Name":"Components.IComponent"}},{"HashCode":73323114,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Basemap","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Basemap\">\r\n            <summary>\r\n                Creates a new basemap object. Basemaps can be created from a PortalItem, from a well known basemap ID, or can be\r\n                used for creating custom basemaps. These basemaps may be created from tiled services you publish to your own\r\n                server, or from tiled services published by third parties.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-Basemap.html\">\r\n                    ArcGIS JS\r\n                    API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Basemap"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Basemap","Common.TypeNameIdentifier":"Basemap","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1334598332,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Basemap.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Basemap"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Basemap.ChildContent","Common.TypeNameIdentifier":"Basemap","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":2023311308,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Basemap.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Basemap"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Basemap.ChildContent","Common.TypeNameIdentifier":"Basemap","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-377837079,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Constraints","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Constraints\">\r\n            <summary>\r\n                Specifies constraints to scale, zoom, and rotation that may be applied to the MapView. The constraints.lods should\r\n                be set in the MapView constructor, if the map does not have a basemap or when the basemap does not have tileInfo.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-views-MapView.html#constraints\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Constraints"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"MinScale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Constraints.MinScale\">\r\n            <summary>\r\n                The minimum scale the user is allowed to zoom to within the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinScale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"MaxScale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Constraints.MaxScale\">\r\n            <summary>\r\n                The maximum scale the user is allowed to zoom to within the view. Setting this value to 0 allows the user to\r\n                overzoom layer tiles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxScale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"MinZoom","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Constraints.MinZoom\">\r\n            <summary>\r\n                The minimum zoom level the user is allowed to zoom to within the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinZoom","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"MaxZoom","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Constraints.MaxZoom\">\r\n            <summary>\r\n                The maximum zoom level the user is allowed to zoom to within the view. Setting this value to 0 allows the user to\r\n                over-zoom layer tiles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxZoom","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"SnapToZoom","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Constraints.SnapToZoom\">\r\n            <summary>\r\n                When true, the view snaps to the next LOD when zooming in or out. When false, the zoom is continuous. This does not\r\n                apply when zooming in/out using two finger pinch in/out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SnapToZoom","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"RotationEnabled","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Constraints.RotationEnabled\">\r\n            <summary>\r\n                Indicates whether the user can rotate the map. If not set, defaults to true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RotationEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Constraints","Common.TypeNameIdentifier":"Constraints","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Runtime.Name":"Components.IComponent"}},{"HashCode":-1792572716,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Constraints","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Constraints\">\r\n            <summary>\r\n                Specifies constraints to scale, zoom, and rotation that may be applied to the MapView. The constraints.lods should\r\n                be set in the MapView constructor, if the map does not have a basemap or when the basemap does not have tileInfo.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-views-MapView.html#constraints\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Constraints"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"MinScale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Constraints.MinScale\">\r\n            <summary>\r\n                The minimum scale the user is allowed to zoom to within the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinScale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"MaxScale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Constraints.MaxScale\">\r\n            <summary>\r\n                The maximum scale the user is allowed to zoom to within the view. Setting this value to 0 allows the user to\r\n                overzoom layer tiles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxScale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"MinZoom","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Constraints.MinZoom\">\r\n            <summary>\r\n                The minimum zoom level the user is allowed to zoom to within the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinZoom","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"MaxZoom","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Constraints.MaxZoom\">\r\n            <summary>\r\n                The maximum zoom level the user is allowed to zoom to within the view. Setting this value to 0 allows the user to\r\n                over-zoom layer tiles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxZoom","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"SnapToZoom","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Constraints.SnapToZoom\">\r\n            <summary>\r\n                When true, the view snaps to the next LOD when zooming in or out. When false, the zoom is continuous. This does not\r\n                apply when zooming in/out using two finger pinch in/out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SnapToZoom","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"RotationEnabled","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Constraints.RotationEnabled\">\r\n            <summary>\r\n                Indicates whether the user can rotate the map. If not set, defaults to true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RotationEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Constraints","Common.TypeNameIdentifier":"Constraints","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1758748459,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Constraints.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Constraints"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Constraints.ChildContent","Common.TypeNameIdentifier":"Constraints","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-955783219,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Constraints.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Constraints"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Constraints.ChildContent","Common.TypeNameIdentifier":"Constraints","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-891008547,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.CustomOverlay","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.CustomOverlay\">\r\n            <summary>\r\n                A container for placing custom html or Razor Components on top of the Map View.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CustomOverlay"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.OverlayPosition","IsEnum":true,"IsEditorRequired":true,"Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.CustomOverlay.Position\">\r\n            <summary>\r\n                The position to place the child content over the map.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.OverlayPosition"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.CustomOverlay.ChildContent\">\r\n            <summary>\r\n                The child content to place over the map.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.CustomOverlay","Common.TypeNameIdentifier":"CustomOverlay","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Runtime.Name":"Components.IComponent"}},{"HashCode":463370457,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.CustomOverlay","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.CustomOverlay\">\r\n            <summary>\r\n                A container for placing custom html or Razor Components on top of the Map View.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.CustomOverlay"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.OverlayPosition","IsEnum":true,"IsEditorRequired":true,"Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.CustomOverlay.Position\">\r\n            <summary>\r\n                The position to place the child content over the map.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.OverlayPosition"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.CustomOverlay.ChildContent\">\r\n            <summary>\r\n                The child content to place over the map.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.CustomOverlay","Common.TypeNameIdentifier":"CustomOverlay","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":412495756,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.CustomOverlay.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.CustomOverlay.ChildContent\">\r\n            <summary>\r\n                The child content to place over the map.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CustomOverlay"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.CustomOverlay.ChildContent","Common.TypeNameIdentifier":"CustomOverlay","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-371573160,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.CustomOverlay.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.CustomOverlay.ChildContent\">\r\n            <summary>\r\n                The child content to place over the map.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.CustomOverlay"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.CustomOverlay.ChildContent","Common.TypeNameIdentifier":"CustomOverlay","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1856551594,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.LOD","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.LOD\">\r\n            <summary>\r\n                A TileLayer has a number of LODs (Levels of Detail). Each LOD corresponds to a map at a given scale or resolution.\r\n                LOD has no constructor.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-support-LOD.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LOD"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Level","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.LOD.Level\">\r\n            <summary>\r\n                ID for each level.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Level","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"LevelValue","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.LOD.LevelValue\">\r\n            <summary>\r\n                String to be used when constructing a URL to access a tile from this LOD.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LevelValue","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Resolution","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.LOD.Resolution\">\r\n            <summary>\r\n                Resolution in map units of each pixel in a tile for each level.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Resolution","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.LOD.Scale\">\r\n            <summary>\r\n                Scale for each level.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Scale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.LOD","Common.TypeNameIdentifier":"LOD","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Runtime.Name":"Components.IComponent"}},{"HashCode":271021053,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.LOD","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.LOD\">\r\n            <summary>\r\n                A TileLayer has a number of LODs (Levels of Detail). Each LOD corresponds to a map at a given scale or resolution.\r\n                LOD has no constructor.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-support-LOD.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.LOD"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Level","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.LOD.Level\">\r\n            <summary>\r\n                ID for each level.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Level","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"LevelValue","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.LOD.LevelValue\">\r\n            <summary>\r\n                String to be used when constructing a URL to access a tile from this LOD.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LevelValue","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Resolution","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.LOD.Resolution\">\r\n            <summary>\r\n                Resolution in map units of each pixel in a tile for each level.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Resolution","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.LOD.Scale\">\r\n            <summary>\r\n                Scale for each level.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Scale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.LOD","Common.TypeNameIdentifier":"LOD","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-480511631,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.LOD.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"LOD"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.LOD.ChildContent","Common.TypeNameIdentifier":"LOD","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-2012714011,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.LOD.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.LOD"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.LOD.ChildContent","Common.TypeNameIdentifier":"LOD","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-825638320,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Map","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Map\">\r\n            <summary>\r\n                The Map class contains properties and methods for storing, managing, and overlaying layers common to both 2D and 3D\r\n                viewing. Layers can be added and removed from the map, but are rendered via a MapView (for viewing data in 2D) or a\r\n                SceneView (for viewing data in 3D). Thus a map instance is a simple container that holds the layers, while the View\r\n                is the means of displaying and interacting with a map's layers and basemap.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-Map.html\">ArcGIS JS API</a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Map"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ArcGISDefaultBasemap","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Map.ArcGISDefaultBasemap\">\r\n            <summary>\r\n                Sets the basemap by way of the arcgis basemap name (e.g., arcgis-topographic).\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Map.ArcGISDefaultBasemap\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Map.Basemap\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ArcGISDefaultBasemap","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Ground","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Map.Ground\">\r\n            <summary>\r\n                Specifies the surface properties for the map.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Ground","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Map","Common.TypeNameIdentifier":"Map","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Runtime.Name":"Components.IComponent"}},{"HashCode":895686918,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Map","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Map\">\r\n            <summary>\r\n                The Map class contains properties and methods for storing, managing, and overlaying layers common to both 2D and 3D\r\n                viewing. Layers can be added and removed from the map, but are rendered via a MapView (for viewing data in 2D) or a\r\n                SceneView (for viewing data in 3D). Thus a map instance is a simple container that holds the layers, while the View\r\n                is the means of displaying and interacting with a map's layers and basemap.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-Map.html\">ArcGIS JS API</a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Map"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ArcGISDefaultBasemap","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Map.ArcGISDefaultBasemap\">\r\n            <summary>\r\n                Sets the basemap by way of the arcgis basemap name (e.g., arcgis-topographic).\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Map.ArcGISDefaultBasemap\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Map.Basemap\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ArcGISDefaultBasemap","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Ground","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Map.Ground\">\r\n            <summary>\r\n                Specifies the surface properties for the map.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Ground","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Map","Common.TypeNameIdentifier":"Map","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1649900837,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Map.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Map"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Map.ChildContent","Common.TypeNameIdentifier":"Map","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1453880871,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Map.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Map"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Map.ChildContent","Common.TypeNameIdentifier":"Map","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":858150936,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Portal","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Portal\">\r\n            <summary>\r\n                The Portal class is part of the ArcGIS Enterprise portal that provides a way to build applications that work with\r\n                content from ArcGIS Online or an ArcGIS Enterprise portal.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-portal-Portal.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n            <remarks>\r\n                This component is not needed when using ArcGIS Online resources\r\n            </remarks>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Portal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","IsEditorRequired":true,"Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Portal.Url\">\r\n            <summary>\r\n                The URL to the portal instance.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Url","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Portal","Common.TypeNameIdentifier":"Portal","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Runtime.Name":"Components.IComponent"}},{"HashCode":1371509445,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Portal","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Portal\">\r\n            <summary>\r\n                The Portal class is part of the ArcGIS Enterprise portal that provides a way to build applications that work with\r\n                content from ArcGIS Online or an ArcGIS Enterprise portal.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-portal-Portal.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n            <remarks>\r\n                This component is not needed when using ArcGIS Online resources\r\n            </remarks>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Portal"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","IsEditorRequired":true,"Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Portal.Url\">\r\n            <summary>\r\n                The URL to the portal instance.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Url","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Portal","Common.TypeNameIdentifier":"Portal","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":945414545,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Portal.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Portal"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Portal.ChildContent","Common.TypeNameIdentifier":"Portal","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1078318451,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Portal.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Portal"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Portal.ChildContent","Common.TypeNameIdentifier":"Portal","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1841924303,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource\">\r\n            <summary>\r\n                The PortalBasemapsSource class is a Portal-driven Basemap source in the BasemapGalleryViewModel or BasemapGallery\r\n                widget.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-BasemapGallery-support-PortalBasemapsSource.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PortalBasemapsSource"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"QueryString","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource.QueryString\">\r\n            <summary>\r\n                An query string used to create a custom basemap gallery group query.\r\n            </summary>\r\n            <remarks>\r\n                User either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource.QueryString\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource.QueryParams\" />\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"QueryString","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"QueryParams","TypeName":"System.Collections.Generic.Dictionary<System.String, System.String>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource.QueryParams\">\r\n            <summary>\r\n                An object with key-value pairs used to create a custom basemap gallery group query.\r\n            </summary>\r\n            <remarks>\r\n                User either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource.QueryString\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource.QueryParams\" />\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"QueryParams","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.String>"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource","Common.TypeNameIdentifier":"PortalBasemapsSource","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Runtime.Name":"Components.IComponent"}},{"HashCode":64889284,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource\">\r\n            <summary>\r\n                The PortalBasemapsSource class is a Portal-driven Basemap source in the BasemapGalleryViewModel or BasemapGallery\r\n                widget.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-BasemapGallery-support-PortalBasemapsSource.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"QueryString","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource.QueryString\">\r\n            <summary>\r\n                An query string used to create a custom basemap gallery group query.\r\n            </summary>\r\n            <remarks>\r\n                User either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource.QueryString\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource.QueryParams\" />\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"QueryString","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"QueryParams","TypeName":"System.Collections.Generic.Dictionary<System.String, System.String>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource.QueryParams\">\r\n            <summary>\r\n                An object with key-value pairs used to create a custom basemap gallery group query.\r\n            </summary>\r\n            <remarks>\r\n                User either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource.QueryString\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource.QueryParams\" />\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"QueryParams","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.String>"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource","Common.TypeNameIdentifier":"PortalBasemapsSource","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-2056684140,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PortalBasemapsSource"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource.ChildContent","Common.TypeNameIdentifier":"PortalBasemapsSource","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1270429924,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.PortalBasemapsSource.ChildContent","Common.TypeNameIdentifier":"PortalBasemapsSource","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-952842083,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.PortalItem","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.PortalItem\">\r\n            <summary>\r\n                An item (a unit of content) in the Portal. Each item has a unique identifier and a well known URL that is\r\n                independent of the user owning the item. An item may have associated binary or textual data which is available via\r\n                the item data resource. View the ArcGIS portal API REST documentation for the item for more details.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-portal-PortalItem.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PortalItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","IsEditorRequired":true,"Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.PortalItem.Id\">\r\n            <summary>\r\n                The unique id for the item.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ApiKey","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.PortalItem.ApiKey\">\r\n            <summary>\r\n                An authorization string used to access the portal item. API keys are generated and managed in the ArcGIS Developer\r\n                dashboard. An API key is tied explicitly to an ArcGIS account; it is also used to monitor service usage.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ApiKey","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.PortalItem","Common.TypeNameIdentifier":"PortalItem","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Runtime.Name":"Components.IComponent"}},{"HashCode":-1219139226,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.PortalItem","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.PortalItem\">\r\n            <summary>\r\n                An item (a unit of content) in the Portal. Each item has a unique identifier and a well known URL that is\r\n                independent of the user owning the item. An item may have associated binary or textual data which is available via\r\n                the item data resource. View the ArcGIS portal API REST documentation for the item for more details.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-portal-PortalItem.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.PortalItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","IsEditorRequired":true,"Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.PortalItem.Id\">\r\n            <summary>\r\n                The unique id for the item.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Id","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ApiKey","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.PortalItem.ApiKey\">\r\n            <summary>\r\n                An authorization string used to access the portal item. API keys are generated and managed in the ArcGIS Developer\r\n                dashboard. An API key is tied explicitly to an ArcGIS account; it is also used to monitor service usage.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ApiKey","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.PortalItem","Common.TypeNameIdentifier":"PortalItem","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1714139426,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.PortalItem.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PortalItem"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.PortalItem.ChildContent","Common.TypeNameIdentifier":"PortalItem","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":760801134,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.PortalItem.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.PortalItem"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.PortalItem.ChildContent","Common.TypeNameIdentifier":"PortalItem","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1062653752,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.WebMap","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.WebMap\">\r\n            <summary>\r\n                Loads a WebMap from ArcGIS Online or ArcGIS Enterprise portal into a MapView. It defines the content, style, and\r\n                bookmarks of your webmap, and it can be shared across multiple ArcGIS web and desktop applications.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-WebMap.html\">\r\n                    ArcGIS JS\r\n                    API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"WebMap"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ArcGISDefaultBasemap","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Map.ArcGISDefaultBasemap\">\r\n            <summary>\r\n                Sets the basemap by way of the arcgis basemap name (e.g., arcgis-topographic).\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Map.ArcGISDefaultBasemap\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Map.Basemap\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ArcGISDefaultBasemap","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Ground","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Map.Ground\">\r\n            <summary>\r\n                Specifies the surface properties for the map.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Ground","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.WebMap","Common.TypeNameIdentifier":"WebMap","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Runtime.Name":"Components.IComponent"}},{"HashCode":1025502114,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.WebMap","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.WebMap\">\r\n            <summary>\r\n                Loads a WebMap from ArcGIS Online or ArcGIS Enterprise portal into a MapView. It defines the content, style, and\r\n                bookmarks of your webmap, and it can be shared across multiple ArcGIS web and desktop applications.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-WebMap.html\">\r\n                    ArcGIS JS\r\n                    API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.WebMap"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ArcGISDefaultBasemap","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Map.ArcGISDefaultBasemap\">\r\n            <summary>\r\n                Sets the basemap by way of the arcgis basemap name (e.g., arcgis-topographic).\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Map.ArcGISDefaultBasemap\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Map.Basemap\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ArcGISDefaultBasemap","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Ground","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Map.Ground\">\r\n            <summary>\r\n                Specifies the surface properties for the map.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Ground","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.WebMap","Common.TypeNameIdentifier":"WebMap","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1851072240,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.WebMap.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"WebMap"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.WebMap.ChildContent","Common.TypeNameIdentifier":"WebMap","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1091961031,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.WebMap.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.WebMap"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.WebMap.ChildContent","Common.TypeNameIdentifier":"WebMap","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1240111683,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.WebScene","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.WebScene\">\r\n            <summary>\r\n                The web scene is the core element of 3D mapping across ArcGIS. It defines the content, style, environment, and\r\n                slides of your scene and it can be shared across multiple ArcGIS web and desktop applications\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-WebScene.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"WebScene"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ArcGISDefaultBasemap","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Map.ArcGISDefaultBasemap\">\r\n            <summary>\r\n                Sets the basemap by way of the arcgis basemap name (e.g., arcgis-topographic).\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Map.ArcGISDefaultBasemap\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Map.Basemap\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ArcGISDefaultBasemap","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Ground","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Map.Ground\">\r\n            <summary>\r\n                Specifies the surface properties for the map.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Ground","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.WebScene","Common.TypeNameIdentifier":"WebScene","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Runtime.Name":"Components.IComponent"}},{"HashCode":852979202,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.WebScene","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.WebScene\">\r\n            <summary>\r\n                The web scene is the core element of 3D mapping across ArcGIS. It defines the content, style, environment, and\r\n                slides of your scene and it can be shared across multiple ArcGIS web and desktop applications\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-WebScene.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.WebScene"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ArcGISDefaultBasemap","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Map.ArcGISDefaultBasemap\">\r\n            <summary>\r\n                Sets the basemap by way of the arcgis basemap name (e.g., arcgis-topographic).\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Map.ArcGISDefaultBasemap\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Map.Basemap\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ArcGISDefaultBasemap","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Ground","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Map.Ground\">\r\n            <summary>\r\n                Specifies the surface properties for the map.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Ground","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.WebScene","Common.TypeNameIdentifier":"WebScene","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1900454616,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.WebScene.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"WebScene"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.WebScene.ChildContent","Common.TypeNameIdentifier":"WebScene","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1424476424,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.WebScene.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.WebScene"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.WebScene.ChildContent","Common.TypeNameIdentifier":"WebScene","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-378244852,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Geometries.Extent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Geometries.Extent\">\r\n            <summary>\r\n                The minimum and maximum X and Y coordinates of a bounding box. Extent is used to describe the visible portion of a\r\n                MapView. When working in a SceneView, Camera is used to define the visible part of the map within the view.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-Extent.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Extent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Xmax","TypeName":"System.Double","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Xmax\">\r\n            <summary>\r\n                The maximum X-coordinate of an extent envelope.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Xmax","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Xmin","TypeName":"System.Double","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Xmin\">\r\n            <summary>\r\n                The minimum X-coordinate of an extent envelope.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Xmin","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Ymax","TypeName":"System.Double","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Ymax\">\r\n            <summary>\r\n                The maximum Y-coordinate of an extent envelope.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Ymax","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Ymin","TypeName":"System.Double","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Ymin\">\r\n            <summary>\r\n                The minimum Y-coordinate of an extent envelope.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Ymin","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Zmax","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Zmax\">\r\n            <summary>\r\n                The maximum possible z, or elevation, value in an extent envelope.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Zmax","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Zmin","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Zmin\">\r\n            <summary>\r\n                The minimum possible z, or elevation, value in an extent envelope.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Zmin","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Mmax","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Mmax\">\r\n            <summary>\r\n                The maximum possible m value in an extent envelope.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Mmax","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Mmin","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Mmin\">\r\n            <summary>\r\n                The minimum possible m value in an extent envelope.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Mmin","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Geometries.Extent","Common.TypeNameIdentifier":"Extent","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Geometries","Runtime.Name":"Components.IComponent"}},{"HashCode":89594024,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Geometries.Extent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Geometries.Extent\">\r\n            <summary>\r\n                The minimum and maximum X and Y coordinates of a bounding box. Extent is used to describe the visible portion of a\r\n                MapView. When working in a SceneView, Camera is used to define the visible part of the map within the view.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-Extent.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Geometries.Extent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Xmax","TypeName":"System.Double","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Xmax\">\r\n            <summary>\r\n                The maximum X-coordinate of an extent envelope.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Xmax","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Xmin","TypeName":"System.Double","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Xmin\">\r\n            <summary>\r\n                The minimum X-coordinate of an extent envelope.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Xmin","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Ymax","TypeName":"System.Double","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Ymax\">\r\n            <summary>\r\n                The maximum Y-coordinate of an extent envelope.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Ymax","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Ymin","TypeName":"System.Double","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Ymin\">\r\n            <summary>\r\n                The minimum Y-coordinate of an extent envelope.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Ymin","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"Zmax","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Zmax\">\r\n            <summary>\r\n                The maximum possible z, or elevation, value in an extent envelope.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Zmax","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Zmin","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Zmin\">\r\n            <summary>\r\n                The minimum possible z, or elevation, value in an extent envelope.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Zmin","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Mmax","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Mmax\">\r\n            <summary>\r\n                The maximum possible m value in an extent envelope.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Mmax","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Mmin","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.Extent.Mmin\">\r\n            <summary>\r\n                The minimum possible m value in an extent envelope.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Mmin","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Geometries.Extent","Common.TypeNameIdentifier":"Extent","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Geometries","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":34411830,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Geometries.Extent.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Extent"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Geometries.Extent.ChildContent","Common.TypeNameIdentifier":"Extent","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Geometries","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-500222068,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Geometries.Extent.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Geometries.Extent"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Geometries.Extent.ChildContent","Common.TypeNameIdentifier":"Extent","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Geometries","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-553633040,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Geometries.Point","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Geometries.Point\">\r\n            <summary>\r\n                A location defined by X, Y, and Z coordinates.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-Point.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Point"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Latitude","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.Point.Latitude\">\r\n            <summary>\r\n                The latitude of the point.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Latitude","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Longitude","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.Point.Longitude\">\r\n            <summary>\r\n                The longitude of the point.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Longitude","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"X","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.Point.X\">\r\n            <summary>\r\n                The x-coordinate (easting) of the point in map units.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"X","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Y","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.Point.Y\">\r\n            <summary>\r\n                The y-coordinate (northing) of the point in map units.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Y","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Z","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.Point.Z\">\r\n            <summary>\r\n                The z-coordinate (or elevation) of the point in map units.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Z","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"M","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.Point.M\">\r\n            <summary>\r\n                The m-coordinate of the point in map units.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"M","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Geometries.Point","Common.TypeNameIdentifier":"Point","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Geometries","Runtime.Name":"Components.IComponent"}},{"HashCode":1505950490,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Geometries.Point","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Geometries.Point\">\r\n            <summary>\r\n                A location defined by X, Y, and Z coordinates.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-Point.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Geometries.Point"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Latitude","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.Point.Latitude\">\r\n            <summary>\r\n                The latitude of the point.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Latitude","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Longitude","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.Point.Longitude\">\r\n            <summary>\r\n                The longitude of the point.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Longitude","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"X","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.Point.X\">\r\n            <summary>\r\n                The x-coordinate (easting) of the point in map units.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"X","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Y","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.Point.Y\">\r\n            <summary>\r\n                The y-coordinate (northing) of the point in map units.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Y","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Z","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.Point.Z\">\r\n            <summary>\r\n                The z-coordinate (or elevation) of the point in map units.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Z","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"M","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.Point.M\">\r\n            <summary>\r\n                The m-coordinate of the point in map units.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"M","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Geometries.Point","Common.TypeNameIdentifier":"Point","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Geometries","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":145266779,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Geometries.Point.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Point"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Geometries.Point.ChildContent","Common.TypeNameIdentifier":"Point","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Geometries","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-858949745,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Geometries.Point.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Geometries.Point"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Geometries.Point.ChildContent","Common.TypeNameIdentifier":"Point","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Geometries","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-964623426,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Geometries.Polygon","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Geometries.Polygon\">\r\n            <summary>\r\n                A polygon contains an array of rings and a spatialReference. Each ring is represented as an array of points. The\r\n                first and last points of a ring must be the same. A polygon also has boolean-valued hasM and hasZ fields.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-Polygon.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Polygon"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Rings","TypeName":"dymaptic.GeoBlazor.Core.Objects.MapPath[]","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.Polygon.Rings\">\r\n            <summary>\r\n                An array of <see cref=\"T:dymaptic.GeoBlazor.Core.Objects.MapPath\" /> rings.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Rings","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.MapPath[]"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Geometries.Polygon","Common.TypeNameIdentifier":"Polygon","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Geometries","Runtime.Name":"Components.IComponent"}},{"HashCode":-1295505770,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Geometries.Polygon","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Geometries.Polygon\">\r\n            <summary>\r\n                A polygon contains an array of rings and a spatialReference. Each ring is represented as an array of points. The\r\n                first and last points of a ring must be the same. A polygon also has boolean-valued hasM and hasZ fields.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-Polygon.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Geometries.Polygon"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Rings","TypeName":"dymaptic.GeoBlazor.Core.Objects.MapPath[]","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.Polygon.Rings\">\r\n            <summary>\r\n                An array of <see cref=\"T:dymaptic.GeoBlazor.Core.Objects.MapPath\" /> rings.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Rings","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.MapPath[]"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Geometries.Polygon","Common.TypeNameIdentifier":"Polygon","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Geometries","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-959934727,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Geometries.Polygon.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Polygon"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Geometries.Polygon.ChildContent","Common.TypeNameIdentifier":"Polygon","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Geometries","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":2056141809,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Geometries.Polygon.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Geometries.Polygon"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Geometries.Polygon.ChildContent","Common.TypeNameIdentifier":"Polygon","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Geometries","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1576893574,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine\">\r\n            <summary>\r\n                A polyline contains an array of paths and spatialReference. Each path is represented as an array of points. A\r\n                polyline also has boolean-valued hasM and hasZ properties.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-Polyline.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PolyLine"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Paths","TypeName":"dymaptic.GeoBlazor.Core.Objects.MapPath[]","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine.Paths\">\r\n            <summary>\r\n                An array of <see cref=\"T:dymaptic.GeoBlazor.Core.Objects.MapPath\" /> paths, or line segments, that make up the polyline.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Paths","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.MapPath[]"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine","Common.TypeNameIdentifier":"PolyLine","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Geometries","Runtime.Name":"Components.IComponent"}},{"HashCode":1222303190,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine\">\r\n            <summary>\r\n                A polyline contains an array of paths and spatialReference. Each path is represented as an array of points. A\r\n                polyline also has boolean-valued hasM and hasZ properties.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-Polyline.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Paths","TypeName":"dymaptic.GeoBlazor.Core.Objects.MapPath[]","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine.Paths\">\r\n            <summary>\r\n                An array of <see cref=\"T:dymaptic.GeoBlazor.Core.Objects.MapPath\" /> paths, or line segments, that make up the polyline.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Paths","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.MapPath[]"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine","Common.TypeNameIdentifier":"PolyLine","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Geometries","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1130637857,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PolyLine"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine.ChildContent","Common.TypeNameIdentifier":"PolyLine","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Geometries","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-487352140,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Geometries.PolyLine.ChildContent","Common.TypeNameIdentifier":"PolyLine","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Geometries","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1148403777,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference\">\r\n            <summary>\r\n                Defines the spatial reference of a view, layer, or method parameters. This indicates the projected or geographic\r\n                coordinate system used to locate geographic features in the map. Each projected and geographic coordinate system is\r\n                defined by either a well-known ID (WKID) or a definition string (WKT). Note that for versions prior to ArcGIS 10,\r\n                only WKID was supported. For a full list of supported spatial reference IDs and their corresponding definition\r\n                strings, see Using spatial references.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-SpatialReference.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SpatialReference"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ImageCoordinateSystem","TypeName":"System.Object","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.ImageCoordinateSystem\">\r\n            <summary>\r\n                An image coordinate system defines the spatial reference used to display the image in its original coordinates\r\n                without distortion, map transformations or ortho-rectification.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ImageCoordinateSystem","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"IsWebMercator","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.IsWebMercator\">\r\n            <summary>\r\n                Indicates if the wkid of the spatial reference object is one of the following values: 102113, 102100, 3857.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsWebMercator","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"IsWgs84","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.IsWgs84\">\r\n            <summary>\r\n                Indicates if the wkid of the spatial reference object is 4326.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsWgs84","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"IsWrappable","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.IsWrappable\">\r\n            <summary>\r\n                Indicates if the spatial reference of the map supports wrapping around the International Date Line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsWrappable","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Wkid","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.Wkid\">\r\n            <summary>\r\n                The well-known ID of a spatial reference.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Wkid","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Wkt","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.Wkt\">\r\n            <summary>\r\n                The well-known text that defines a spatial reference.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Wkt","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference","Common.TypeNameIdentifier":"SpatialReference","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Geometries","Runtime.Name":"Components.IComponent"}},{"HashCode":248056708,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference\">\r\n            <summary>\r\n                Defines the spatial reference of a view, layer, or method parameters. This indicates the projected or geographic\r\n                coordinate system used to locate geographic features in the map. Each projected and geographic coordinate system is\r\n                defined by either a well-known ID (WKID) or a definition string (WKT). Note that for versions prior to ArcGIS 10,\r\n                only WKID was supported. For a full list of supported spatial reference IDs and their corresponding definition\r\n                strings, see Using spatial references.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-SpatialReference.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ImageCoordinateSystem","TypeName":"System.Object","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.ImageCoordinateSystem\">\r\n            <summary>\r\n                An image coordinate system defines the spatial reference used to display the image in its original coordinates\r\n                without distortion, map transformations or ortho-rectification.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ImageCoordinateSystem","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"IsWebMercator","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.IsWebMercator\">\r\n            <summary>\r\n                Indicates if the wkid of the spatial reference object is one of the following values: 102113, 102100, 3857.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsWebMercator","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"IsWgs84","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.IsWgs84\">\r\n            <summary>\r\n                Indicates if the wkid of the spatial reference object is 4326.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsWgs84","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"IsWrappable","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.IsWrappable\">\r\n            <summary>\r\n                Indicates if the spatial reference of the map supports wrapping around the International Date Line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsWrappable","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Wkid","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.Wkid\">\r\n            <summary>\r\n                The well-known ID of a spatial reference.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Wkid","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Wkt","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.Wkt\">\r\n            <summary>\r\n                The well-known text that defines a spatial reference.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Wkt","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference","Common.TypeNameIdentifier":"SpatialReference","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Geometries","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":2019009629,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SpatialReference"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.ChildContent","Common.TypeNameIdentifier":"SpatialReference","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Geometries","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":2013305694,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference.ChildContent","Common.TypeNameIdentifier":"SpatialReference","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Geometries","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1874019493,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer\">\r\n            <summary>\r\n                The CSVLayer is a point layer based on a CSV file (.csv, .txt). CSV is a plain-text file format used to\r\n                represent tabular data, including geographic point features (latitude, longitude). Typically the latitude\r\n                coordinate is the Y value, and the longitude coordinate is the X value. The X, Y coordinates must be stored\r\n                in SpatialReference.WGS84 in csv feed.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-CSVLayer.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CSVLayer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.Url\">\r\n            <summary>\r\n                The url for the GeoRSS source data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Url","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Copyright","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.Copyright\">\r\n            <summary>\r\n                A copyright string to identify ownership of the data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Copyright","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"BlendMode","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.BlendMode?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.BlendMode\">\r\n            <summary>\r\n                Blend modes are used to blend layers together to create an interesting effect in a layer, or even to produce what\r\n                seems like a new layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"BlendMode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.BlendMode?"}},{"Kind":"Components.Component","Name":"Delimiter","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.CSVDelimiter?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.Delimiter\">\r\n            <summary>\r\n                The column delimiter. Default is comma (,).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Delimiter","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.CSVDelimiter?"}},{"Kind":"Components.Component","Name":"DisplayField","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.DisplayField\">\r\n            <summary>\r\n                The name of the layer's primary display field. The value of this property matches the name of one of the fields of the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayField","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Opacity\">\r\n            <summary>\r\n                The opacity of the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Opacity","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Title\">\r\n            <summary>\r\n                The title of the layer used to identify it in places such as the Legend and LayerList widgets.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ListMode","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.ListMode?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.ListMode\">\r\n            <summary>\r\n                Indicates how the layer should display in the LayerList widget. The possible values are listed below.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ListMode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.ListMode?"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Visible\">\r\n            <summary>\r\n                Indicates if the layer is visible in the View. When false, the layer may still be added to a Map instance that is\r\n                referenced in a view, but its features will not be visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer","Common.TypeNameIdentifier":"CSVLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Runtime.Name":"Components.IComponent"}},{"HashCode":-427457473,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer\">\r\n            <summary>\r\n                The CSVLayer is a point layer based on a CSV file (.csv, .txt). CSV is a plain-text file format used to\r\n                represent tabular data, including geographic point features (latitude, longitude). Typically the latitude\r\n                coordinate is the Y value, and the longitude coordinate is the X value. The X, Y coordinates must be stored\r\n                in SpatialReference.WGS84 in csv feed.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-CSVLayer.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.Url\">\r\n            <summary>\r\n                The url for the GeoRSS source data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Url","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Copyright","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.Copyright\">\r\n            <summary>\r\n                A copyright string to identify ownership of the data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Copyright","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"BlendMode","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.BlendMode?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.BlendMode\">\r\n            <summary>\r\n                Blend modes are used to blend layers together to create an interesting effect in a layer, or even to produce what\r\n                seems like a new layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"BlendMode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.BlendMode?"}},{"Kind":"Components.Component","Name":"Delimiter","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.CSVDelimiter?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.Delimiter\">\r\n            <summary>\r\n                The column delimiter. Default is comma (,).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Delimiter","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.CSVDelimiter?"}},{"Kind":"Components.Component","Name":"DisplayField","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.DisplayField\">\r\n            <summary>\r\n                The name of the layer's primary display field. The value of this property matches the name of one of the fields of the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayField","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Opacity\">\r\n            <summary>\r\n                The opacity of the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Opacity","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Title\">\r\n            <summary>\r\n                The title of the layer used to identify it in places such as the Legend and LayerList widgets.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ListMode","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.ListMode?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.ListMode\">\r\n            <summary>\r\n                Indicates how the layer should display in the LayerList widget. The possible values are listed below.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ListMode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.ListMode?"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Visible\">\r\n            <summary>\r\n                Indicates if the layer is visible in the View. When false, the layer may still be added to a Map instance that is\r\n                referenced in a view, but its features will not be visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer","Common.TypeNameIdentifier":"CSVLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":111718627,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CSVLayer"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.ChildContent","Common.TypeNameIdentifier":"CSVLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1444356895,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.CSVLayer.ChildContent","Common.TypeNameIdentifier":"CSVLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-704201196,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.ElevationLayer","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.ElevationLayer\">\r\n            <summary>\r\n                ElevationLayer is a tile layer used for rendering elevations in SceneViews. A default world elevation layer can be\r\n                added to the map by setting the map's ground property to world-elevation.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-ElevationLayer.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ElevationLayer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.ElevationLayer.Url\">\r\n            <summary>\r\n                URL pointing to the Elevation layer resource on an ArcGIS Image Server.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Url","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Opacity\">\r\n            <summary>\r\n                The opacity of the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Opacity","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Title\">\r\n            <summary>\r\n                The title of the layer used to identify it in places such as the Legend and LayerList widgets.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ListMode","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.ListMode?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.ListMode\">\r\n            <summary>\r\n                Indicates how the layer should display in the LayerList widget. The possible values are listed below.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ListMode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.ListMode?"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Visible\">\r\n            <summary>\r\n                Indicates if the layer is visible in the View. When false, the layer may still be added to a Map instance that is\r\n                referenced in a view, but its features will not be visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.ElevationLayer","Common.TypeNameIdentifier":"ElevationLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Runtime.Name":"Components.IComponent"}},{"HashCode":729275044,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.ElevationLayer","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.ElevationLayer\">\r\n            <summary>\r\n                ElevationLayer is a tile layer used for rendering elevations in SceneViews. A default world elevation layer can be\r\n                added to the map by setting the map's ground property to world-elevation.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-ElevationLayer.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Layers.ElevationLayer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.ElevationLayer.Url\">\r\n            <summary>\r\n                URL pointing to the Elevation layer resource on an ArcGIS Image Server.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Url","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Opacity\">\r\n            <summary>\r\n                The opacity of the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Opacity","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Title\">\r\n            <summary>\r\n                The title of the layer used to identify it in places such as the Legend and LayerList widgets.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ListMode","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.ListMode?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.ListMode\">\r\n            <summary>\r\n                Indicates how the layer should display in the LayerList widget. The possible values are listed below.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ListMode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.ListMode?"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Visible\">\r\n            <summary>\r\n                Indicates if the layer is visible in the View. When false, the layer may still be added to a Map instance that is\r\n                referenced in a view, but its features will not be visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.ElevationLayer","Common.TypeNameIdentifier":"ElevationLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-83329218,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.ElevationLayer.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ElevationLayer"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.ElevationLayer.ChildContent","Common.TypeNameIdentifier":"ElevationLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1397651262,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.ElevationLayer.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Layers.ElevationLayer"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.ElevationLayer.ChildContent","Common.TypeNameIdentifier":"ElevationLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":213353073,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer\">\r\n            <summary>\r\n                A FeatureLayer is a single layer that can be created from a Map Service or Feature Service; ArcGIS Online or ArcGIS\r\n                Enterprise portal items; or from an array of client-side features. The layer can be either a spatial (has\r\n                geographic features) or non-spatial (table).\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n            <example>\r\n                <a target=\"_blank\" href=\"https://samples.geoblazor.com/feature-layers\">Sample - Feature Layers</a>\r\n            </example>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FeatureLayer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.Url\">\r\n            <summary>\r\n                The absolute URL of the REST endpoint of the layer, non-spatial table or service\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Url","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DefinitionExpression","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.DefinitionExpression\">\r\n            <summary>\r\n                The SQL where clause used to filter features on the client.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DefinitionExpression","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OutFields","TypeName":"System.String[]","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.OutFields\">\r\n            <summary>\r\n                An array of field names from the service to include with each feature.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OutFields","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"MinScale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.MinScale\">\r\n            <summary>\r\n                The minimum scale (most zoomed out) at which the layer is visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinScale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"MaxScale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.MaxScale\">\r\n            <summary>\r\n                The maximum scale (most zoomed in) at which the layer is visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxScale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"ObjectIdField","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.ObjectIdField\">\r\n            <summary>\r\n                The name of an oidfield containing a unique value or identifier for each feature in the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ObjectIdField","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GeometryType","TypeName":"dymaptic.GeoBlazor.Core.Components.Geometries.GeometryType?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.GeometryType\">\r\n            <summary>\r\n                The geometry type of the feature layer. All features must be of the same type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GeometryType","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Geometries.GeometryType?"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Opacity\">\r\n            <summary>\r\n                The opacity of the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Opacity","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Title\">\r\n            <summary>\r\n                The title of the layer used to identify it in places such as the Legend and LayerList widgets.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ListMode","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.ListMode?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.ListMode\">\r\n            <summary>\r\n                Indicates how the layer should display in the LayerList widget. The possible values are listed below.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ListMode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.ListMode?"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Visible\">\r\n            <summary>\r\n                Indicates if the layer is visible in the View. When false, the layer may still be added to a Map instance that is\r\n                referenced in a view, but its features will not be visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer","Common.TypeNameIdentifier":"FeatureLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Runtime.Name":"Components.IComponent"}},{"HashCode":-862858794,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer\">\r\n            <summary>\r\n                A FeatureLayer is a single layer that can be created from a Map Service or Feature Service; ArcGIS Online or ArcGIS\r\n                Enterprise portal items; or from an array of client-side features. The layer can be either a spatial (has\r\n                geographic features) or non-spatial (table).\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n            <example>\r\n                <a target=\"_blank\" href=\"https://samples.geoblazor.com/feature-layers\">Sample - Feature Layers</a>\r\n            </example>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.Url\">\r\n            <summary>\r\n                The absolute URL of the REST endpoint of the layer, non-spatial table or service\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Url","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DefinitionExpression","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.DefinitionExpression\">\r\n            <summary>\r\n                The SQL where clause used to filter features on the client.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DefinitionExpression","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OutFields","TypeName":"System.String[]","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.OutFields\">\r\n            <summary>\r\n                An array of field names from the service to include with each feature.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OutFields","Common.GloballyQualifiedTypeName":"global::System.String[]"}},{"Kind":"Components.Component","Name":"MinScale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.MinScale\">\r\n            <summary>\r\n                The minimum scale (most zoomed out) at which the layer is visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinScale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"MaxScale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.MaxScale\">\r\n            <summary>\r\n                The maximum scale (most zoomed in) at which the layer is visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxScale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"ObjectIdField","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.ObjectIdField\">\r\n            <summary>\r\n                The name of an oidfield containing a unique value or identifier for each feature in the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ObjectIdField","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"GeometryType","TypeName":"dymaptic.GeoBlazor.Core.Components.Geometries.GeometryType?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.GeometryType\">\r\n            <summary>\r\n                The geometry type of the feature layer. All features must be of the same type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GeometryType","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Geometries.GeometryType?"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Opacity\">\r\n            <summary>\r\n                The opacity of the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Opacity","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Title\">\r\n            <summary>\r\n                The title of the layer used to identify it in places such as the Legend and LayerList widgets.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ListMode","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.ListMode?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.ListMode\">\r\n            <summary>\r\n                Indicates how the layer should display in the LayerList widget. The possible values are listed below.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ListMode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.ListMode?"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Visible\">\r\n            <summary>\r\n                Indicates if the layer is visible in the View. When false, the layer may still be added to a Map instance that is\r\n                referenced in a view, but its features will not be visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer","Common.TypeNameIdentifier":"FeatureLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1546586183,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"FeatureLayer"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.ChildContent","Common.TypeNameIdentifier":"FeatureLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1618164923,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.FeatureLayer.ChildContent","Common.TypeNameIdentifier":"FeatureLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":2033996545,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.Field","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.Field\">\r\n            <summary>\r\n                Information about each field in a layer. Field objects must be constructed when creating a FeatureLayer from\r\n                client-side graphics. This class allows you to define the schema of each field in the FeatureLayer.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-support-Field.html\">ArcGIS JS API</a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Field"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Field.Name\">\r\n            <summary>\r\n                The name of the field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Alias","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Field.Alias\">\r\n            <summary>\r\n                The display name for the field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Alias","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Type","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.FieldType","IsEnum":true,"Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Field.Type\">\r\n            <summary>\r\n                The data type of the field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.FieldType"}},{"Kind":"Components.Component","Name":"DefaultValue","TypeName":"System.Object","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Field.DefaultValue\">\r\n            <summary>\r\n                The default value set for the field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DefaultValue","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Field.Description\">\r\n            <summary>\r\n                Contains information describing the purpose of each field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Description","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Editable","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Field.Editable\">\r\n            <summary>\r\n                Indicates whether the field is editable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Editable","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Nullable","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Field.Nullable\">\r\n            <summary>\r\n                Indicates if the field can accept null values.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Nullable","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Length","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Field.Length\">\r\n            <summary>\r\n                The field length.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Length","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"ValueType","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Field.ValueType\">\r\n            <summary>\r\n                The types of values that can be assigned to a field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueType","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.Field","Common.TypeNameIdentifier":"Field","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Runtime.Name":"Components.IComponent"}},{"HashCode":-919575554,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.Field","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.Field\">\r\n            <summary>\r\n                Information about each field in a layer. Field objects must be constructed when creating a FeatureLayer from\r\n                client-side graphics. This class allows you to define the schema of each field in the FeatureLayer.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-support-Field.html\">ArcGIS JS API</a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Layers.Field"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Field.Name\">\r\n            <summary>\r\n                The name of the field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Alias","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Field.Alias\">\r\n            <summary>\r\n                The display name for the field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Alias","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Type","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.FieldType","IsEnum":true,"Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Field.Type\">\r\n            <summary>\r\n                The data type of the field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.FieldType"}},{"Kind":"Components.Component","Name":"DefaultValue","TypeName":"System.Object","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Field.DefaultValue\">\r\n            <summary>\r\n                The default value set for the field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DefaultValue","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Field.Description\">\r\n            <summary>\r\n                Contains information describing the purpose of each field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Description","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Editable","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Field.Editable\">\r\n            <summary>\r\n                Indicates whether the field is editable.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Editable","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Nullable","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Field.Nullable\">\r\n            <summary>\r\n                Indicates if the field can accept null values.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Nullable","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Length","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Field.Length\">\r\n            <summary>\r\n                The field length.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Length","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"ValueType","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Field.ValueType\">\r\n            <summary>\r\n                The types of values that can be assigned to a field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueType","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.FieldValueType?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.Field","Common.TypeNameIdentifier":"Field","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-172597256,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.Field.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Field"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.Field.ChildContent","Common.TypeNameIdentifier":"Field","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1411659324,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.Field.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Layers.Field"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.Field.ChildContent","Common.TypeNameIdentifier":"Field","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-731680420,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer\">\r\n            <summary>\r\n                The GeoJSONLayer class is used to create a layer based on GeoJSON. GeoJSON is a format for encoding a variety of\r\n                geographic data structures. The GeoJSON data must comply with the RFC 7946 specification which states that the\r\n                coordinates are in SpatialReference.WGS84.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-GeoJSONLayer.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n            <example>\r\n                <a target=\"_blank\" href=\"https://samples.geoblazor.com/pro-projection\">Sample - Display Projection</a>\r\n            </example>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GeoJSONLayer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer.Url\">\r\n            <summary>\r\n                The url for the GeoJSON source data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Url","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Copyright","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer.Copyright\">\r\n            <summary>\r\n                A copyright string to identify ownership of the data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Copyright","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Opacity\">\r\n            <summary>\r\n                The opacity of the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Opacity","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Title\">\r\n            <summary>\r\n                The title of the layer used to identify it in places such as the Legend and LayerList widgets.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ListMode","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.ListMode?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.ListMode\">\r\n            <summary>\r\n                Indicates how the layer should display in the LayerList widget. The possible values are listed below.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ListMode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.ListMode?"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Visible\">\r\n            <summary>\r\n                Indicates if the layer is visible in the View. When false, the layer may still be added to a Map instance that is\r\n                referenced in a view, but its features will not be visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer","Common.TypeNameIdentifier":"GeoJSONLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Runtime.Name":"Components.IComponent"}},{"HashCode":1522738045,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer\">\r\n            <summary>\r\n                The GeoJSONLayer class is used to create a layer based on GeoJSON. GeoJSON is a format for encoding a variety of\r\n                geographic data structures. The GeoJSON data must comply with the RFC 7946 specification which states that the\r\n                coordinates are in SpatialReference.WGS84.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-GeoJSONLayer.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n            <example>\r\n                <a target=\"_blank\" href=\"https://samples.geoblazor.com/pro-projection\">Sample - Display Projection</a>\r\n            </example>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer.Url\">\r\n            <summary>\r\n                The url for the GeoJSON source data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Url","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Copyright","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer.Copyright\">\r\n            <summary>\r\n                A copyright string to identify ownership of the data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Copyright","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Opacity\">\r\n            <summary>\r\n                The opacity of the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Opacity","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Title\">\r\n            <summary>\r\n                The title of the layer used to identify it in places such as the Legend and LayerList widgets.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ListMode","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.ListMode?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.ListMode\">\r\n            <summary>\r\n                Indicates how the layer should display in the LayerList widget. The possible values are listed below.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ListMode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.ListMode?"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Visible\">\r\n            <summary>\r\n                Indicates if the layer is visible in the View. When false, the layer may still be added to a Map instance that is\r\n                referenced in a view, but its features will not be visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer","Common.TypeNameIdentifier":"GeoJSONLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-546787736,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"GeoJSONLayer"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer.ChildContent","Common.TypeNameIdentifier":"GeoJSONLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1121057020,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.GeoJSONLayer.ChildContent","Common.TypeNameIdentifier":"GeoJSONLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":381641570,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.GeoRSSLayer","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.GeoRSSLayer\">\r\n            <summary>\r\n                The GeoRSSLayer class is used to create a layer based on GeoRSS. GeoRSS is a way to add geographic information to\r\n                an RSS feed. The GeoRSSLayer supports both GeoRSS-Simple and GeoRSS GML encodings, and multiple geometry types.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-GeoRSSLayer.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GeoRSSLayer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.GeoRSSLayer.Url\">\r\n            <summary>\r\n                The url for the GeoRSS source data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Url","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Opacity\">\r\n            <summary>\r\n                The opacity of the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Opacity","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Title\">\r\n            <summary>\r\n                The title of the layer used to identify it in places such as the Legend and LayerList widgets.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ListMode","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.ListMode?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.ListMode\">\r\n            <summary>\r\n                Indicates how the layer should display in the LayerList widget. The possible values are listed below.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ListMode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.ListMode?"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Visible\">\r\n            <summary>\r\n                Indicates if the layer is visible in the View. When false, the layer may still be added to a Map instance that is\r\n                referenced in a view, but its features will not be visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.GeoRSSLayer","Common.TypeNameIdentifier":"GeoRSSLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Runtime.Name":"Components.IComponent"}},{"HashCode":1287957345,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.GeoRSSLayer","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.GeoRSSLayer\">\r\n            <summary>\r\n                The GeoRSSLayer class is used to create a layer based on GeoRSS. GeoRSS is a way to add geographic information to\r\n                an RSS feed. The GeoRSSLayer supports both GeoRSS-Simple and GeoRSS GML encodings, and multiple geometry types.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-GeoRSSLayer.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Layers.GeoRSSLayer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.GeoRSSLayer.Url\">\r\n            <summary>\r\n                The url for the GeoRSS source data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Url","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Opacity\">\r\n            <summary>\r\n                The opacity of the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Opacity","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Title\">\r\n            <summary>\r\n                The title of the layer used to identify it in places such as the Legend and LayerList widgets.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ListMode","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.ListMode?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.ListMode\">\r\n            <summary>\r\n                Indicates how the layer should display in the LayerList widget. The possible values are listed below.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ListMode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.ListMode?"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Visible\">\r\n            <summary>\r\n                Indicates if the layer is visible in the View. When false, the layer may still be added to a Map instance that is\r\n                referenced in a view, but its features will not be visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.GeoRSSLayer","Common.TypeNameIdentifier":"GeoRSSLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-27465612,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.GeoRSSLayer.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"GeoRSSLayer"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.GeoRSSLayer.ChildContent","Common.TypeNameIdentifier":"GeoRSSLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1014505980,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.GeoRSSLayer.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Layers.GeoRSSLayer"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.GeoRSSLayer.ChildContent","Common.TypeNameIdentifier":"GeoRSSLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1995546530,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.Graphic","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.Graphic\">\r\n            <summary>\r\n                A Graphic is a vector representation of real world geographic phenomena. It can contain geometry, a symbol, and\r\n                attributes. A Graphic is displayed in the GraphicsLayer.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-Graphic.html\">\r\n                    ArcGIS JS\r\n                    API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Graphic"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Attributes","TypeName":"dymaptic.GeoBlazor.Core.Objects.AttributesDictionary","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Graphic.Attributes\">\r\n            <summary>\r\n                Name-value pairs of fields and field values associated with the graphic.\r\n            </summary>\r\n            <remarks>\r\n                This collection should only be set via the constructor or as a markup parameter/attribute. To add or remove\r\n                members, use the methods defined in <see cref=\"T:dymaptic.GeoBlazor.Core.Objects.AttributesDictionary\" />\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.AttributesDictionary"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.Graphic","Common.TypeNameIdentifier":"Graphic","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Runtime.Name":"Components.IComponent"}},{"HashCode":1901072298,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.Graphic","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.Graphic\">\r\n            <summary>\r\n                A Graphic is a vector representation of real world geographic phenomena. It can contain geometry, a symbol, and\r\n                attributes. A Graphic is displayed in the GraphicsLayer.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-Graphic.html\">\r\n                    ArcGIS JS\r\n                    API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Layers.Graphic"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Attributes","TypeName":"dymaptic.GeoBlazor.Core.Objects.AttributesDictionary","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Graphic.Attributes\">\r\n            <summary>\r\n                Name-value pairs of fields and field values associated with the graphic.\r\n            </summary>\r\n            <remarks>\r\n                This collection should only be set via the constructor or as a markup parameter/attribute. To add or remove\r\n                members, use the methods defined in <see cref=\"T:dymaptic.GeoBlazor.Core.Objects.AttributesDictionary\" />\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Attributes","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.AttributesDictionary"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.Graphic","Common.TypeNameIdentifier":"Graphic","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-2123407004,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.Graphic.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Graphic"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.Graphic.ChildContent","Common.TypeNameIdentifier":"Graphic","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1636735694,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.Graphic.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Layers.Graphic"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.Graphic.ChildContent","Common.TypeNameIdentifier":"Graphic","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-604568014,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer\">\r\n            <summary>\r\n                A GraphicsLayer contains one or more client-side Graphics. Each graphic in the GraphicsLayer is rendered in a\r\n                LayerView inside either a SceneView or a MapView. The graphics contain discrete vector geometries that represent\r\n                real-world phenomena.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-GraphicsLayer.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GraphicsLayer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Opacity\">\r\n            <summary>\r\n                The opacity of the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Opacity","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Title\">\r\n            <summary>\r\n                The title of the layer used to identify it in places such as the Legend and LayerList widgets.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ListMode","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.ListMode?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.ListMode\">\r\n            <summary>\r\n                Indicates how the layer should display in the LayerList widget. The possible values are listed below.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ListMode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.ListMode?"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Visible\">\r\n            <summary>\r\n                Indicates if the layer is visible in the View. When false, the layer may still be added to a Map instance that is\r\n                referenced in a view, but its features will not be visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer","Common.TypeNameIdentifier":"GraphicsLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Runtime.Name":"Components.IComponent"}},{"HashCode":1728795962,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer\">\r\n            <summary>\r\n                A GraphicsLayer contains one or more client-side Graphics. Each graphic in the GraphicsLayer is rendered in a\r\n                LayerView inside either a SceneView or a MapView. The graphics contain discrete vector geometries that represent\r\n                real-world phenomena.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-GraphicsLayer.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Opacity\">\r\n            <summary>\r\n                The opacity of the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Opacity","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Title\">\r\n            <summary>\r\n                The title of the layer used to identify it in places such as the Legend and LayerList widgets.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ListMode","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.ListMode?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.ListMode\">\r\n            <summary>\r\n                Indicates how the layer should display in the LayerList widget. The possible values are listed below.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ListMode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.ListMode?"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Visible\">\r\n            <summary>\r\n                Indicates if the layer is visible in the View. When false, the layer may still be added to a Map instance that is\r\n                referenced in a view, but its features will not be visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer","Common.TypeNameIdentifier":"GraphicsLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1916087894,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"GraphicsLayer"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer.ChildContent","Common.TypeNameIdentifier":"GraphicsLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1720183264,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.GraphicsLayer.ChildContent","Common.TypeNameIdentifier":"GraphicsLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1802228532,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.KMLLayer","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.KMLLayer\">\r\n            <summary>\r\n                The KMLLayer class is used to create a layer based on a KML file (.kml, .kmz). KML is an XML-based file format used\r\n                to represent geographic features.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-KMLLayer.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"KMLLayer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.KMLLayer.Url\">\r\n            <summary>\r\n                The url for the KML Layer source data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Url","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Opacity\">\r\n            <summary>\r\n                The opacity of the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Opacity","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Title\">\r\n            <summary>\r\n                The title of the layer used to identify it in places such as the Legend and LayerList widgets.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ListMode","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.ListMode?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.ListMode\">\r\n            <summary>\r\n                Indicates how the layer should display in the LayerList widget. The possible values are listed below.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ListMode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.ListMode?"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Visible\">\r\n            <summary>\r\n                Indicates if the layer is visible in the View. When false, the layer may still be added to a Map instance that is\r\n                referenced in a view, but its features will not be visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.KMLLayer","Common.TypeNameIdentifier":"KMLLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Runtime.Name":"Components.IComponent"}},{"HashCode":-1642259591,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.KMLLayer","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.KMLLayer\">\r\n            <summary>\r\n                The KMLLayer class is used to create a layer based on a KML file (.kml, .kmz). KML is an XML-based file format used\r\n                to represent geographic features.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-KMLLayer.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Layers.KMLLayer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.KMLLayer.Url\">\r\n            <summary>\r\n                The url for the KML Layer source data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Url","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Opacity\">\r\n            <summary>\r\n                The opacity of the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Opacity","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Title\">\r\n            <summary>\r\n                The title of the layer used to identify it in places such as the Legend and LayerList widgets.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ListMode","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.ListMode?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.ListMode\">\r\n            <summary>\r\n                Indicates how the layer should display in the LayerList widget. The possible values are listed below.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ListMode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.ListMode?"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Visible\">\r\n            <summary>\r\n                Indicates if the layer is visible in the View. When false, the layer may still be added to a Map instance that is\r\n                referenced in a view, but its features will not be visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.KMLLayer","Common.TypeNameIdentifier":"KMLLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":866397014,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.KMLLayer.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"KMLLayer"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.KMLLayer.ChildContent","Common.TypeNameIdentifier":"KMLLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1824833733,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.KMLLayer.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Layers.KMLLayer"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.KMLLayer.ChildContent","Common.TypeNameIdentifier":"KMLLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":473512494,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.Label","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.Label\">\r\n            <summary>\r\n                Defines label expressions, symbols, scale ranges, label priorities, and label placement options for labels on a\r\n                layer. See the Labeling guide for more information about labeling.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-support-LabelClass.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Label"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"LabelPlacement","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Label.LabelPlacement\">\r\n            <summary>\r\n                The position of the label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LabelPlacement","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelExpression","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Label.LabelExpression\">\r\n            <summary>\r\n                Defines the labels for a MapImageLayer.\r\n            </summary>\r\n            <remarks>\r\n                MapImageLayer not yet implemented in GeoBlazor\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"LabelExpression","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.Label","Common.TypeNameIdentifier":"Label","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Runtime.Name":"Components.IComponent"}},{"HashCode":1731565186,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.Label","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.Label\">\r\n            <summary>\r\n                Defines label expressions, symbols, scale ranges, label priorities, and label placement options for labels on a\r\n                layer. See the Labeling guide for more information about labeling.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-support-LabelClass.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Layers.Label"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"LabelPlacement","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Label.LabelPlacement\">\r\n            <summary>\r\n                The position of the label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LabelPlacement","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"LabelExpression","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Label.LabelExpression\">\r\n            <summary>\r\n                Defines the labels for a MapImageLayer.\r\n            </summary>\r\n            <remarks>\r\n                MapImageLayer not yet implemented in GeoBlazor\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"LabelExpression","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.Label","Common.TypeNameIdentifier":"Label","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1305964215,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.Label.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Label"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.Label.ChildContent","Common.TypeNameIdentifier":"Label","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1444208026,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.Label.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Layers.Label"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.Label.ChildContent","Common.TypeNameIdentifier":"Label","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":853812917,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.LabelExpressionInfo","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.LabelExpressionInfo\">\r\n            <summary>\r\n                If working with a MapImageLayer that supports Arcade, you can also use labelExpressionInfo. To determine this,\r\n                check the supportsArcadeExpressionForLabeling property. If true, then labelExpression or labelExpressionInfo can be\r\n                used. If false, then only labelExpression can be used.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-support-LabelClass.html#labelExpressionInfo\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n            <remarks>\r\n                MapImageLayer not yet implemented in GeoBlazor\r\n            </remarks>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LabelExpressionInfo"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Expression","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.LabelExpressionInfo.Expression\">\r\n            <summary>\r\n                An Arcade expression following the specification defined by the Arcade Labeling Profile. Expressions in labels may\r\n                reference field values using the $feature global variable and must return a string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Expression","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.LabelExpressionInfo","Common.TypeNameIdentifier":"LabelExpressionInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Runtime.Name":"Components.IComponent"}},{"HashCode":407622695,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.LabelExpressionInfo","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.LabelExpressionInfo\">\r\n            <summary>\r\n                If working with a MapImageLayer that supports Arcade, you can also use labelExpressionInfo. To determine this,\r\n                check the supportsArcadeExpressionForLabeling property. If true, then labelExpression or labelExpressionInfo can be\r\n                used. If false, then only labelExpression can be used.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-support-LabelClass.html#labelExpressionInfo\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n            <remarks>\r\n                MapImageLayer not yet implemented in GeoBlazor\r\n            </remarks>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Layers.LabelExpressionInfo"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Expression","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.LabelExpressionInfo.Expression\">\r\n            <summary>\r\n                An Arcade expression following the specification defined by the Arcade Labeling Profile. Expressions in labels may\r\n                reference field values using the $feature global variable and must return a string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Expression","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.LabelExpressionInfo","Common.TypeNameIdentifier":"LabelExpressionInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1702552719,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.LabelExpressionInfo.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"LabelExpressionInfo"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.LabelExpressionInfo.ChildContent","Common.TypeNameIdentifier":"LabelExpressionInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-583870375,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.LabelExpressionInfo.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Layers.LabelExpressionInfo"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.LabelExpressionInfo.ChildContent","Common.TypeNameIdentifier":"LabelExpressionInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1301762000,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.OpenStreetMapLayer","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.OpenStreetMapLayer\">\r\n            <summary>\r\n                Allows you to use basemaps from OpenStreetMap. Set the tileservers property to change which OpenStreetMap tiles you\r\n                want to use.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-OpenStreetMapLayer.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"OpenStreetMapLayer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"BlendMode","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.BlendMode?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.BlendMode\">\r\n            <summary>\r\n                Blend modes are used to blend layers together to create an interesting effect in a layer, or even to produce what\r\n                seems like a new layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"BlendMode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.BlendMode?"}},{"Kind":"Components.Component","Name":"Copyright","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.Copyright\">\r\n            <summary>\r\n                The attribution information for the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Copyright","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MaxScale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.MaxScale\">\r\n            <summary>\r\n                The maximum scale (most zoomed in) at which the layer is visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxScale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"MinScale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.MinScale\">\r\n            <summary>\r\n                The minimum scale (most zoomed out) at which the layer is visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinScale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"RefreshInterval","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.RefreshInterval\">\r\n            <summary>\r\n                Refresh interval of the layer in minutes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RefreshInterval","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"SubDomains","TypeName":"System.Collections.Generic.IList<System.String>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.SubDomains\">\r\n            <summary>\r\n                A string of subDomain names where tiles are served to speed up tile retrieval. If subDomains are specified, the\r\n                <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.UrlTemplate\" /> should include a {subDomain} place holder.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SubDomains","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IList<global::System.String>"}},{"Kind":"Components.Component","Name":"UrlTemplate","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.UrlTemplate\">\r\n            <summary>\r\n                The url template is a string that specifies the URL of the hosted tile images to load. The url template resembles\r\n                an absolute URL but with a number of placeholder strings that the source evaluates to decide which tiles to load.\r\n            </summary>\r\n            <remarks>\r\n                The url template can follow a pattern of https://some.domain.com/{level}/{col}/{row}/ where level corresponds to a\r\n                zoom level, and column and row represent a tile column and row, respectively. It can also follow a pattern of\r\n                https://some.domain.com/{z}/{x}/{y}/ where z corresponds to a zoom level, and x and y represent a tile location\r\n                along x and y axis. The urlTemplate should contain a {subDomain} place holder if subDomains are specified.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"UrlTemplate","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Opacity\">\r\n            <summary>\r\n                The opacity of the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Opacity","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Title\">\r\n            <summary>\r\n                The title of the layer used to identify it in places such as the Legend and LayerList widgets.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ListMode","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.ListMode?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.ListMode\">\r\n            <summary>\r\n                Indicates how the layer should display in the LayerList widget. The possible values are listed below.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ListMode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.ListMode?"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Visible\">\r\n            <summary>\r\n                Indicates if the layer is visible in the View. When false, the layer may still be added to a Map instance that is\r\n                referenced in a view, but its features will not be visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.OpenStreetMapLayer","Common.TypeNameIdentifier":"OpenStreetMapLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Runtime.Name":"Components.IComponent"}},{"HashCode":-1726648680,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.OpenStreetMapLayer","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.OpenStreetMapLayer\">\r\n            <summary>\r\n                Allows you to use basemaps from OpenStreetMap. Set the tileservers property to change which OpenStreetMap tiles you\r\n                want to use.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-OpenStreetMapLayer.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Layers.OpenStreetMapLayer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"BlendMode","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.BlendMode?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.BlendMode\">\r\n            <summary>\r\n                Blend modes are used to blend layers together to create an interesting effect in a layer, or even to produce what\r\n                seems like a new layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"BlendMode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.BlendMode?"}},{"Kind":"Components.Component","Name":"Copyright","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.Copyright\">\r\n            <summary>\r\n                The attribution information for the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Copyright","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MaxScale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.MaxScale\">\r\n            <summary>\r\n                The maximum scale (most zoomed in) at which the layer is visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxScale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"MinScale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.MinScale\">\r\n            <summary>\r\n                The minimum scale (most zoomed out) at which the layer is visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinScale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"RefreshInterval","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.RefreshInterval\">\r\n            <summary>\r\n                Refresh interval of the layer in minutes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RefreshInterval","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"SubDomains","TypeName":"System.Collections.Generic.IList<System.String>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.SubDomains\">\r\n            <summary>\r\n                A string of subDomain names where tiles are served to speed up tile retrieval. If subDomains are specified, the\r\n                <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.UrlTemplate\" /> should include a {subDomain} place holder.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SubDomains","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IList<global::System.String>"}},{"Kind":"Components.Component","Name":"UrlTemplate","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.UrlTemplate\">\r\n            <summary>\r\n                The url template is a string that specifies the URL of the hosted tile images to load. The url template resembles\r\n                an absolute URL but with a number of placeholder strings that the source evaluates to decide which tiles to load.\r\n            </summary>\r\n            <remarks>\r\n                The url template can follow a pattern of https://some.domain.com/{level}/{col}/{row}/ where level corresponds to a\r\n                zoom level, and column and row represent a tile column and row, respectively. It can also follow a pattern of\r\n                https://some.domain.com/{z}/{x}/{y}/ where z corresponds to a zoom level, and x and y represent a tile location\r\n                along x and y axis. The urlTemplate should contain a {subDomain} place holder if subDomains are specified.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"UrlTemplate","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Opacity\">\r\n            <summary>\r\n                The opacity of the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Opacity","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Title\">\r\n            <summary>\r\n                The title of the layer used to identify it in places such as the Legend and LayerList widgets.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ListMode","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.ListMode?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.ListMode\">\r\n            <summary>\r\n                Indicates how the layer should display in the LayerList widget. The possible values are listed below.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ListMode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.ListMode?"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Visible\">\r\n            <summary>\r\n                Indicates if the layer is visible in the View. When false, the layer may still be added to a Map instance that is\r\n                referenced in a view, but its features will not be visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.OpenStreetMapLayer","Common.TypeNameIdentifier":"OpenStreetMapLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1173763256,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.OpenStreetMapLayer.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"OpenStreetMapLayer"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.OpenStreetMapLayer.ChildContent","Common.TypeNameIdentifier":"OpenStreetMapLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1095503341,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.OpenStreetMapLayer.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Layers.OpenStreetMapLayer"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.OpenStreetMapLayer.ChildContent","Common.TypeNameIdentifier":"OpenStreetMapLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1781510844,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.OrderedLayerOrderBy","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.OrderedLayerOrderBy\">\r\n            <summary>\r\n                Determines the order in which features are drawn in the view.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"OrderedLayerOrderBy"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Field","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.OrderedLayerOrderBy.Field\">\r\n            <summary>\r\n                The number or date field whose values will be used to sort features.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Field","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.OrderedLayerOrderBy.ValueExpression\">\r\n            <summary>\r\n                An [Arcade](https://developers.arcgis.com/javascript/latest/arcade/) expression following the specification defined\r\n                by the [Arcade Feature Z Profile](https://developers.arcgis.com/javascript/latest/arcade/#feature-sorting).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Order","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.SortOrder?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.OrderedLayerOrderBy.Order\">\r\n            <summary>\r\n                The sort order\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Order","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.SortOrder?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.OrderedLayerOrderBy","Common.TypeNameIdentifier":"OrderedLayerOrderBy","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Runtime.Name":"Components.IComponent"}},{"HashCode":-764108356,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.OrderedLayerOrderBy","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.OrderedLayerOrderBy\">\r\n            <summary>\r\n                Determines the order in which features are drawn in the view.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Layers.OrderedLayerOrderBy"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Field","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.OrderedLayerOrderBy.Field\">\r\n            <summary>\r\n                The number or date field whose values will be used to sort features.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Field","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.OrderedLayerOrderBy.ValueExpression\">\r\n            <summary>\r\n                An [Arcade](https://developers.arcgis.com/javascript/latest/arcade/) expression following the specification defined\r\n                by the [Arcade Feature Z Profile](https://developers.arcgis.com/javascript/latest/arcade/#feature-sorting).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Order","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.SortOrder?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.OrderedLayerOrderBy.Order\">\r\n            <summary>\r\n                The sort order\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Order","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.SortOrder?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.OrderedLayerOrderBy","Common.TypeNameIdentifier":"OrderedLayerOrderBy","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1036090869,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.OrderedLayerOrderBy.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"OrderedLayerOrderBy"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.OrderedLayerOrderBy.ChildContent","Common.TypeNameIdentifier":"OrderedLayerOrderBy","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":102044203,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.OrderedLayerOrderBy.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Layers.OrderedLayerOrderBy"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.OrderedLayerOrderBy.ChildContent","Common.TypeNameIdentifier":"OrderedLayerOrderBy","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-875822212,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.RotationVariable","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.RotationVariable\">\r\n            <summary>\r\n                The rotation visual variable defines how features rendered with marker symbols or text symbols in a MapView are\r\n                rotated. The rotation value is determined by mapping the values to data in a field, or by other arithmetic means\r\n                with an Arcade expression.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-renderers-visualVariables-RotationVariable.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"RotationVariable"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Axis","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.RotationVariable.Axis\">\r\n            <summary>\r\n                Only applicable when working in a SceneView.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Axis","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"RotationType","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.RotationType?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.RotationVariable.RotationType\">\r\n            <summary>\r\n                Defines the origin and direction of rotation depending on how the angle of rotation was measured.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RotationType","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.RotationType?"}},{"Kind":"Components.Component","Name":"Field","TypeName":"System.String","IsEditorRequired":true,"Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.VisualVariable.Field\">\r\n            <summary>\r\n                The name of the numeric attribute field that contains the data values used to determine the\r\n                color/opacity/size/rotation of each feature.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Field","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.RotationVariable","Common.TypeNameIdentifier":"RotationVariable","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Runtime.Name":"Components.IComponent"}},{"HashCode":-1565713688,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.RotationVariable","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.RotationVariable\">\r\n            <summary>\r\n                The rotation visual variable defines how features rendered with marker symbols or text symbols in a MapView are\r\n                rotated. The rotation value is determined by mapping the values to data in a field, or by other arithmetic means\r\n                with an Arcade expression.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-renderers-visualVariables-RotationVariable.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Layers.RotationVariable"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Axis","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.RotationVariable.Axis\">\r\n            <summary>\r\n                Only applicable when working in a SceneView.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Axis","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"RotationType","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.RotationType?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.RotationVariable.RotationType\">\r\n            <summary>\r\n                Defines the origin and direction of rotation depending on how the angle of rotation was measured.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RotationType","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.RotationType?"}},{"Kind":"Components.Component","Name":"Field","TypeName":"System.String","IsEditorRequired":true,"Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.VisualVariable.Field\">\r\n            <summary>\r\n                The name of the numeric attribute field that contains the data values used to determine the\r\n                color/opacity/size/rotation of each feature.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Field","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.RotationVariable","Common.TypeNameIdentifier":"RotationVariable","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":544177391,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.RotationVariable.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"RotationVariable"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.RotationVariable.ChildContent","Common.TypeNameIdentifier":"RotationVariable","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1702544128,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.RotationVariable.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Layers.RotationVariable"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.RotationVariable.ChildContent","Common.TypeNameIdentifier":"RotationVariable","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-377938664,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable\">\r\n            <summary>\r\n                The size visual variable defines the size of individual features in a layer based on a numeric (often thematic)\r\n                value.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-renderers-visualVariables-SizeVariable.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SizeVariable"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"MinDataValue","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.MinDataValue\">\r\n            <summary>\r\n                The minimum data value used in the size ramp.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinDataValue","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"MaxDataValue","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.MaxDataValue\">\r\n            <summary>\r\n                The maximum data value used in the size ramp.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxDataValue","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"MinSize","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.MinSize\">\r\n            <summary>\r\n                The size used to render a feature containing the minimum data value\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinSize","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"MaxSize","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.MaxSize\">\r\n            <summary>\r\n                The size used to render a feature containing the maximum data value\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxSize","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Field","TypeName":"System.String","IsEditorRequired":true,"Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.VisualVariable.Field\">\r\n            <summary>\r\n                The name of the numeric attribute field that contains the data values used to determine the\r\n                color/opacity/size/rotation of each feature.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Field","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable","Common.TypeNameIdentifier":"SizeVariable","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Runtime.Name":"Components.IComponent"}},{"HashCode":-729729933,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable\">\r\n            <summary>\r\n                The size visual variable defines the size of individual features in a layer based on a numeric (often thematic)\r\n                value.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-renderers-visualVariables-SizeVariable.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"MinDataValue","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.MinDataValue\">\r\n            <summary>\r\n                The minimum data value used in the size ramp.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinDataValue","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"MaxDataValue","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.MaxDataValue\">\r\n            <summary>\r\n                The maximum data value used in the size ramp.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxDataValue","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"MinSize","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.MinSize\">\r\n            <summary>\r\n                The size used to render a feature containing the minimum data value\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinSize","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"MaxSize","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.MaxSize\">\r\n            <summary>\r\n                The size used to render a feature containing the maximum data value\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxSize","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Field","TypeName":"System.String","IsEditorRequired":true,"Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.VisualVariable.Field\">\r\n            <summary>\r\n                The name of the numeric attribute field that contains the data values used to determine the\r\n                color/opacity/size/rotation of each feature.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Field","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable","Common.TypeNameIdentifier":"SizeVariable","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-555589822,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SizeVariable"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.ChildContent","Common.TypeNameIdentifier":"SizeVariable","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1105670279,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.SizeVariable.ChildContent","Common.TypeNameIdentifier":"SizeVariable","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1321576679,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.TileInfo","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.TileInfo\">\r\n            <summary>\r\n                Contains information about the tiling scheme for TileLayers, ElevationLayers, ImageryTileLayers, VectorTileLayers,\r\n                and WebTileLayers.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-support-TileInfo.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TileInfo"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Dpi","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.TileInfo.Dpi\">\r\n            <summary>\r\n                The dots per inch (DPI) of the tiling scheme.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dpi","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Format","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.TileInfo.Format\">\r\n            <summary>\r\n                Image format of the cached tiles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Format","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat?"}},{"Kind":"Components.Component","Name":"IsWrappable","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.TileInfo.IsWrappable\">\r\n            <summary>\r\n                Indicates if the tiling scheme supports wrap around.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsWrappable","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Lods","TypeName":"System.Collections.Generic.IList<dymaptic.GeoBlazor.Core.Components.LOD>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.TileInfo.Lods\">\r\n            <summary>\r\n                An array of levels of detail that define the tiling scheme.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Lods","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IList<global::dymaptic.GeoBlazor.Core.Components.LOD>"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.Collections.Generic.IList<System.Double>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.TileInfo.Size\">\r\n            <summary>\r\n                Size of tiles in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IList<global::System.Double>"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.TileInfo","Common.TypeNameIdentifier":"TileInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Runtime.Name":"Components.IComponent"}},{"HashCode":-148702898,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.TileInfo","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.TileInfo\">\r\n            <summary>\r\n                Contains information about the tiling scheme for TileLayers, ElevationLayers, ImageryTileLayers, VectorTileLayers,\r\n                and WebTileLayers.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-support-TileInfo.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Layers.TileInfo"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Dpi","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.TileInfo.Dpi\">\r\n            <summary>\r\n                The dots per inch (DPI) of the tiling scheme.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Dpi","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Format","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.TileInfo.Format\">\r\n            <summary>\r\n                Image format of the cached tiles.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Format","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.TileInfoFormat?"}},{"Kind":"Components.Component","Name":"IsWrappable","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.TileInfo.IsWrappable\">\r\n            <summary>\r\n                Indicates if the tiling scheme supports wrap around.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsWrappable","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Lods","TypeName":"System.Collections.Generic.IList<dymaptic.GeoBlazor.Core.Components.LOD>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.TileInfo.Lods\">\r\n            <summary>\r\n                An array of levels of detail that define the tiling scheme.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Lods","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IList<global::dymaptic.GeoBlazor.Core.Components.LOD>"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.Collections.Generic.IList<System.Double>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.TileInfo.Size\">\r\n            <summary>\r\n                Size of tiles in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IList<global::System.Double>"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.TileInfo","Common.TypeNameIdentifier":"TileInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-359503895,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.TileInfo.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"TileInfo"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.TileInfo.ChildContent","Common.TypeNameIdentifier":"TileInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":2064129067,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.TileInfo.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Layers.TileInfo"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.TileInfo.ChildContent","Common.TypeNameIdentifier":"TileInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1255830099,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.TileLayer","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.TileLayer\">\r\n            <summary>\r\n                The TileLayer allows you work with a cached map service exposed by the ArcGIS Server REST API and add it to a Map\r\n                as a tile layer. A cached service accesses tiles from a cache instead of dynamically rendering images. Because they\r\n                are cached, tiled layers render faster than MapImageLayers. To create an instance of TileLayer, you must reference\r\n                the URL of the cached map service.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-TileLayer.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TileLayer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.Url\">\r\n            <summary>\r\n                The URL of the REST endpoint of the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Url","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MaxScale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.MaxScale\">\r\n            <summary>\r\n                The maximum scale (most zoomed in) at which the layer is visible in the view. If the map is zoomed in beyond this scale, the layer will not be visible. A value of 0 means the layer does not have a maximum scale. The maxScale value should always be smaller than the minScale value, and greater than or equal to the service specification.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxScale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"MinScale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.MinScale\">\r\n            <summary>\r\n                The minimum scale (most zoomed out) at which the layer is visible in the view. If the map is zoomed out beyond this scale, the layer will not be visible. A value of 0 means the layer does not have a minimum scale. The minScale value should always be larger than the maxScale value, and lesser than or equal to the service specification.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinScale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Opacity\">\r\n            <summary>\r\n                The opacity of the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Opacity","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Title\">\r\n            <summary>\r\n                The title of the layer used to identify it in places such as the Legend and LayerList widgets.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ListMode","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.ListMode?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.ListMode\">\r\n            <summary>\r\n                Indicates how the layer should display in the LayerList widget. The possible values are listed below.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ListMode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.ListMode?"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Visible\">\r\n            <summary>\r\n                Indicates if the layer is visible in the View. When false, the layer may still be added to a Map instance that is\r\n                referenced in a view, but its features will not be visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.TileLayer","Common.TypeNameIdentifier":"TileLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Runtime.Name":"Components.IComponent"}},{"HashCode":-1739272566,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.TileLayer","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.TileLayer\">\r\n            <summary>\r\n                The TileLayer allows you work with a cached map service exposed by the ArcGIS Server REST API and add it to a Map\r\n                as a tile layer. A cached service accesses tiles from a cache instead of dynamically rendering images. Because they\r\n                are cached, tiled layers render faster than MapImageLayers. To create an instance of TileLayer, you must reference\r\n                the URL of the cached map service.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-TileLayer.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Layers.TileLayer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.Url\">\r\n            <summary>\r\n                The URL of the REST endpoint of the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Url","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MaxScale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.MaxScale\">\r\n            <summary>\r\n                The maximum scale (most zoomed in) at which the layer is visible in the view. If the map is zoomed in beyond this scale, the layer will not be visible. A value of 0 means the layer does not have a maximum scale. The maxScale value should always be smaller than the minScale value, and greater than or equal to the service specification.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxScale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"MinScale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.MinScale\">\r\n            <summary>\r\n                The minimum scale (most zoomed out) at which the layer is visible in the view. If the map is zoomed out beyond this scale, the layer will not be visible. A value of 0 means the layer does not have a minimum scale. The minScale value should always be larger than the maxScale value, and lesser than or equal to the service specification.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinScale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Opacity\">\r\n            <summary>\r\n                The opacity of the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Opacity","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Title\">\r\n            <summary>\r\n                The title of the layer used to identify it in places such as the Legend and LayerList widgets.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ListMode","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.ListMode?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.ListMode\">\r\n            <summary>\r\n                Indicates how the layer should display in the LayerList widget. The possible values are listed below.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ListMode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.ListMode?"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Visible\">\r\n            <summary>\r\n                Indicates if the layer is visible in the View. When false, the layer may still be added to a Map instance that is\r\n                referenced in a view, but its features will not be visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.TileLayer","Common.TypeNameIdentifier":"TileLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":409391932,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"TileLayer"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.ChildContent","Common.TypeNameIdentifier":"TileLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1723128788,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Layers.TileLayer"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.ChildContent","Common.TypeNameIdentifier":"TileLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1712542212,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.VectorTileLayer","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.VectorTileLayer\">\r\n            <summary>\r\n                VectorTileLayer accesses cached tiles of data and renders it in vector format. It is similar to a WebTileLayer in\r\n                the context of caching; however, a WebTileLayer renders as a series of images, not vector data. Unlike raster\r\n                tiles, vector tiles can adapt to the resolution of their display device and can be restyled for multiple uses.\r\n                VectorTileLayer delivers styled maps while taking advantage of cached raster map tiles with vector map data.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-VectorTileLayer.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"VectorTileLayer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.Url\">\r\n            <summary>\r\n                The URL of the REST endpoint of the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Url","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MaxScale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.MaxScale\">\r\n            <summary>\r\n                The maximum scale (most zoomed in) at which the layer is visible in the view. If the map is zoomed in beyond this scale, the layer will not be visible. A value of 0 means the layer does not have a maximum scale. The maxScale value should always be smaller than the minScale value, and greater than or equal to the service specification.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxScale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"MinScale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.MinScale\">\r\n            <summary>\r\n                The minimum scale (most zoomed out) at which the layer is visible in the view. If the map is zoomed out beyond this scale, the layer will not be visible. A value of 0 means the layer does not have a minimum scale. The minScale value should always be larger than the maxScale value, and lesser than or equal to the service specification.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinScale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Opacity\">\r\n            <summary>\r\n                The opacity of the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Opacity","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Title\">\r\n            <summary>\r\n                The title of the layer used to identify it in places such as the Legend and LayerList widgets.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ListMode","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.ListMode?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.ListMode\">\r\n            <summary>\r\n                Indicates how the layer should display in the LayerList widget. The possible values are listed below.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ListMode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.ListMode?"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Visible\">\r\n            <summary>\r\n                Indicates if the layer is visible in the View. When false, the layer may still be added to a Map instance that is\r\n                referenced in a view, but its features will not be visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.VectorTileLayer","Common.TypeNameIdentifier":"VectorTileLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Runtime.Name":"Components.IComponent"}},{"HashCode":471641891,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.VectorTileLayer","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.VectorTileLayer\">\r\n            <summary>\r\n                VectorTileLayer accesses cached tiles of data and renders it in vector format. It is similar to a WebTileLayer in\r\n                the context of caching; however, a WebTileLayer renders as a series of images, not vector data. Unlike raster\r\n                tiles, vector tiles can adapt to the resolution of their display device and can be restyled for multiple uses.\r\n                VectorTileLayer delivers styled maps while taking advantage of cached raster map tiles with vector map data.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-VectorTileLayer.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Layers.VectorTileLayer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.Url\">\r\n            <summary>\r\n                The URL of the REST endpoint of the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Url","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MaxScale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.MaxScale\">\r\n            <summary>\r\n                The maximum scale (most zoomed in) at which the layer is visible in the view. If the map is zoomed in beyond this scale, the layer will not be visible. A value of 0 means the layer does not have a maximum scale. The maxScale value should always be smaller than the minScale value, and greater than or equal to the service specification.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxScale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"MinScale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.TileLayer.MinScale\">\r\n            <summary>\r\n                The minimum scale (most zoomed out) at which the layer is visible in the view. If the map is zoomed out beyond this scale, the layer will not be visible. A value of 0 means the layer does not have a minimum scale. The minScale value should always be larger than the maxScale value, and lesser than or equal to the service specification.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinScale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Opacity\">\r\n            <summary>\r\n                The opacity of the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Opacity","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Title\">\r\n            <summary>\r\n                The title of the layer used to identify it in places such as the Legend and LayerList widgets.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ListMode","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.ListMode?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.ListMode\">\r\n            <summary>\r\n                Indicates how the layer should display in the LayerList widget. The possible values are listed below.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ListMode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.ListMode?"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Visible\">\r\n            <summary>\r\n                Indicates if the layer is visible in the View. When false, the layer may still be added to a Map instance that is\r\n                referenced in a view, but its features will not be visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.VectorTileLayer","Common.TypeNameIdentifier":"VectorTileLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-494103018,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.VectorTileLayer.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"VectorTileLayer"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.VectorTileLayer.ChildContent","Common.TypeNameIdentifier":"VectorTileLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1997231137,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.VectorTileLayer.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Layers.VectorTileLayer"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.VectorTileLayer.ChildContent","Common.TypeNameIdentifier":"VectorTileLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1031499882,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.LegendOptions","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.LegendOptions\">\r\n            <summary>\r\n                An object providing options for displaying the visual variable in the Legend.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LegendOptions"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ShowLegend","TypeName":"System.Boolean","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.LegendOptions.ShowLegend\">\r\n            <summary>\r\n                Indicates whether to show the visual variable in the legend.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowLegend","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.LegendOptions.Title\">\r\n            <summary>\r\n                The title describing the visualization of the visual variable in the Legend. This takes precedence over a field\r\n                alias or valueExpressionTitle.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.LegendOptions","Common.TypeNameIdentifier":"LegendOptions","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Runtime.Name":"Components.IComponent"}},{"HashCode":-1214255465,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.LegendOptions","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.LegendOptions\">\r\n            <summary>\r\n                An object providing options for displaying the visual variable in the Legend.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Layers.LegendOptions"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ShowLegend","TypeName":"System.Boolean","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.LegendOptions.ShowLegend\">\r\n            <summary>\r\n                Indicates whether to show the visual variable in the legend.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowLegend","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.LegendOptions.Title\">\r\n            <summary>\r\n                The title describing the visualization of the visual variable in the Legend. This takes precedence over a field\r\n                alias or valueExpressionTitle.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.LegendOptions","Common.TypeNameIdentifier":"LegendOptions","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":312987619,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.LegendOptions.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"LegendOptions"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.LegendOptions.ChildContent","Common.TypeNameIdentifier":"LegendOptions","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1844728628,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.LegendOptions.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Layers.LegendOptions"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.LegendOptions.ChildContent","Common.TypeNameIdentifier":"LegendOptions","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-762987869,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.WCSLayer","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.WCSLayer\">\r\n            <summary>\r\n                WCS presents raster data from a OGC Web Coverage Service. Raster data are projected and rendered on the client-side.\r\n                It supports versions 1.0.0, 1.1.0, 1.1.1, 1.1.2 and 2.0.1. For version 2.0.1, it supports servers that support \r\n                GEOTIFF coverage and implements the following extensions: Scaling, Interpolation, Range Subsetting, CRS, and KVP/Get.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-WCSLayer.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"WCSLayer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WCSLayer.Url\">\r\n            <summary>\r\n             The url for the particular WCS Layer source data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Url","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Opacity\">\r\n            <summary>\r\n                The opacity of the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Opacity","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Title\">\r\n            <summary>\r\n                The title of the layer used to identify it in places such as the Legend and LayerList widgets.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ListMode","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.ListMode?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.ListMode\">\r\n            <summary>\r\n                Indicates how the layer should display in the LayerList widget. The possible values are listed below.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ListMode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.ListMode?"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Visible\">\r\n            <summary>\r\n                Indicates if the layer is visible in the View. When false, the layer may still be added to a Map instance that is\r\n                referenced in a view, but its features will not be visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.WCSLayer","Common.TypeNameIdentifier":"WCSLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Runtime.Name":"Components.IComponent"}},{"HashCode":696055330,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.WCSLayer","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.WCSLayer\">\r\n            <summary>\r\n                WCS presents raster data from a OGC Web Coverage Service. Raster data are projected and rendered on the client-side.\r\n                It supports versions 1.0.0, 1.1.0, 1.1.1, 1.1.2 and 2.0.1. For version 2.0.1, it supports servers that support \r\n                GEOTIFF coverage and implements the following extensions: Scaling, Interpolation, Range Subsetting, CRS, and KVP/Get.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-WCSLayer.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Layers.WCSLayer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WCSLayer.Url\">\r\n            <summary>\r\n             The url for the particular WCS Layer source data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Url","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Opacity\">\r\n            <summary>\r\n                The opacity of the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Opacity","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Title\">\r\n            <summary>\r\n                The title of the layer used to identify it in places such as the Legend and LayerList widgets.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ListMode","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.ListMode?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.ListMode\">\r\n            <summary>\r\n                Indicates how the layer should display in the LayerList widget. The possible values are listed below.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ListMode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.ListMode?"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Visible\">\r\n            <summary>\r\n                Indicates if the layer is visible in the View. When false, the layer may still be added to a Map instance that is\r\n                referenced in a view, but its features will not be visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.WCSLayer","Common.TypeNameIdentifier":"WCSLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1287836939,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.WCSLayer.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"WCSLayer"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.WCSLayer.ChildContent","Common.TypeNameIdentifier":"WCSLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":481128199,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.WCSLayer.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Layers.WCSLayer"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.WCSLayer.ChildContent","Common.TypeNameIdentifier":"WCSLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":312069565,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer\">\r\n            <summary>\r\n                WebTileLayer provides a simple way to add non-ArcGIS Server map tiles as a layer to a map. The constructor takes a\r\n                URL template that usually follows a pattern of http://some.domain.com/{level}/{col}/{row}/ where level corresponds\r\n                to a zoom level, and column and row represent tile column and row, respectively. This pattern is not required, but\r\n                is the most common one currently on the web.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-WebTileLayer.html#urlTemplate\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"WebTileLayer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"BlendMode","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.BlendMode?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.BlendMode\">\r\n            <summary>\r\n                Blend modes are used to blend layers together to create an interesting effect in a layer, or even to produce what\r\n                seems like a new layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"BlendMode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.BlendMode?"}},{"Kind":"Components.Component","Name":"Copyright","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.Copyright\">\r\n            <summary>\r\n                The attribution information for the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Copyright","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MaxScale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.MaxScale\">\r\n            <summary>\r\n                The maximum scale (most zoomed in) at which the layer is visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxScale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"MinScale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.MinScale\">\r\n            <summary>\r\n                The minimum scale (most zoomed out) at which the layer is visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinScale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"RefreshInterval","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.RefreshInterval\">\r\n            <summary>\r\n                Refresh interval of the layer in minutes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RefreshInterval","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"SubDomains","TypeName":"System.Collections.Generic.IList<System.String>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.SubDomains\">\r\n            <summary>\r\n                A string of subDomain names where tiles are served to speed up tile retrieval. If subDomains are specified, the\r\n                <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.UrlTemplate\" /> should include a {subDomain} place holder.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SubDomains","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IList<global::System.String>"}},{"Kind":"Components.Component","Name":"UrlTemplate","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.UrlTemplate\">\r\n            <summary>\r\n                The url template is a string that specifies the URL of the hosted tile images to load. The url template resembles\r\n                an absolute URL but with a number of placeholder strings that the source evaluates to decide which tiles to load.\r\n            </summary>\r\n            <remarks>\r\n                The url template can follow a pattern of https://some.domain.com/{level}/{col}/{row}/ where level corresponds to a\r\n                zoom level, and column and row represent a tile column and row, respectively. It can also follow a pattern of\r\n                https://some.domain.com/{z}/{x}/{y}/ where z corresponds to a zoom level, and x and y represent a tile location\r\n                along x and y axis. The urlTemplate should contain a {subDomain} place holder if subDomains are specified.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"UrlTemplate","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Opacity\">\r\n            <summary>\r\n                The opacity of the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Opacity","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Title\">\r\n            <summary>\r\n                The title of the layer used to identify it in places such as the Legend and LayerList widgets.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ListMode","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.ListMode?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.ListMode\">\r\n            <summary>\r\n                Indicates how the layer should display in the LayerList widget. The possible values are listed below.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ListMode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.ListMode?"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Visible\">\r\n            <summary>\r\n                Indicates if the layer is visible in the View. When false, the layer may still be added to a Map instance that is\r\n                referenced in a view, but its features will not be visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer","Common.TypeNameIdentifier":"WebTileLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Runtime.Name":"Components.IComponent"}},{"HashCode":-836237173,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer\">\r\n            <summary>\r\n                WebTileLayer provides a simple way to add non-ArcGIS Server map tiles as a layer to a map. The constructor takes a\r\n                URL template that usually follows a pattern of http://some.domain.com/{level}/{col}/{row}/ where level corresponds\r\n                to a zoom level, and column and row represent tile column and row, respectively. This pattern is not required, but\r\n                is the most common one currently on the web.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-WebTileLayer.html#urlTemplate\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"BlendMode","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.BlendMode?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.BlendMode\">\r\n            <summary>\r\n                Blend modes are used to blend layers together to create an interesting effect in a layer, or even to produce what\r\n                seems like a new layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"BlendMode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.BlendMode?"}},{"Kind":"Components.Component","Name":"Copyright","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.Copyright\">\r\n            <summary>\r\n                The attribution information for the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Copyright","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MaxScale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.MaxScale\">\r\n            <summary>\r\n                The maximum scale (most zoomed in) at which the layer is visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxScale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"MinScale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.MinScale\">\r\n            <summary>\r\n                The minimum scale (most zoomed out) at which the layer is visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinScale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"RefreshInterval","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.RefreshInterval\">\r\n            <summary>\r\n                Refresh interval of the layer in minutes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RefreshInterval","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"SubDomains","TypeName":"System.Collections.Generic.IList<System.String>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.SubDomains\">\r\n            <summary>\r\n                A string of subDomain names where tiles are served to speed up tile retrieval. If subDomains are specified, the\r\n                <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.UrlTemplate\" /> should include a {subDomain} place holder.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SubDomains","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IList<global::System.String>"}},{"Kind":"Components.Component","Name":"UrlTemplate","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.UrlTemplate\">\r\n            <summary>\r\n                The url template is a string that specifies the URL of the hosted tile images to load. The url template resembles\r\n                an absolute URL but with a number of placeholder strings that the source evaluates to decide which tiles to load.\r\n            </summary>\r\n            <remarks>\r\n                The url template can follow a pattern of https://some.domain.com/{level}/{col}/{row}/ where level corresponds to a\r\n                zoom level, and column and row represent a tile column and row, respectively. It can also follow a pattern of\r\n                https://some.domain.com/{z}/{x}/{y}/ where z corresponds to a zoom level, and x and y represent a tile location\r\n                along x and y axis. The urlTemplate should contain a {subDomain} place holder if subDomains are specified.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"UrlTemplate","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Opacity\">\r\n            <summary>\r\n                The opacity of the layer.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Opacity","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Title\">\r\n            <summary>\r\n                The title of the layer used to identify it in places such as the Legend and LayerList widgets.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ListMode","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.ListMode?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.ListMode\">\r\n            <summary>\r\n                Indicates how the layer should display in the LayerList widget. The possible values are listed below.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ListMode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.ListMode?"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Layers.Layer.Visible\">\r\n            <summary>\r\n                Indicates if the layer is visible in the View. When false, the layer may still be added to a Map instance that is\r\n                referenced in a view, but its features will not be visible in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer","Common.TypeNameIdentifier":"WebTileLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-50369975,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"WebTileLayer"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.ChildContent","Common.TypeNameIdentifier":"WebTileLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1307322663,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.WebTileLayer.ChildContent","Common.TypeNameIdentifier":"WebTileLayer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Layers","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":312275987,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.AttachmentsPopupContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.AttachmentsPopupContent\">\r\n            <summary>\r\n                An AttachmentsContent popup element represents an attachment element associated with a feature. This resource is\r\n                available only if the FeatureLayer.capabilities.data.supportsAttachment is true.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-content-AttachmentsContent.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AttachmentsPopupContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.AttachmentsPopupContent.Description\">\r\n            <summary>\r\n                Describes the attachment's content in detail.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Description","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DisplayType","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.AttachmentsPopupContent.DisplayType\">\r\n            <summary>\r\n                A string value indicating how to display an attachment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayType","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.AttachmentsPopupContent.Title\">\r\n            <summary>\r\n                A heading indicating what the attachment's content represents.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.AttachmentsPopupContent","Common.TypeNameIdentifier":"AttachmentsPopupContent","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Runtime.Name":"Components.IComponent"}},{"HashCode":-776170774,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.AttachmentsPopupContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.AttachmentsPopupContent\">\r\n            <summary>\r\n                An AttachmentsContent popup element represents an attachment element associated with a feature. This resource is\r\n                available only if the FeatureLayer.capabilities.data.supportsAttachment is true.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-content-AttachmentsContent.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Popups.AttachmentsPopupContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.AttachmentsPopupContent.Description\">\r\n            <summary>\r\n                Describes the attachment's content in detail.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Description","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DisplayType","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.AttachmentsPopupContent.DisplayType\">\r\n            <summary>\r\n                A string value indicating how to display an attachment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayType","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.AttachmentsPopupContent.Title\">\r\n            <summary>\r\n                A heading indicating what the attachment's content represents.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.AttachmentsPopupContent","Common.TypeNameIdentifier":"AttachmentsPopupContent","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-186628702,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.AttachmentsPopupContent.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AttachmentsPopupContent"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.AttachmentsPopupContent.ChildContent","Common.TypeNameIdentifier":"AttachmentsPopupContent","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-556632881,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.AttachmentsPopupContent.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Popups.AttachmentsPopupContent"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.AttachmentsPopupContent.ChildContent","Common.TypeNameIdentifier":"AttachmentsPopupContent","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1650212603,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo\">\r\n            <summary>\r\n                The ExpressionInfo class references Arcade expressions following the specification defined by the Arcade Popup\r\n                Profile. Expressions must return a string or a number and may access data values from the feature, its layer, or\r\n                other layers in the map or datastore with the $feature, $layer, $map, and $datastore profile variables.\r\n                Expression names are referenced in a layer's PopupTemplate and execute once a layer's popup is opened. The values\r\n                display within the view's popup as if they are field values. They can be displayed in a table using the FieldInfo\r\n                of the popupTemplate's content or referenced within a simple string.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-ExpressionInfo.html\">\r\n                    ArcGIS\r\n                    API for JS\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpressionInfo"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Expression","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo.Expression\">\r\n            <summary>\r\n                An Arcade expression following the specification defined by the Arcade Popup Profile. Expressions must return a\r\n                string or a number and may access data values from the feature, its layer, or other layers in the map or datastore\r\n                with the $feature, $layer, $map, and $datastore profile variables.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Expression","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo.Name\">\r\n            <summary>\r\n                The name of the expression. This is used to reference the value of the given expression in the popupTemplate's\r\n                content property by wrapping it in curly braces and prefacing it with expression/ (e.g.\r\n                {expression/expressionName}).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo.Title\">\r\n            <summary>\r\n                The title used to describe the value returned by the expression in the popup. This will display if the value is\r\n                referenced in a FieldInfo table.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ReturnType","TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ReturnType?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo.ReturnType\">\r\n            <summary>\r\n                Indicates the return type of the Arcade expression.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReturnType","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Popups.ReturnType?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo","Common.TypeNameIdentifier":"ExpressionInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Runtime.Name":"Components.IComponent"}},{"HashCode":802894707,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo\">\r\n            <summary>\r\n                The ExpressionInfo class references Arcade expressions following the specification defined by the Arcade Popup\r\n                Profile. Expressions must return a string or a number and may access data values from the feature, its layer, or\r\n                other layers in the map or datastore with the $feature, $layer, $map, and $datastore profile variables.\r\n                Expression names are referenced in a layer's PopupTemplate and execute once a layer's popup is opened. The values\r\n                display within the view's popup as if they are field values. They can be displayed in a table using the FieldInfo\r\n                of the popupTemplate's content or referenced within a simple string.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-ExpressionInfo.html\">\r\n                    ArcGIS\r\n                    API for JS\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Expression","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo.Expression\">\r\n            <summary>\r\n                An Arcade expression following the specification defined by the Arcade Popup Profile. Expressions must return a\r\n                string or a number and may access data values from the feature, its layer, or other layers in the map or datastore\r\n                with the $feature, $layer, $map, and $datastore profile variables.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Expression","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo.Name\">\r\n            <summary>\r\n                The name of the expression. This is used to reference the value of the given expression in the popupTemplate's\r\n                content property by wrapping it in curly braces and prefacing it with expression/ (e.g.\r\n                {expression/expressionName}).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo.Title\">\r\n            <summary>\r\n                The title used to describe the value returned by the expression in the popup. This will display if the value is\r\n                referenced in a FieldInfo table.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ReturnType","TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ReturnType?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo.ReturnType\">\r\n            <summary>\r\n                Indicates the return type of the Arcade expression.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReturnType","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Popups.ReturnType?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo","Common.TypeNameIdentifier":"ExpressionInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-629097143,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ExpressionInfo"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo.ChildContent","Common.TypeNameIdentifier":"ExpressionInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-836036904,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ExpressionInfo.ChildContent","Common.TypeNameIdentifier":"ExpressionInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":779216846,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.ExpressionPopupContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.ExpressionPopupContent\">\r\n            <summary>\r\n                An ExpressionContent element allows you to define a popup content element with an Arcade expression. The expression\r\n                must evaluate to a dictionary representing a TextContent, FieldsContent, or a MediaContent popup element as defined\r\n                in the Popup Element web map specification.\r\n                Expressions defining popup content typically use the attributes property of an element to reference values\r\n                calculated within the expression in a table or a chart.\r\n                This content element is designed for advanced scenarios where content in charts, tables, or rich text elements is\r\n                based on logical conditions. For example, if data in one or more fields is empty, you can use this element to\r\n                dynamically create a table consisting only of fields containing valid data values. You can also use this element to\r\n                create charts or other content types consisting of aggregated data values. This can be especially useful in cluster\r\n                popups.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-content-ExpressionContent.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpressionPopupContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ExpressionInfo","TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ElementExpressionInfo","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ExpressionPopupContent.ExpressionInfo\">\r\n            <summary>\r\n                Contains the Arcade expression used to create a popup content element. See the ElementExpressionInfo documentation\r\n                for details and examples for how to create these expressions.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpressionInfo","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Popups.ElementExpressionInfo"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ExpressionPopupContent","Common.TypeNameIdentifier":"ExpressionPopupContent","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Runtime.Name":"Components.IComponent"}},{"HashCode":1833439548,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.ExpressionPopupContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.ExpressionPopupContent\">\r\n            <summary>\r\n                An ExpressionContent element allows you to define a popup content element with an Arcade expression. The expression\r\n                must evaluate to a dictionary representing a TextContent, FieldsContent, or a MediaContent popup element as defined\r\n                in the Popup Element web map specification.\r\n                Expressions defining popup content typically use the attributes property of an element to reference values\r\n                calculated within the expression in a table or a chart.\r\n                This content element is designed for advanced scenarios where content in charts, tables, or rich text elements is\r\n                based on logical conditions. For example, if data in one or more fields is empty, you can use this element to\r\n                dynamically create a table consisting only of fields containing valid data values. You can also use this element to\r\n                create charts or other content types consisting of aggregated data values. This can be especially useful in cluster\r\n                popups.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-content-ExpressionContent.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Popups.ExpressionPopupContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ExpressionInfo","TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ElementExpressionInfo","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ExpressionPopupContent.ExpressionInfo\">\r\n            <summary>\r\n                Contains the Arcade expression used to create a popup content element. See the ElementExpressionInfo documentation\r\n                for details and examples for how to create these expressions.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpressionInfo","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Popups.ElementExpressionInfo"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ExpressionPopupContent","Common.TypeNameIdentifier":"ExpressionPopupContent","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1827431723,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.ExpressionPopupContent.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ExpressionPopupContent"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ExpressionPopupContent.ChildContent","Common.TypeNameIdentifier":"ExpressionPopupContent","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-2040073526,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.ExpressionPopupContent.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Popups.ExpressionPopupContent"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ExpressionPopupContent.ChildContent","Common.TypeNameIdentifier":"ExpressionPopupContent","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1367751897,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo\">\r\n            <summary>\r\n                The FieldInfo class defines how a Field participates, or in some cases, does not participate, in a PopupTemplate.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-FieldInfo.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FieldInfo"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"FieldName","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.FieldName\">\r\n            <summary>\r\n                The field name as defined by the service or the name of an Arcade expression.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FieldName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.Label\">\r\n            <summary>\r\n                The field name as defined by the service or the name of an Arcade expression.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IsEditable","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.IsEditable\">\r\n            <summary>\r\n                A Boolean determining whether users can edit this field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsEditable","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.Tooltip\">\r\n            <summary>\r\n                A string providing an editing hint for editors of the field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tooltip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.Visible\">\r\n            <summary>\r\n                Indicates whether the field is visible in the popup window.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"StringFieldOption","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.StringFieldOption\">\r\n            <summary>\r\n                A string determining what type of input box editors see when editing the field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"StringFieldOption","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo","Common.TypeNameIdentifier":"FieldInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Runtime.Name":"Components.IComponent"}},{"HashCode":-1698894850,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo\">\r\n            <summary>\r\n                The FieldInfo class defines how a Field participates, or in some cases, does not participate, in a PopupTemplate.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-FieldInfo.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"FieldName","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.FieldName\">\r\n            <summary>\r\n                The field name as defined by the service or the name of an Arcade expression.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FieldName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.Label\">\r\n            <summary>\r\n                The field name as defined by the service or the name of an Arcade expression.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IsEditable","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.IsEditable\">\r\n            <summary>\r\n                A Boolean determining whether users can edit this field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsEditable","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.Tooltip\">\r\n            <summary>\r\n                A string providing an editing hint for editors of the field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tooltip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.Visible\">\r\n            <summary>\r\n                Indicates whether the field is visible in the popup window.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Visible","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"StringFieldOption","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.StringFieldOption\">\r\n            <summary>\r\n                A string determining what type of input box editors see when editing the field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"StringFieldOption","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo","Common.TypeNameIdentifier":"FieldInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1669941344,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"FieldInfo"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.ChildContent","Common.TypeNameIdentifier":"FieldInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1479822694,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.FieldInfo.ChildContent","Common.TypeNameIdentifier":"FieldInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-115624153,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.FieldInfoFormat","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.FieldInfoFormat\">\r\n            <summary>\r\n                The FieldInfoFormat class is used with numerical or date fields to provide more detail about how the value should\r\n                be displayed in a popup. Use this class in place of the legacy formatting functions: DateString, DateFormat, and/or\r\n                NumberFormat.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-support-FieldInfoFormat.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FieldInfoFormat"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Places","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.FieldInfoFormat.Places\">\r\n            <summary>\r\n                Used only with Number fields to specify the number of supported decimal places that should appear in popups.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Places","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"DigitSeparator","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.FieldInfoFormat.DigitSeparator\">\r\n            <summary>\r\n                Used only with Number fields.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DigitSeparator","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"DateFormat","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.FieldInfoFormat.DateFormat\">\r\n            <summary>\r\n                Used only with Date fields.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DateFormat","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.FieldInfoFormat","Common.TypeNameIdentifier":"FieldInfoFormat","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Runtime.Name":"Components.IComponent"}},{"HashCode":92631448,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.FieldInfoFormat","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.FieldInfoFormat\">\r\n            <summary>\r\n                The FieldInfoFormat class is used with numerical or date fields to provide more detail about how the value should\r\n                be displayed in a popup. Use this class in place of the legacy formatting functions: DateString, DateFormat, and/or\r\n                NumberFormat.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-support-FieldInfoFormat.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Popups.FieldInfoFormat"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Places","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.FieldInfoFormat.Places\">\r\n            <summary>\r\n                Used only with Number fields to specify the number of supported decimal places that should appear in popups.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Places","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"DigitSeparator","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.FieldInfoFormat.DigitSeparator\">\r\n            <summary>\r\n                Used only with Number fields.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DigitSeparator","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"DateFormat","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.FieldInfoFormat.DateFormat\">\r\n            <summary>\r\n                Used only with Date fields.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DateFormat","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.FieldInfoFormat","Common.TypeNameIdentifier":"FieldInfoFormat","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-30638527,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.FieldInfoFormat.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"FieldInfoFormat"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.FieldInfoFormat.ChildContent","Common.TypeNameIdentifier":"FieldInfoFormat","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1394758649,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.FieldInfoFormat.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Popups.FieldInfoFormat"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.FieldInfoFormat.ChildContent","Common.TypeNameIdentifier":"FieldInfoFormat","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1796629447,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.FieldsPopupContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.FieldsPopupContent\">\r\n            <summary>\r\n                A FieldsContent popup element represents the FieldInfo associated with a feature. If this is not set within the\r\n                content, it will revert to whatever may be set within the PopupTemplate.fieldInfos property.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-content-FieldsContent.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FieldsPopupContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.FieldsPopupContent.Description\">\r\n            <summary>\r\n                Describes the field's content in detail.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Description","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.FieldsPopupContent.Title\">\r\n            <summary>\r\n                Heading indicating what the field's content represents.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.FieldsPopupContent","Common.TypeNameIdentifier":"FieldsPopupContent","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Runtime.Name":"Components.IComponent"}},{"HashCode":-1768713319,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.FieldsPopupContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.FieldsPopupContent\">\r\n            <summary>\r\n                A FieldsContent popup element represents the FieldInfo associated with a feature. If this is not set within the\r\n                content, it will revert to whatever may be set within the PopupTemplate.fieldInfos property.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-content-FieldsContent.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Popups.FieldsPopupContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.FieldsPopupContent.Description\">\r\n            <summary>\r\n                Describes the field's content in detail.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Description","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.FieldsPopupContent.Title\">\r\n            <summary>\r\n                Heading indicating what the field's content represents.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.FieldsPopupContent","Common.TypeNameIdentifier":"FieldsPopupContent","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-749774175,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.FieldsPopupContent.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"FieldsPopupContent"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.FieldsPopupContent.ChildContent","Common.TypeNameIdentifier":"FieldsPopupContent","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-744083372,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.FieldsPopupContent.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Popups.FieldsPopupContent"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.FieldsPopupContent.ChildContent","Common.TypeNameIdentifier":"FieldsPopupContent","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":2112361311,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo\">\r\n            <summary>\r\n                A BarChartMediaInfo is a type of chart media element that represents a bar chart displayed within a popup.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-content-BarChartMediaInfo.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BarChartMediaInfo"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AltText","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo.AltText\">\r\n            <summary>\r\n                Provides an alternate text for an image if the image cannot be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AltText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Caption","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo.Caption\">\r\n            <summary>\r\n                Defines a caption for the media.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Caption","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo.Title\">\r\n            <summary>\r\n                The title of the media element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo","Common.TypeNameIdentifier":"BarChartMediaInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Runtime.Name":"Components.IComponent"}},{"HashCode":1921404682,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo\">\r\n            <summary>\r\n                A BarChartMediaInfo is a type of chart media element that represents a bar chart displayed within a popup.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-content-BarChartMediaInfo.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AltText","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo.AltText\">\r\n            <summary>\r\n                Provides an alternate text for an image if the image cannot be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AltText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Caption","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo.Caption\">\r\n            <summary>\r\n                Defines a caption for the media.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Caption","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo.Title\">\r\n            <summary>\r\n                The title of the media element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo","Common.TypeNameIdentifier":"BarChartMediaInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1792775878,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BarChartMediaInfo"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo.ChildContent","Common.TypeNameIdentifier":"BarChartMediaInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":754861557,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.BarChartMediaInfo.ChildContent","Common.TypeNameIdentifier":"BarChartMediaInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1524592145,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue\">\r\n            <summary>\r\n                The ChartMediaInfoValue class contains information for popups regarding how charts should be constructed.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-content-support-ChartMediaInfoValue.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartMediaInfoValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Fields","TypeName":"System.Collections.Generic.IEnumerable<System.String>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue.Fields\">\r\n            <summary>\r\n                An array of strings, with each string containing the name of a field to display in the chart.\r\n            </summary>\r\n            <remarks>\r\n                In order to work with related fields within a chart, the fields must either be set as a fields element in the\r\n                PopupTemplate's content or as popupTemplate.fieldInfos property outside of the PopupTemplate's content.\r\n                Set the popupTemplate.fieldInfos property for any fields that need to have number formatting for chart/text\r\n                elements.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Fields","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.String>"}},{"Kind":"Components.Component","Name":"NormalizeField","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue.NormalizeField\">\r\n            <summary>\r\n                A string containing the name of a field. The values of all fields in the chart will be normalized (divided) by the\r\n                value of this field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NormalizeField","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipField","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue.TooltipField\">\r\n            <summary>\r\n                String value indicating the tooltip for a chart specified from another field. It is used for showing tooltips from\r\n                another field in the same layer or related layer/table.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TooltipField","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue","Common.TypeNameIdentifier":"ChartMediaInfoValue","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Runtime.Name":"Components.IComponent"}},{"HashCode":-821024851,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue\">\r\n            <summary>\r\n                The ChartMediaInfoValue class contains information for popups regarding how charts should be constructed.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-content-support-ChartMediaInfoValue.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Fields","TypeName":"System.Collections.Generic.IEnumerable<System.String>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue.Fields\">\r\n            <summary>\r\n                An array of strings, with each string containing the name of a field to display in the chart.\r\n            </summary>\r\n            <remarks>\r\n                In order to work with related fields within a chart, the fields must either be set as a fields element in the\r\n                PopupTemplate's content or as popupTemplate.fieldInfos property outside of the PopupTemplate's content.\r\n                Set the popupTemplate.fieldInfos property for any fields that need to have number formatting for chart/text\r\n                elements.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Fields","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.String>"}},{"Kind":"Components.Component","Name":"NormalizeField","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue.NormalizeField\">\r\n            <summary>\r\n                A string containing the name of a field. The values of all fields in the chart will be normalized (divided) by the\r\n                value of this field.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NormalizeField","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"TooltipField","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue.TooltipField\">\r\n            <summary>\r\n                String value indicating the tooltip for a chart specified from another field. It is used for showing tooltips from\r\n                another field in the same layer or related layer/table.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TooltipField","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue","Common.TypeNameIdentifier":"ChartMediaInfoValue","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-472602270,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartMediaInfoValue"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue.ChildContent","Common.TypeNameIdentifier":"ChartMediaInfoValue","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":704941100,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValue.ChildContent","Common.TypeNameIdentifier":"ChartMediaInfoValue","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":250309354,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValueSeries","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValueSeries\">\r\n            <summary>\r\n                The ChartMediaInfoValueSeries class is a read-only support class that represents information specific to how data\r\n                should be plotted in a chart. It helps provide a consistent API for plotting charts used by the Popup widget.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-content-support-ChartMediaInfoValueSeries.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartMediaInfoValueSeries"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"FieldName","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValueSeries.FieldName\">\r\n            <summary>\r\n                String value indicating the field's name for a series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FieldName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValueSeries.Tooltip\">\r\n            <summary>\r\n                String value indicating the tooltip for a series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tooltip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValueSeries.Value\">\r\n            <summary>\r\n                Numerical value for the chart series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValueSeries","Common.TypeNameIdentifier":"ChartMediaInfoValueSeries","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Runtime.Name":"Components.IComponent"}},{"HashCode":-1413314877,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValueSeries","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValueSeries\">\r\n            <summary>\r\n                The ChartMediaInfoValueSeries class is a read-only support class that represents information specific to how data\r\n                should be plotted in a chart. It helps provide a consistent API for plotting charts used by the Popup widget.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-content-support-ChartMediaInfoValueSeries.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValueSeries"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"FieldName","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValueSeries.FieldName\">\r\n            <summary>\r\n                String value indicating the field's name for a series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FieldName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Tooltip","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValueSeries.Tooltip\">\r\n            <summary>\r\n                String value indicating the tooltip for a series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tooltip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValueSeries.Value\">\r\n            <summary>\r\n                Numerical value for the chart series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValueSeries","Common.TypeNameIdentifier":"ChartMediaInfoValueSeries","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":382655818,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValueSeries.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartMediaInfoValueSeries"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValueSeries.ChildContent","Common.TypeNameIdentifier":"ChartMediaInfoValueSeries","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1466846488,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValueSeries.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValueSeries"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ChartMediaInfoValueSeries.ChildContent","Common.TypeNameIdentifier":"ChartMediaInfoValueSeries","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-629775120,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo\">\r\n            <summary>\r\n                A ColumnChartMediaInfo is a type of chart media element that represents a column chart displayed within a popup.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-content-ColumnChartMediaInfo.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ColumnChartMediaInfo"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AltText","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo.AltText\">\r\n            <summary>\r\n                Provides an alternate text for an image if the image cannot be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AltText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Caption","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo.Caption\">\r\n            <summary>\r\n                Defines a caption for the media.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Caption","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo.Title\">\r\n            <summary>\r\n                The title of the media element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo","Common.TypeNameIdentifier":"ColumnChartMediaInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Runtime.Name":"Components.IComponent"}},{"HashCode":101795211,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo\">\r\n            <summary>\r\n                A ColumnChartMediaInfo is a type of chart media element that represents a column chart displayed within a popup.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-content-ColumnChartMediaInfo.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AltText","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo.AltText\">\r\n            <summary>\r\n                Provides an alternate text for an image if the image cannot be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AltText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Caption","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo.Caption\">\r\n            <summary>\r\n                Defines a caption for the media.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Caption","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo.Title\">\r\n            <summary>\r\n                The title of the media element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo","Common.TypeNameIdentifier":"ColumnChartMediaInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-321327913,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ColumnChartMediaInfo"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo.ChildContent","Common.TypeNameIdentifier":"ColumnChartMediaInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-818470009,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ColumnChartMediaInfo.ChildContent","Common.TypeNameIdentifier":"ColumnChartMediaInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1644428460,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo\">\r\n            <summary>\r\n                An ImageMediaInfo is a type of media element that represents images to display within a popup.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-content-ImageMediaInfo.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ImageMediaInfo"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AltText","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo.AltText\">\r\n            <summary>\r\n                Provides an alternate text for an image if the image cannot be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AltText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Caption","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo.Caption\">\r\n            <summary>\r\n                Defines a caption for the media.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Caption","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo.Title\">\r\n            <summary>\r\n                The title of the media element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"RefreshInterval","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo.RefreshInterval\">\r\n            <summary>\r\n                Refresh interval of the layer in minutes. Non-zero value indicates automatic layer refresh at the specified\r\n                interval. Value of 0 indicates auto refresh is not enabled. If the property does not exist, it is equivalent to\r\n                having a value of 0.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RefreshInterval","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo","Common.TypeNameIdentifier":"ImageMediaInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Runtime.Name":"Components.IComponent"}},{"HashCode":-717329484,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo\">\r\n            <summary>\r\n                An ImageMediaInfo is a type of media element that represents images to display within a popup.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-content-ImageMediaInfo.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AltText","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo.AltText\">\r\n            <summary>\r\n                Provides an alternate text for an image if the image cannot be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AltText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Caption","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo.Caption\">\r\n            <summary>\r\n                Defines a caption for the media.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Caption","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo.Title\">\r\n            <summary>\r\n                The title of the media element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"RefreshInterval","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo.RefreshInterval\">\r\n            <summary>\r\n                Refresh interval of the layer in minutes. Non-zero value indicates automatic layer refresh at the specified\r\n                interval. Value of 0 indicates auto refresh is not enabled. If the property does not exist, it is equivalent to\r\n                having a value of 0.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RefreshInterval","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo","Common.TypeNameIdentifier":"ImageMediaInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1624944267,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ImageMediaInfo"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo.ChildContent","Common.TypeNameIdentifier":"ImageMediaInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1880531837,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfo.ChildContent","Common.TypeNameIdentifier":"ImageMediaInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1064600056,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfoValue","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfoValue\">\r\n            <summary>\r\n                The ImageMediaInfoValue class contains information for popups regarding how images should be retrieved.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-content-support-ImageMediaInfoValue.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ImageMediaInfoValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"LinkURL","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfoValue.LinkURL\">\r\n            <summary>\r\n                A string containing a URL to be launched in a browser when a user clicks the image.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LinkURL","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SourceURL","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfoValue.SourceURL\">\r\n            <summary>\r\n                A string containing the URL to the image.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SourceURL","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfoValue","Common.TypeNameIdentifier":"ImageMediaInfoValue","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Runtime.Name":"Components.IComponent"}},{"HashCode":-1787206400,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfoValue","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfoValue\">\r\n            <summary>\r\n                The ImageMediaInfoValue class contains information for popups regarding how images should be retrieved.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-content-support-ImageMediaInfoValue.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfoValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"LinkURL","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfoValue.LinkURL\">\r\n            <summary>\r\n                A string containing a URL to be launched in a browser when a user clicks the image.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LinkURL","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"SourceURL","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfoValue.SourceURL\">\r\n            <summary>\r\n                A string containing the URL to the image.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SourceURL","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfoValue","Common.TypeNameIdentifier":"ImageMediaInfoValue","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":651004448,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfoValue.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ImageMediaInfoValue"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfoValue.ChildContent","Common.TypeNameIdentifier":"ImageMediaInfoValue","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1964803524,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfoValue.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfoValue"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.ImageMediaInfoValue.ChildContent","Common.TypeNameIdentifier":"ImageMediaInfoValue","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":906328045,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo\">\r\n            <summary>\r\n                A LineChartMediaInfo is a type of chart media element that represents a line chart displayed within a popup.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-content-LineChartMediaInfo.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LineChartMediaInfo"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AltText","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo.AltText\">\r\n            <summary>\r\n                Provides an alternate text for an image if the image cannot be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AltText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Caption","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo.Caption\">\r\n            <summary>\r\n                Defines a caption for the media.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Caption","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo.Title\">\r\n            <summary>\r\n                The title of the media element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo","Common.TypeNameIdentifier":"LineChartMediaInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Runtime.Name":"Components.IComponent"}},{"HashCode":2098890666,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo\">\r\n            <summary>\r\n                A LineChartMediaInfo is a type of chart media element that represents a line chart displayed within a popup.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-content-LineChartMediaInfo.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AltText","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo.AltText\">\r\n            <summary>\r\n                Provides an alternate text for an image if the image cannot be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AltText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Caption","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo.Caption\">\r\n            <summary>\r\n                Defines a caption for the media.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Caption","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo.Title\">\r\n            <summary>\r\n                The title of the media element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo","Common.TypeNameIdentifier":"LineChartMediaInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1657845644,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"LineChartMediaInfo"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo.ChildContent","Common.TypeNameIdentifier":"LineChartMediaInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1065699149,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.LineChartMediaInfo.ChildContent","Common.TypeNameIdentifier":"LineChartMediaInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-208254989,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo\">\r\n            <summary>\r\n                A PieChartMediaInfo is a type of chart media element that represents a pie chart displayed within a popup.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-content-PieChartMediaInfo.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PieChartMediaInfo"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AltText","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo.AltText\">\r\n            <summary>\r\n                Provides an alternate text for an image if the image cannot be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AltText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Caption","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo.Caption\">\r\n            <summary>\r\n                Defines a caption for the media.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Caption","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo.Title\">\r\n            <summary>\r\n                The title of the media element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo","Common.TypeNameIdentifier":"PieChartMediaInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Runtime.Name":"Components.IComponent"}},{"HashCode":-2035417609,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo\">\r\n            <summary>\r\n                A PieChartMediaInfo is a type of chart media element that represents a pie chart displayed within a popup.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-content-PieChartMediaInfo.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AltText","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo.AltText\">\r\n            <summary>\r\n                Provides an alternate text for an image if the image cannot be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AltText","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Caption","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo.Caption\">\r\n            <summary>\r\n                Defines a caption for the media.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Caption","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo.Title\">\r\n            <summary>\r\n                The title of the media element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo","Common.TypeNameIdentifier":"PieChartMediaInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-81073688,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PieChartMediaInfo"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo.ChildContent","Common.TypeNameIdentifier":"PieChartMediaInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1459440322,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.PieChartMediaInfo.ChildContent","Common.TypeNameIdentifier":"PieChartMediaInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-483546788,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent\">\r\n            <summary>\r\n                A MediaContent popup element contains an individual or array of chart and/or image media elements to display within\r\n                a popup's content.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-content-MediaContent.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MediaPopupContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ActiveMediaInfoIndex","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent.ActiveMediaInfoIndex\">\r\n            <summary>\r\n                Index of the current active media within the popup's media content. This will be the media that is currently viewed\r\n                when displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ActiveMediaInfoIndex","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent.Description\">\r\n            <summary>\r\n                Describes the media's content in detail.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Description","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent.Title\">\r\n            <summary>\r\n                Heading indicating what the media's content represents.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent","Common.TypeNameIdentifier":"MediaPopupContent","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Runtime.Name":"Components.IComponent"}},{"HashCode":-889855682,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent\">\r\n            <summary>\r\n                A MediaContent popup element contains an individual or array of chart and/or image media elements to display within\r\n                a popup's content.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-content-MediaContent.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ActiveMediaInfoIndex","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent.ActiveMediaInfoIndex\">\r\n            <summary>\r\n                Index of the current active media within the popup's media content. This will be the media that is currently viewed\r\n                when displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ActiveMediaInfoIndex","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent.Description\">\r\n            <summary>\r\n                Describes the media's content in detail.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Description","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent.Title\">\r\n            <summary>\r\n                Heading indicating what the media's content represents.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent","Common.TypeNameIdentifier":"MediaPopupContent","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1245833796,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MediaPopupContent"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent.ChildContent","Common.TypeNameIdentifier":"MediaPopupContent","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":55864354,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.MediaPopupContent.ChildContent","Common.TypeNameIdentifier":"MediaPopupContent","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":170317449,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate\">\r\n            <summary>\r\n                A PopupTemplate formats and defines the content of a Popup for a specific Layer or Graphic. The user can also use\r\n                the PopupTemplate to access values from feature attributes and values returned from Arcade expressions when a\r\n                feature in the view is selected.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-PopupTemplate.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PopupTemplate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"StringContent","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.StringContent\">\r\n            <summary>\r\n                The template for defining and formatting a popup's content, provided as a simple string.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.Content\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.StringContent\" /> should be defined, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"StringContent","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.Title\">\r\n            <summary>\r\n                The template for defining how to format the title used in a popup.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OutFields","TypeName":"System.Collections.Generic.IEnumerable<System.String>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.OutFields\">\r\n            <summary>\r\n                An array of field names used in the PopupTemplate. Use this property to indicate what fields are required to fully\r\n                render the PopupTemplate. This is important if setting content via a function since any fields needed for\r\n                successful rendering should be specified here.\r\n                Generally speaking, it is good practice to always set this property when instantiating a new popup template.\r\n                To fetch the values from all fields, use [\"*\"].\r\n            </summary>\r\n            <remarks>\r\n                This will not fetch fields from related tables. If related features are needed, set this using FieldInfo.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OutFields","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.String>"}},{"Kind":"Components.Component","Name":"OverwriteActions","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.OverwriteActions\">\r\n            <summary>\r\n                Indicates whether actions should replace existing popup actions.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OverwriteActions","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ReturnGeometry","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.ReturnGeometry\">\r\n            <summary>\r\n                Indicates whether to include the feature's geometry for use by the template. This property should be set to true if\r\n                needing to access the popup's selected feature's geometry. Access the geometry via the returned graphic from the\r\n                popup's selectedFeatureWidget. This is needed since the geometry is not automatically queried and returned in the\r\n                popup's selected feature.\r\n                If the feature layer does not specify its outFields and the template's outFields isn't set, the returned popup's\r\n                geometry is only returned if returnGeometry is set to true. This also applies when working with WebMaps.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReturnGeometry","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ContentFunction","TypeName":"System.Func<dymaptic.GeoBlazor.Core.Components.Layers.Graphic, System.Threading.Tasks.ValueTask<dymaptic.GeoBlazor.Core.Components.Popups.PopupContent[]>>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.ContentFunction\">\r\n            <summary>\r\n                Defines a delegate function which will generate the <see cref=\"T:dymaptic.GeoBlazor.Core.Components.Popups.PopupContent\" />s for the template.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::dymaptic.GeoBlazor.Core.Components.Layers.Graphic, global::System.Threading.Tasks.ValueTask<global::dymaptic.GeoBlazor.Core.Components.Popups.PopupContent[]>>","Common.PropertyName":"ContentFunction","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate","Common.TypeNameIdentifier":"PopupTemplate","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Runtime.Name":"Components.IComponent"}},{"HashCode":1958424414,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate\">\r\n            <summary>\r\n                A PopupTemplate formats and defines the content of a Popup for a specific Layer or Graphic. The user can also use\r\n                the PopupTemplate to access values from feature attributes and values returned from Arcade expressions when a\r\n                feature in the view is selected.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-PopupTemplate.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"StringContent","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.StringContent\">\r\n            <summary>\r\n                The template for defining and formatting a popup's content, provided as a simple string.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.Content\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.StringContent\" /> should be defined, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"StringContent","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.Title\">\r\n            <summary>\r\n                The template for defining how to format the title used in a popup.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OutFields","TypeName":"System.Collections.Generic.IEnumerable<System.String>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.OutFields\">\r\n            <summary>\r\n                An array of field names used in the PopupTemplate. Use this property to indicate what fields are required to fully\r\n                render the PopupTemplate. This is important if setting content via a function since any fields needed for\r\n                successful rendering should be specified here.\r\n                Generally speaking, it is good practice to always set this property when instantiating a new popup template.\r\n                To fetch the values from all fields, use [\"*\"].\r\n            </summary>\r\n            <remarks>\r\n                This will not fetch fields from related tables. If related features are needed, set this using FieldInfo.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OutFields","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.String>"}},{"Kind":"Components.Component","Name":"OverwriteActions","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.OverwriteActions\">\r\n            <summary>\r\n                Indicates whether actions should replace existing popup actions.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OverwriteActions","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ReturnGeometry","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.ReturnGeometry\">\r\n            <summary>\r\n                Indicates whether to include the feature's geometry for use by the template. This property should be set to true if\r\n                needing to access the popup's selected feature's geometry. Access the geometry via the returned graphic from the\r\n                popup's selectedFeatureWidget. This is needed since the geometry is not automatically queried and returned in the\r\n                popup's selected feature.\r\n                If the feature layer does not specify its outFields and the template's outFields isn't set, the returned popup's\r\n                geometry is only returned if returnGeometry is set to true. This also applies when working with WebMaps.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ReturnGeometry","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ContentFunction","TypeName":"System.Func<dymaptic.GeoBlazor.Core.Components.Layers.Graphic, System.Threading.Tasks.ValueTask<dymaptic.GeoBlazor.Core.Components.Popups.PopupContent[]>>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.ContentFunction\">\r\n            <summary>\r\n                Defines a delegate function which will generate the <see cref=\"T:dymaptic.GeoBlazor.Core.Components.Popups.PopupContent\" />s for the template.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::dymaptic.GeoBlazor.Core.Components.Layers.Graphic, global::System.Threading.Tasks.ValueTask<global::dymaptic.GeoBlazor.Core.Components.Popups.PopupContent[]>>","Common.PropertyName":"ContentFunction","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate","Common.TypeNameIdentifier":"PopupTemplate","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":929296834,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PopupTemplate"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.ChildContent","Common.TypeNameIdentifier":"PopupTemplate","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1185261420,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.ChildContent","Common.TypeNameIdentifier":"PopupTemplate","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1463356617,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent\">\r\n            <summary>\r\n                A RelationshipContent popup element represents a relationship element associated with a feature. This can only be\r\n                configured if the related layer or table is added to the map.\r\n                RelationshipContent provides a way to browse related records of the current selected feature within its popup, as\r\n                shown in the images below. The Origin Feature image shows a popup template configured with RelationshipContent.\r\n                When selecting one of the related features in the list, the popup template for the chosen related destination\r\n                feature displays. The Related Destination Feature image shows the destination popup template content with\r\n                FieldsContent and RelationshipContent configured. When exploring a related feature's RelationshipContent, one could\r\n                navigate into that feature's related records or exit the origin feature's related record exploration with the arrow\r\n                button.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-content-RelationshipContent.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"RelationshipPopupContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent.Description\">\r\n            <summary>\r\n                Describes the relationship's content in detail.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Description","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DisplayCount","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent.DisplayCount\">\r\n            <summary>\r\n                A numeric value indicating the maximum number of related features to display in the list of related records. The\r\n                maximum number of related records to display in the list of related records is 10. If no value is specified, the\r\n                Show all button will be available to display all related records.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayCount","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"DisplayType","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent.DisplayType\">\r\n            <summary>\r\n                A string value indicating how to display related records within the relationship content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayType","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OrderByFields","TypeName":"System.Collections.Generic.HashSet<dymaptic.GeoBlazor.Core.Components.Popups.RelatedRecordsInfoFieldOrder>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent.OrderByFields\">\r\n            <summary>\r\n                An array of RelatedRecordsInfoFieldOrder indicating the display order for the related records, and whether they\r\n                should be sorted in ascending asc or descending desc order.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OrderByFields","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.HashSet<global::dymaptic.GeoBlazor.Core.Components.Popups.RelatedRecordsInfoFieldOrder>"}},{"Kind":"Components.Component","Name":"RelationshipId","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent.RelationshipId\">\r\n            <summary>\r\n                The numeric id value for the defined relationship. This value can be found on the service itself or on the\r\n                service's relationships resource if supportsRelationshipResource is true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RelationshipId","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent.Title\">\r\n            <summary>\r\n                A heading indicating what the relationship's content represents.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent","Common.TypeNameIdentifier":"RelationshipPopupContent","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Runtime.Name":"Components.IComponent"}},{"HashCode":-1890868779,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent\">\r\n            <summary>\r\n                A RelationshipContent popup element represents a relationship element associated with a feature. This can only be\r\n                configured if the related layer or table is added to the map.\r\n                RelationshipContent provides a way to browse related records of the current selected feature within its popup, as\r\n                shown in the images below. The Origin Feature image shows a popup template configured with RelationshipContent.\r\n                When selecting one of the related features in the list, the popup template for the chosen related destination\r\n                feature displays. The Related Destination Feature image shows the destination popup template content with\r\n                FieldsContent and RelationshipContent configured. When exploring a related feature's RelationshipContent, one could\r\n                navigate into that feature's related records or exit the origin feature's related record exploration with the arrow\r\n                button.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-content-RelationshipContent.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent.Description\">\r\n            <summary>\r\n                Describes the relationship's content in detail.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Description","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DisplayCount","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent.DisplayCount\">\r\n            <summary>\r\n                A numeric value indicating the maximum number of related features to display in the list of related records. The\r\n                maximum number of related records to display in the list of related records is 10. If no value is specified, the\r\n                Show all button will be available to display all related records.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayCount","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"DisplayType","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent.DisplayType\">\r\n            <summary>\r\n                A string value indicating how to display related records within the relationship content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayType","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OrderByFields","TypeName":"System.Collections.Generic.HashSet<dymaptic.GeoBlazor.Core.Components.Popups.RelatedRecordsInfoFieldOrder>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent.OrderByFields\">\r\n            <summary>\r\n                An array of RelatedRecordsInfoFieldOrder indicating the display order for the related records, and whether they\r\n                should be sorted in ascending asc or descending desc order.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OrderByFields","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.HashSet<global::dymaptic.GeoBlazor.Core.Components.Popups.RelatedRecordsInfoFieldOrder>"}},{"Kind":"Components.Component","Name":"RelationshipId","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent.RelationshipId\">\r\n            <summary>\r\n                The numeric id value for the defined relationship. This value can be found on the service itself or on the\r\n                service's relationships resource if supportsRelationshipResource is true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RelationshipId","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent.Title\">\r\n            <summary>\r\n                A heading indicating what the relationship's content represents.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent","Common.TypeNameIdentifier":"RelationshipPopupContent","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1279785094,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"RelationshipPopupContent"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent.ChildContent","Common.TypeNameIdentifier":"RelationshipPopupContent","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":573344021,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.RelationshipPopupContent.ChildContent","Common.TypeNameIdentifier":"RelationshipPopupContent","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1221810053,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.RelatedRecordsInfoFieldOrder","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.RelatedRecordsInfoFieldOrder\">\r\n            <summary>\r\n                The RelatedRecordsInfoFieldOrder class indicates the field display order for the related records in a layer's\r\n                PopupTemplate.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-support-RelatedRecordsInfoFieldOrder.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"RelatedRecordsInfoFieldOrder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Field","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.RelatedRecordsInfoFieldOrder.Field\">\r\n            <summary>\r\n                The attribute value of the field selected that will drive the sorting of related records.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Field","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Order","TypeName":"dymaptic.GeoBlazor.Core.Objects.OrderBy?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.RelatedRecordsInfoFieldOrder.Order\">\r\n            <summary>\r\n                Set the ascending or descending sort order of the returned related records.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Order","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.OrderBy?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.RelatedRecordsInfoFieldOrder","Common.TypeNameIdentifier":"RelatedRecordsInfoFieldOrder","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Runtime.Name":"Components.IComponent"}},{"HashCode":-1367871267,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.RelatedRecordsInfoFieldOrder","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.RelatedRecordsInfoFieldOrder\">\r\n            <summary>\r\n                The RelatedRecordsInfoFieldOrder class indicates the field display order for the related records in a layer's\r\n                PopupTemplate.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-support-RelatedRecordsInfoFieldOrder.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Popups.RelatedRecordsInfoFieldOrder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Field","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.RelatedRecordsInfoFieldOrder.Field\">\r\n            <summary>\r\n                The attribute value of the field selected that will drive the sorting of related records.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Field","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Order","TypeName":"dymaptic.GeoBlazor.Core.Objects.OrderBy?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.RelatedRecordsInfoFieldOrder.Order\">\r\n            <summary>\r\n                Set the ascending or descending sort order of the returned related records.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Order","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.OrderBy?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.RelatedRecordsInfoFieldOrder","Common.TypeNameIdentifier":"RelatedRecordsInfoFieldOrder","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1439333681,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.RelatedRecordsInfoFieldOrder.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"RelatedRecordsInfoFieldOrder"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.RelatedRecordsInfoFieldOrder.ChildContent","Common.TypeNameIdentifier":"RelatedRecordsInfoFieldOrder","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-2083134179,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.RelatedRecordsInfoFieldOrder.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Popups.RelatedRecordsInfoFieldOrder"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.RelatedRecordsInfoFieldOrder.ChildContent","Common.TypeNameIdentifier":"RelatedRecordsInfoFieldOrder","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":472156286,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.TextPopupContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.TextPopupContent\">\r\n            <summary>\r\n                A TextContent popup element is used to define descriptive text as an element within a PopupTemplate's content. The\r\n                text may reference values returned from a field attribute or an Arcade expression defined in a PopupTemplate's\r\n                expressionInfos property.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-content-TextContent.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TextPopupContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.TextPopupContent.Text\">\r\n            <summary>\r\n                The formatted string content to display. This may contain a field name enclosed in {} (e.g. {FIELDNAME}), or an\r\n                Arcade expression name (e.g. {expression/EXPRESSIONNAME}). Text content may also leverage HTML tags such as <b></b>\r\n                , <p></p>, and <table></table> for formatting the look and feel of the content.\r\n            </summary>\r\n            <remarks>\r\n                Set the popupTemplate.fieldInfos property for any fields that need to have number formatting within the text.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.TextPopupContent","Common.TypeNameIdentifier":"TextPopupContent","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Runtime.Name":"Components.IComponent"}},{"HashCode":-27130155,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Popups.TextPopupContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Popups.TextPopupContent\">\r\n            <summary>\r\n                A TextContent popup element is used to define descriptive text as an element within a PopupTemplate's content. The\r\n                text may reference values returned from a field attribute or an Arcade expression defined in a PopupTemplate's\r\n                expressionInfos property.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-popup-content-TextContent.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Popups.TextPopupContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Popups.TextPopupContent.Text\">\r\n            <summary>\r\n                The formatted string content to display. This may contain a field name enclosed in {} (e.g. {FIELDNAME}), or an\r\n                Arcade expression name (e.g. {expression/EXPRESSIONNAME}). Text content may also leverage HTML tags such as <b></b>\r\n                , <p></p>, and <table></table> for formatting the look and feel of the content.\r\n            </summary>\r\n            <remarks>\r\n                Set the popupTemplate.fieldInfos property for any fields that need to have number formatting within the text.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.TextPopupContent","Common.TypeNameIdentifier":"TextPopupContent","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1698116869,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.TextPopupContent.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"TextPopupContent"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.TextPopupContent.ChildContent","Common.TypeNameIdentifier":"TextPopupContent","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1635033665,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Popups.TextPopupContent.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Popups.TextPopupContent"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Popups.TextPopupContent.ChildContent","Common.TypeNameIdentifier":"TextPopupContent","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Popups","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1484821566,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition\">\r\n            <summary>\r\n                Defines the symbols to use in a UniqueValueRenderer. Each unique value info defines a symbol that should be used to\r\n                represent features with a specific value.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-support-DimensionalDefinition.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DimensionalDefinition"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"DimensionName","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition.DimensionName\">\r\n            <summary>\r\n                The dimension associated with the variable..\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DimensionName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IsSlice","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition.IsSlice\">\r\n            <summary>\r\n                Indicates whether the values indicate slices (rather than ranges).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsSlice","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"VariableName","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition.VariableName\">\r\n            <summary>\r\n                The required variable name by which to filter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VariableName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Values","TypeName":"System.Collections.Generic.List<System.Int64>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition.Values\">\r\n            <summary>\r\n                An array of single values or tuples [min, max] each defining a range of valid values along the specified dimension.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Values","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::System.Int64>"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition","Common.TypeNameIdentifier":"DimensionalDefinition","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers","Runtime.Name":"Components.IComponent"}},{"HashCode":-1461936093,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition\">\r\n            <summary>\r\n                Defines the symbols to use in a UniqueValueRenderer. Each unique value info defines a symbol that should be used to\r\n                represent features with a specific value.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-support-DimensionalDefinition.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"DimensionName","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition.DimensionName\">\r\n            <summary>\r\n                The dimension associated with the variable..\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DimensionName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IsSlice","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition.IsSlice\">\r\n            <summary>\r\n                Indicates whether the values indicate slices (rather than ranges).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsSlice","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"VariableName","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition.VariableName\">\r\n            <summary>\r\n                The required variable name by which to filter.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VariableName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Values","TypeName":"System.Collections.Generic.List<System.Int64>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition.Values\">\r\n            <summary>\r\n                An array of single values or tuples [min, max] each defining a range of valid values along the specified dimension.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Values","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::System.Int64>"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition","Common.TypeNameIdentifier":"DimensionalDefinition","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":835874752,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"DimensionalDefinition"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition.ChildContent","Common.TypeNameIdentifier":"DimensionalDefinition","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-983610638,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.DimensionalDefinition.ChildContent","Common.TypeNameIdentifier":"DimensionalDefinition","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1130834114,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer\">\r\n            <summary>\r\n                RasterStretchRenderer defines the symbology with a gradual ramp of colors for each pixel in a ImageryLayer, ImageryTileLayer,\r\n                and WCSLayer based on the pixel value. The RasterStretchRenderer works well when you have a large range of values to display,\r\n                such as in imagery, aerial photographs, or elevation models. Important to note that RasterStretchRenderer does not inherit from\r\n                Renderer class.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-renderers-RasterStretchRenderer.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n            \r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"RasterStretchRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ComputeGamma","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.ComputeGamma\">\r\n            <summary>\r\n                The computeGamma automatically calculates best gamma value to render exported image based on empirical model. This is applicable to any stretch type when useGamma is true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ComputeGamma","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"DynamicRangeAdjustment","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.DynamicRangeAdjustment\">\r\n            <summary>\r\n               When Dynamic Range Adjustment is true, the statistics based on the current display extent are calculated as you zoom and pan around the image. This property only applies\r\n               to images in 2D MapView.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DynamicRangeAdjustment","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Gamma","TypeName":"System.Collections.Generic.List<System.Int32>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.Gamma\">\r\n            <summary>\r\n                The gamma values to be used if useGamma is set to true. Gamma refers to the degree of contrast between the mid-level gray values of a raster dataset. Gamma does not\r\n                affect the black or white values in a raster dataset, only the middle values. By applying a gamma correction, you can control the overall brightness of a layer. \r\n                Gamma stretching is only valid with the none, standard-deviation, and min-max stretch\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Gamma","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::System.Int32>"}},{"Kind":"Components.Component","Name":"OutputMax","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.OutputMax\">\r\n            <summary>\r\n                The outputMax denotes the output maximum, which is the highest pixel value. The outputMin and outputMax will set the range of values that will then be linearly contrast\r\n                stretched. The outputMax value ranges from 0-255.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OutputMax","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"OutputMin","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.OutputMin\">\r\n            <summary>\r\n                The outputMin denotes the output minimum, which is the lowest pixel value. The outputMin and outputMax will set the range of values that will then be linearly contrast\r\n                stretched. The outputMin value ranges from 0-255.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OutputMin","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"StretchType","TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.StretchType?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.StretchType\">\r\n            <summary>\r\n                The stretch type defines a histogram stretch that will be applied to the rasters to enhance their appearance. Stretching improves the appearance of the data by spreading the\r\n                pixel values along a histogram from the minimum and maximum values defined by their bit depth.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"StretchType","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Renderers.StretchType?"}},{"Kind":"Components.Component","Name":"Statistics","TypeName":"System.Collections.Generic.List<System.Collections.Generic.List<System.Int32>>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.Statistics\">\r\n            <summary>\r\n                The input statistics can be specified through the statistics property.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Statistics","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::System.Collections.Generic.List<global::System.Int32>>"}},{"Kind":"Components.Component","Name":"UseGamma","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.UseGamma\">\r\n            <summary>\r\n                Denotes whether the gamma value should be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UseGamma","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"NumberOfStandardDeviations","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.NumberOfStandardDeviations\">\r\n            <summary>\r\n                Applicable when stretchType is standard-deviation. Specifies the number of standard deviations to use. The values beyond the number of standard deviations become the outputMin\r\n                and outputMax. The remaining values are linearly stretched between outputMin and outputMax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NumberOfStandardDeviations","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer","Common.TypeNameIdentifier":"RasterStretchRenderer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers","Runtime.Name":"Components.IComponent"}},{"HashCode":-1420475474,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer\">\r\n            <summary>\r\n                RasterStretchRenderer defines the symbology with a gradual ramp of colors for each pixel in a ImageryLayer, ImageryTileLayer,\r\n                and WCSLayer based on the pixel value. The RasterStretchRenderer works well when you have a large range of values to display,\r\n                such as in imagery, aerial photographs, or elevation models. Important to note that RasterStretchRenderer does not inherit from\r\n                Renderer class.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-renderers-RasterStretchRenderer.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n            \r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ComputeGamma","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.ComputeGamma\">\r\n            <summary>\r\n                The computeGamma automatically calculates best gamma value to render exported image based on empirical model. This is applicable to any stretch type when useGamma is true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ComputeGamma","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"DynamicRangeAdjustment","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.DynamicRangeAdjustment\">\r\n            <summary>\r\n               When Dynamic Range Adjustment is true, the statistics based on the current display extent are calculated as you zoom and pan around the image. This property only applies\r\n               to images in 2D MapView.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DynamicRangeAdjustment","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Gamma","TypeName":"System.Collections.Generic.List<System.Int32>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.Gamma\">\r\n            <summary>\r\n                The gamma values to be used if useGamma is set to true. Gamma refers to the degree of contrast between the mid-level gray values of a raster dataset. Gamma does not\r\n                affect the black or white values in a raster dataset, only the middle values. By applying a gamma correction, you can control the overall brightness of a layer. \r\n                Gamma stretching is only valid with the none, standard-deviation, and min-max stretch\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Gamma","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::System.Int32>"}},{"Kind":"Components.Component","Name":"OutputMax","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.OutputMax\">\r\n            <summary>\r\n                The outputMax denotes the output maximum, which is the highest pixel value. The outputMin and outputMax will set the range of values that will then be linearly contrast\r\n                stretched. The outputMax value ranges from 0-255.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OutputMax","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"OutputMin","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.OutputMin\">\r\n            <summary>\r\n                The outputMin denotes the output minimum, which is the lowest pixel value. The outputMin and outputMax will set the range of values that will then be linearly contrast\r\n                stretched. The outputMin value ranges from 0-255.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OutputMin","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"StretchType","TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.StretchType?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.StretchType\">\r\n            <summary>\r\n                The stretch type defines a histogram stretch that will be applied to the rasters to enhance their appearance. Stretching improves the appearance of the data by spreading the\r\n                pixel values along a histogram from the minimum and maximum values defined by their bit depth.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"StretchType","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Renderers.StretchType?"}},{"Kind":"Components.Component","Name":"Statistics","TypeName":"System.Collections.Generic.List<System.Collections.Generic.List<System.Int32>>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.Statistics\">\r\n            <summary>\r\n                The input statistics can be specified through the statistics property.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Statistics","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::System.Collections.Generic.List<global::System.Int32>>"}},{"Kind":"Components.Component","Name":"UseGamma","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.UseGamma\">\r\n            <summary>\r\n                Denotes whether the gamma value should be used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UseGamma","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"NumberOfStandardDeviations","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.NumberOfStandardDeviations\">\r\n            <summary>\r\n                Applicable when stretchType is standard-deviation. Specifies the number of standard deviations to use. The values beyond the number of standard deviations become the outputMin\r\n                and outputMax. The remaining values are linearly stretched between outputMin and outputMax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NumberOfStandardDeviations","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer","Common.TypeNameIdentifier":"RasterStretchRenderer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-2038622776,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"RasterStretchRenderer"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.ChildContent","Common.TypeNameIdentifier":"RasterStretchRenderer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1354077062,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.RasterStretchRenderer.ChildContent","Common.TypeNameIdentifier":"RasterStretchRenderer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-789382,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.SimpleRenderer","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Renderers.SimpleRenderer\">\r\n            <summary>\r\n                SimpleRenderer renders all features in a Layer with one Symbol. This renderer may be used to simply visualize the\r\n                location of geographic features.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-renderers-SimpleRenderer.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SimpleRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.SimpleRenderer","Common.TypeNameIdentifier":"SimpleRenderer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers","Runtime.Name":"Components.IComponent"}},{"HashCode":1736635294,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.SimpleRenderer","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Renderers.SimpleRenderer\">\r\n            <summary>\r\n                SimpleRenderer renders all features in a Layer with one Symbol. This renderer may be used to simply visualize the\r\n                location of geographic features.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-renderers-SimpleRenderer.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Renderers.SimpleRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.SimpleRenderer","Common.TypeNameIdentifier":"SimpleRenderer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":198834214,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.SimpleRenderer.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SimpleRenderer"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.SimpleRenderer.ChildContent","Common.TypeNameIdentifier":"SimpleRenderer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":640155671,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.SimpleRenderer.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Renderers.SimpleRenderer"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.SimpleRenderer.ChildContent","Common.TypeNameIdentifier":"SimpleRenderer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-44235578,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueInfo","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueInfo\">\r\n            <summary>\r\n                Defines the symbols to use in a UniqueValueRenderer. Each unique value info defines a symbol that should be used to\r\n                represent features with a specific value.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-renderers-support-UniqueValueInfo.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"UniqueValueInfo"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueInfo.Value\">\r\n            <summary>\r\n                Features with this value will be rendered with the given symbol.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueInfo.Label\">\r\n            <summary>\r\n                Describes the value represented by the symbol.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueInfo","Common.TypeNameIdentifier":"UniqueValueInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers","Runtime.Name":"Components.IComponent"}},{"HashCode":-1075413518,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueInfo","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueInfo\">\r\n            <summary>\r\n                Defines the symbols to use in a UniqueValueRenderer. Each unique value info defines a symbol that should be used to\r\n                represent features with a specific value.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-renderers-support-UniqueValueInfo.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueInfo"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueInfo.Value\">\r\n            <summary>\r\n                Features with this value will be rendered with the given symbol.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueInfo.Label\">\r\n            <summary>\r\n                Describes the value represented by the symbol.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueInfo","Common.TypeNameIdentifier":"UniqueValueInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-886577371,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueInfo.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"UniqueValueInfo"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueInfo.ChildContent","Common.TypeNameIdentifier":"UniqueValueInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1320457466,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueInfo.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueInfo"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueInfo.ChildContent","Common.TypeNameIdentifier":"UniqueValueInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-564911971,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer\">\r\n            <summary>\r\n                UniqueValueRenderer allows you to symbolize features in a Layer based on one or more matching string attributes.\r\n                This is typically done by using unique colors, fill styles, or images to represent features with equal values in a\r\n                string field.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-renderers-UniqueValueRenderer.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"UniqueValueRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Field","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer.Field\">\r\n            <summary>\r\n                The name of the attribute field the renderer uses to match unique values or types.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Field","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DefaultLabel","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer.DefaultLabel\">\r\n            <summary>\r\n                Label used in the Legend to describe features assigned the default symbol.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DefaultLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer","Common.TypeNameIdentifier":"UniqueValueRenderer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers","Runtime.Name":"Components.IComponent"}},{"HashCode":2066869868,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer\">\r\n            <summary>\r\n                UniqueValueRenderer allows you to symbolize features in a Layer based on one or more matching string attributes.\r\n                This is typically done by using unique colors, fill styles, or images to represent features with equal values in a\r\n                string field.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-renderers-UniqueValueRenderer.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Field","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer.Field\">\r\n            <summary>\r\n                The name of the attribute field the renderer uses to match unique values or types.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Field","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DefaultLabel","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer.DefaultLabel\">\r\n            <summary>\r\n                Label used in the Legend to describe features assigned the default symbol.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DefaultLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer","Common.TypeNameIdentifier":"UniqueValueRenderer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1180764694,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"UniqueValueRenderer"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer.ChildContent","Common.TypeNameIdentifier":"UniqueValueRenderer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-167321025,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer.ChildContent","Common.TypeNameIdentifier":"UniqueValueRenderer","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1352505420,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRendererLegendOptions","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRendererLegendOptions\">\r\n            <summary>\r\n                An object providing options for displaying the renderer in the Legend.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"UniqueValueRendererLegendOptions"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRendererLegendOptions.Title\">\r\n            <summary>\r\n                The title to display in the legend for the renderer\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRendererLegendOptions","Common.TypeNameIdentifier":"UniqueValueRendererLegendOptions","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers","Runtime.Name":"Components.IComponent"}},{"HashCode":-1900425105,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRendererLegendOptions","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRendererLegendOptions\">\r\n            <summary>\r\n                An object providing options for displaying the renderer in the Legend.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRendererLegendOptions"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRendererLegendOptions.Title\">\r\n            <summary>\r\n                The title to display in the legend for the renderer\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRendererLegendOptions","Common.TypeNameIdentifier":"UniqueValueRendererLegendOptions","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1400652683,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRendererLegendOptions.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"UniqueValueRendererLegendOptions"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRendererLegendOptions.ChildContent","Common.TypeNameIdentifier":"UniqueValueRendererLegendOptions","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":235651289,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRendererLegendOptions.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRendererLegendOptions"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRendererLegendOptions.ChildContent","Common.TypeNameIdentifier":"UniqueValueRendererLegendOptions","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-296787080,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.DefaultSymbol","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Renderers.DefaultSymbol\">\r\n            <summary>\r\n                Wrapper to identify the default (fallback) symbol for a <see cref=\"T:dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer\" />\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DefaultSymbol"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.DefaultSymbol","Common.TypeNameIdentifier":"DefaultSymbol","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers","Runtime.Name":"Components.IComponent"}},{"HashCode":-1192994896,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.DefaultSymbol","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Renderers.DefaultSymbol\">\r\n            <summary>\r\n                Wrapper to identify the default (fallback) symbol for a <see cref=\"T:dymaptic.GeoBlazor.Core.Components.Renderers.UniqueValueRenderer\" />\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Renderers.DefaultSymbol"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.DefaultSymbol","Common.TypeNameIdentifier":"DefaultSymbol","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1596607116,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.DefaultSymbol.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"DefaultSymbol"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.DefaultSymbol.ChildContent","Common.TypeNameIdentifier":"DefaultSymbol","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-165864968,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.DefaultSymbol.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Renderers.DefaultSymbol"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.DefaultSymbol.ChildContent","Common.TypeNameIdentifier":"DefaultSymbol","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-194794504,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.AlgorithmicColorRamp","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.AlgorithmicColorRamp\">\r\n            <summary>\r\n                Creates a color ramp for use in a raster renderer. The algorithmic color ramp is defined by specifying two colors and the\r\n                algorithm used to traverse the intervening color spaces.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-rest-support-AlgorithmicColorRamp.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AlgorithmicColorRamp"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Algorithm","TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.Algorithm","IsEnum":true,"Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.AlgorithmicColorRamp.Algorithm\">\r\n            <summary>\r\n                The algorithm used to generate the colors between the fromColor and toColor.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Algorithm","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.Algorithm"}},{"Kind":"Components.Component","Name":"FromColor","TypeName":"dymaptic.GeoBlazor.Core.Objects.MapColor","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.AlgorithmicColorRamp.FromColor\">\r\n            <summary>\r\n                The first color in the color ramp.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FromColor","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.MapColor"}},{"Kind":"Components.Component","Name":"ToColor","TypeName":"dymaptic.GeoBlazor.Core.Objects.MapColor","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.AlgorithmicColorRamp.ToColor\">\r\n            <summary>\r\n                The last color in the color ramp.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ToColor","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.MapColor"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.AlgorithmicColorRamp","Common.TypeNameIdentifier":"AlgorithmicColorRamp","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps","Runtime.Name":"Components.IComponent"}},{"HashCode":-6979702,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.AlgorithmicColorRamp","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.AlgorithmicColorRamp\">\r\n            <summary>\r\n                Creates a color ramp for use in a raster renderer. The algorithmic color ramp is defined by specifying two colors and the\r\n                algorithm used to traverse the intervening color spaces.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-rest-support-AlgorithmicColorRamp.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.AlgorithmicColorRamp"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Algorithm","TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.Algorithm","IsEnum":true,"Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.AlgorithmicColorRamp.Algorithm\">\r\n            <summary>\r\n                The algorithm used to generate the colors between the fromColor and toColor.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Algorithm","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.Algorithm"}},{"Kind":"Components.Component","Name":"FromColor","TypeName":"dymaptic.GeoBlazor.Core.Objects.MapColor","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.AlgorithmicColorRamp.FromColor\">\r\n            <summary>\r\n                The first color in the color ramp.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FromColor","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.MapColor"}},{"Kind":"Components.Component","Name":"ToColor","TypeName":"dymaptic.GeoBlazor.Core.Objects.MapColor","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.AlgorithmicColorRamp.ToColor\">\r\n            <summary>\r\n                The last color in the color ramp.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ToColor","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.MapColor"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.AlgorithmicColorRamp","Common.TypeNameIdentifier":"AlgorithmicColorRamp","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1203554750,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.AlgorithmicColorRamp.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AlgorithmicColorRamp"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.AlgorithmicColorRamp.ChildContent","Common.TypeNameIdentifier":"AlgorithmicColorRamp","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":989698162,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.AlgorithmicColorRamp.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.AlgorithmicColorRamp"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.AlgorithmicColorRamp.ChildContent","Common.TypeNameIdentifier":"AlgorithmicColorRamp","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":437163823,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.MultipartColorRamp","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.MultipartColorRamp\">\r\n            <summary>\r\n                Creates a color ramp for use in a raster renderer. The algorithmic color ramp is defined by specifying two colors and the\r\n                algorithm used to traverse the intervening color spaces.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-rest-support-MultipartColorRamp.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MultipartColorRamp"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.MultipartColorRamp","Common.TypeNameIdentifier":"MultipartColorRamp","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps","Runtime.Name":"Components.IComponent"}},{"HashCode":296341709,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.MultipartColorRamp","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.MultipartColorRamp\">\r\n            <summary>\r\n                Creates a color ramp for use in a raster renderer. The algorithmic color ramp is defined by specifying two colors and the\r\n                algorithm used to traverse the intervening color spaces.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-rest-support-MultipartColorRamp.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.MultipartColorRamp"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.MultipartColorRamp","Common.TypeNameIdentifier":"MultipartColorRamp","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-798370383,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.MultipartColorRamp.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MultipartColorRamp"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.MultipartColorRamp.ChildContent","Common.TypeNameIdentifier":"MultipartColorRamp","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":753149875,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.MultipartColorRamp.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.MultipartColorRamp"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps.MultipartColorRamp.ChildContent","Common.TypeNameIdentifier":"MultipartColorRamp","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Renderers.ColorRamps","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":885930855,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Symbols.MapFont","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Symbols.MapFont\">\r\n            <summary>\r\n                The font used to display 2D text symbols and 3D text symbols. This class allows the developer to set the font's\r\n                family, decoration, size, style, and weight properties. Take note of the \"Known Limitations\" for each property to\r\n                understand how they differ depending on the layer type, and if you working with a MapView or SceneView.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-symbols-Font.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MapFont"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Size","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.MapFont.Size\">\r\n            <summary>\r\n                The font size in points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Family","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.MapFont.Family\">\r\n            <summary>\r\n                The font family of the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Family","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.MapFont.FontStyle\">\r\n            <summary>\r\n                The text style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FontStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Weight","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.MapFont.Weight\">\r\n            <summary>\r\n                The text weight.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Weight","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.MapFont","Common.TypeNameIdentifier":"MapFont","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Symbols","Runtime.Name":"Components.IComponent"}},{"HashCode":2121674136,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Symbols.MapFont","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Symbols.MapFont\">\r\n            <summary>\r\n                The font used to display 2D text symbols and 3D text symbols. This class allows the developer to set the font's\r\n                family, decoration, size, style, and weight properties. Take note of the \"Known Limitations\" for each property to\r\n                understand how they differ depending on the layer type, and if you working with a MapView or SceneView.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-symbols-Font.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Symbols.MapFont"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Size","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.MapFont.Size\">\r\n            <summary>\r\n                The font size in points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Family","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.MapFont.Family\">\r\n            <summary>\r\n                The font family of the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Family","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.MapFont.FontStyle\">\r\n            <summary>\r\n                The text style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FontStyle","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Weight","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.MapFont.Weight\">\r\n            <summary>\r\n                The text weight.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Weight","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.MapFont","Common.TypeNameIdentifier":"MapFont","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Symbols","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1406097265,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Symbols.MapFont.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MapFont"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.MapFont.ChildContent","Common.TypeNameIdentifier":"MapFont","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Symbols","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-2132547932,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Symbols.MapFont.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Symbols.MapFont"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.MapFont.ChildContent","Common.TypeNameIdentifier":"MapFont","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Symbols","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1755085588,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Symbols.Outline","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Symbols.Outline\">\r\n            <summary>\r\n                A convenience sub-class of <see cref=\"T:dymaptic.GeoBlazor.Core.Components.Symbols.SimpleLineSymbol\" /> for defining outlines of other symbols.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Outline"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"LineStyle","TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.SimpleLineSymbol.LineStyle\">\r\n            <summary>\r\n                Specifies the line style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LineStyle","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle?"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.LineSymbol.Width\">\r\n            <summary>\r\n                The width of the symbol in points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Color","TypeName":"dymaptic.GeoBlazor.Core.Objects.MapColor","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.Symbol.Color\">\r\n            <summary>\r\n                The color of the symbol.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.MapColor"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.Outline","Common.TypeNameIdentifier":"Outline","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Symbols","Runtime.Name":"Components.IComponent"}},{"HashCode":135560293,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Symbols.Outline","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Symbols.Outline\">\r\n            <summary>\r\n                A convenience sub-class of <see cref=\"T:dymaptic.GeoBlazor.Core.Components.Symbols.SimpleLineSymbol\" /> for defining outlines of other symbols.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Symbols.Outline"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"LineStyle","TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.SimpleLineSymbol.LineStyle\">\r\n            <summary>\r\n                Specifies the line style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LineStyle","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle?"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.LineSymbol.Width\">\r\n            <summary>\r\n                The width of the symbol in points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Color","TypeName":"dymaptic.GeoBlazor.Core.Objects.MapColor","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.Symbol.Color\">\r\n            <summary>\r\n                The color of the symbol.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.MapColor"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.Outline","Common.TypeNameIdentifier":"Outline","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Symbols","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":357599795,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Symbols.Outline.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Outline"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.Outline.ChildContent","Common.TypeNameIdentifier":"Outline","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Symbols","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1554030287,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Symbols.Outline.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Symbols.Outline"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.Outline.ChildContent","Common.TypeNameIdentifier":"Outline","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Symbols","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":912794319,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Symbols.PictureMarkerSymbol","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Symbols.PictureMarkerSymbol\">\r\n            <summary>\r\n                PictureMarkerSymbol renders Point graphics in either a 2D MapView or 3D SceneView using an image. A url must point\r\n                to a valid image. PictureMarkerSymbols may be applied to point features in a FeatureLayer or individual graphics.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-symbols-PictureMarkerSymbol.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PictureMarkerSymbol"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Height","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.PictureMarkerSymbol.Height\">\r\n            <summary>\r\n                The height of the image in points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.PictureMarkerSymbol.Width\">\r\n            <summary>\r\n                The width of the image in points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.PictureMarkerSymbol.Url\">\r\n            <summary>\r\n                The URL to an image or SVG document.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Url","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Angle","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.MarkerSymbol.Angle\">\r\n            <summary>\r\n                The angle of the marker relative to the screen in degrees.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Angle","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"XOffset","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.MarkerSymbol.XOffset\">\r\n            <summary>\r\n                The offset on the x-axis in points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"XOffset","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"YOffset","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.MarkerSymbol.YOffset\">\r\n            <summary>\r\n                The offset on the y-axis in points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"YOffset","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Color","TypeName":"dymaptic.GeoBlazor.Core.Objects.MapColor","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.Symbol.Color\">\r\n            <summary>\r\n                The color of the symbol.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.MapColor"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.PictureMarkerSymbol","Common.TypeNameIdentifier":"PictureMarkerSymbol","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Symbols","Runtime.Name":"Components.IComponent"}},{"HashCode":1412121409,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Symbols.PictureMarkerSymbol","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Symbols.PictureMarkerSymbol\">\r\n            <summary>\r\n                PictureMarkerSymbol renders Point graphics in either a 2D MapView or 3D SceneView using an image. A url must point\r\n                to a valid image. PictureMarkerSymbols may be applied to point features in a FeatureLayer or individual graphics.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-symbols-PictureMarkerSymbol.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Symbols.PictureMarkerSymbol"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Height","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.PictureMarkerSymbol.Height\">\r\n            <summary>\r\n                The height of the image in points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Height","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.PictureMarkerSymbol.Width\">\r\n            <summary>\r\n                The width of the image in points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.PictureMarkerSymbol.Url\">\r\n            <summary>\r\n                The URL to an image or SVG document.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Url","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Angle","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.MarkerSymbol.Angle\">\r\n            <summary>\r\n                The angle of the marker relative to the screen in degrees.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Angle","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"XOffset","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.MarkerSymbol.XOffset\">\r\n            <summary>\r\n                The offset on the x-axis in points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"XOffset","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"YOffset","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.MarkerSymbol.YOffset\">\r\n            <summary>\r\n                The offset on the y-axis in points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"YOffset","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Color","TypeName":"dymaptic.GeoBlazor.Core.Objects.MapColor","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.Symbol.Color\">\r\n            <summary>\r\n                The color of the symbol.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.MapColor"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.PictureMarkerSymbol","Common.TypeNameIdentifier":"PictureMarkerSymbol","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Symbols","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-152971480,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Symbols.PictureMarkerSymbol.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PictureMarkerSymbol"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.PictureMarkerSymbol.ChildContent","Common.TypeNameIdentifier":"PictureMarkerSymbol","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Symbols","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":829686755,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Symbols.PictureMarkerSymbol.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Symbols.PictureMarkerSymbol"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.PictureMarkerSymbol.ChildContent","Common.TypeNameIdentifier":"PictureMarkerSymbol","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Symbols","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1900320991,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Symbols.SimpleFillSymbol","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Symbols.SimpleFillSymbol\">\r\n            <summary>\r\n                SimpleFillSymbol is used for rendering 2D polygons in either a MapView or a SceneView. It can be filled with a\r\n                solid color, or a pattern. In addition, the symbol can have an optional outline, which is defined by a\r\n                SimpleLineSymbol.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-symbols-SimpleFillSymbol.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SimpleFillSymbol"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"FillStyle","TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.FillStyle?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.SimpleFillSymbol.FillStyle\">\r\n            <summary>\r\n                The fill style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FillStyle","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Symbols.FillStyle?"}},{"Kind":"Components.Component","Name":"Color","TypeName":"dymaptic.GeoBlazor.Core.Objects.MapColor","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.Symbol.Color\">\r\n            <summary>\r\n                The color of the symbol.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.MapColor"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.SimpleFillSymbol","Common.TypeNameIdentifier":"SimpleFillSymbol","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Symbols","Runtime.Name":"Components.IComponent"}},{"HashCode":1217226040,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Symbols.SimpleFillSymbol","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Symbols.SimpleFillSymbol\">\r\n            <summary>\r\n                SimpleFillSymbol is used for rendering 2D polygons in either a MapView or a SceneView. It can be filled with a\r\n                solid color, or a pattern. In addition, the symbol can have an optional outline, which is defined by a\r\n                SimpleLineSymbol.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-symbols-SimpleFillSymbol.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Symbols.SimpleFillSymbol"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"FillStyle","TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.FillStyle?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.SimpleFillSymbol.FillStyle\">\r\n            <summary>\r\n                The fill style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FillStyle","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Symbols.FillStyle?"}},{"Kind":"Components.Component","Name":"Color","TypeName":"dymaptic.GeoBlazor.Core.Objects.MapColor","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.Symbol.Color\">\r\n            <summary>\r\n                The color of the symbol.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.MapColor"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.SimpleFillSymbol","Common.TypeNameIdentifier":"SimpleFillSymbol","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Symbols","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":791658417,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Symbols.SimpleFillSymbol.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SimpleFillSymbol"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.SimpleFillSymbol.ChildContent","Common.TypeNameIdentifier":"SimpleFillSymbol","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Symbols","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-2143868866,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Symbols.SimpleFillSymbol.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Symbols.SimpleFillSymbol"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.SimpleFillSymbol.ChildContent","Common.TypeNameIdentifier":"SimpleFillSymbol","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Symbols","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":74260167,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Symbols.SimpleLineSymbol","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Symbols.SimpleLineSymbol\">\r\n            <summary>\r\n                SimpleLineSymbol is used for rendering 2D polyline geometries in a 2D MapView. SimpleLineSymbol is also used for\r\n                rendering outlines for marker symbols and fill symbols.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-symbols-SimpleLineSymbol.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SimpleLineSymbol"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"LineStyle","TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.SimpleLineSymbol.LineStyle\">\r\n            <summary>\r\n                Specifies the line style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LineStyle","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle?"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.LineSymbol.Width\">\r\n            <summary>\r\n                The width of the symbol in points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Color","TypeName":"dymaptic.GeoBlazor.Core.Objects.MapColor","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.Symbol.Color\">\r\n            <summary>\r\n                The color of the symbol.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.MapColor"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.SimpleLineSymbol","Common.TypeNameIdentifier":"SimpleLineSymbol","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Symbols","Runtime.Name":"Components.IComponent"}},{"HashCode":-1943502103,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Symbols.SimpleLineSymbol","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Symbols.SimpleLineSymbol\">\r\n            <summary>\r\n                SimpleLineSymbol is used for rendering 2D polyline geometries in a 2D MapView. SimpleLineSymbol is also used for\r\n                rendering outlines for marker symbols and fill symbols.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-symbols-SimpleLineSymbol.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Symbols.SimpleLineSymbol"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"LineStyle","TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.SimpleLineSymbol.LineStyle\">\r\n            <summary>\r\n                Specifies the line style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LineStyle","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Symbols.LineStyle?"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.LineSymbol.Width\">\r\n            <summary>\r\n                The width of the symbol in points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Width","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Color","TypeName":"dymaptic.GeoBlazor.Core.Objects.MapColor","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.Symbol.Color\">\r\n            <summary>\r\n                The color of the symbol.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.MapColor"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.SimpleLineSymbol","Common.TypeNameIdentifier":"SimpleLineSymbol","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Symbols","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-419400416,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Symbols.SimpleLineSymbol.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SimpleLineSymbol"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.SimpleLineSymbol.ChildContent","Common.TypeNameIdentifier":"SimpleLineSymbol","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Symbols","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":120047511,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Symbols.SimpleLineSymbol.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Symbols.SimpleLineSymbol"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.SimpleLineSymbol.ChildContent","Common.TypeNameIdentifier":"SimpleLineSymbol","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Symbols","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1786519162,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerSymbol","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerSymbol\">\r\n            <summary>\r\n                SimpleMarkerSymbol is used for rendering 2D Point geometries with a simple shape and color in either a MapView or a\r\n                SceneView. It may be filled with a solid color and have an optional outline, which is defined with a\r\n                SimpleLineSymbol.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-symbols-SimpleMarkerSymbol.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SimpleMarkerSymbol"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Size","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerSymbol.Size\">\r\n            <summary>\r\n                The size of the marker in points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerSymbol.Style\">\r\n            <summary>\r\n                The marker style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Angle","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.MarkerSymbol.Angle\">\r\n            <summary>\r\n                The angle of the marker relative to the screen in degrees.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Angle","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"XOffset","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.MarkerSymbol.XOffset\">\r\n            <summary>\r\n                The offset on the x-axis in points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"XOffset","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"YOffset","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.MarkerSymbol.YOffset\">\r\n            <summary>\r\n                The offset on the y-axis in points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"YOffset","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Color","TypeName":"dymaptic.GeoBlazor.Core.Objects.MapColor","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.Symbol.Color\">\r\n            <summary>\r\n                The color of the symbol.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.MapColor"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerSymbol","Common.TypeNameIdentifier":"SimpleMarkerSymbol","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Symbols","Runtime.Name":"Components.IComponent"}},{"HashCode":1900519093,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerSymbol","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerSymbol\">\r\n            <summary>\r\n                SimpleMarkerSymbol is used for rendering 2D Point geometries with a simple shape and color in either a MapView or a\r\n                SceneView. It may be filled with a solid color and have an optional outline, which is defined with a\r\n                SimpleLineSymbol.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-symbols-SimpleMarkerSymbol.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerSymbol"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Size","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerSymbol.Size\">\r\n            <summary>\r\n                The size of the marker in points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Size","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerSymbol.Style\">\r\n            <summary>\r\n                The marker style.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Angle","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.MarkerSymbol.Angle\">\r\n            <summary>\r\n                The angle of the marker relative to the screen in degrees.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Angle","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"XOffset","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.MarkerSymbol.XOffset\">\r\n            <summary>\r\n                The offset on the x-axis in points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"XOffset","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"YOffset","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.MarkerSymbol.YOffset\">\r\n            <summary>\r\n                The offset on the y-axis in points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"YOffset","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Color","TypeName":"dymaptic.GeoBlazor.Core.Objects.MapColor","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.Symbol.Color\">\r\n            <summary>\r\n                The color of the symbol.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.MapColor"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerSymbol","Common.TypeNameIdentifier":"SimpleMarkerSymbol","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Symbols","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1993526099,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerSymbol.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SimpleMarkerSymbol"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerSymbol.ChildContent","Common.TypeNameIdentifier":"SimpleMarkerSymbol","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Symbols","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":373551960,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerSymbol.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerSymbol"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.SimpleMarkerSymbol.ChildContent","Common.TypeNameIdentifier":"SimpleMarkerSymbol","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Symbols","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1739327518,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol\">\r\n            <summary>\r\n                Text symbols are used to define the graphic for displaying labels on a FeatureLayer, CSVLayer, Sublayer, and\r\n                StreamLayer in a 2D MapView. Text symbols can also be used to define the symbol property of Graphic if the geometry\r\n                type is Point or Multipoint. With this class, you may alter the color, font, halo, and other properties of the\r\n                label graphic.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-symbols-TextSymbol.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TextSymbol"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HaloColor","TypeName":"dymaptic.GeoBlazor.Core.Objects.MapColor","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.HaloColor\">\r\n            <summary>\r\n                The color of the text symbol's halo.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HaloColor","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.MapColor"}},{"Kind":"Components.Component","Name":"HaloSize","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.HaloSize\">\r\n            <summary>\r\n                The size in points of the text symbol's halo.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HaloSize","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.Text\">\r\n            <summary>\r\n                The text string to display in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Color","TypeName":"dymaptic.GeoBlazor.Core.Objects.MapColor","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.Symbol.Color\">\r\n            <summary>\r\n                The color of the symbol.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.MapColor"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol","Common.TypeNameIdentifier":"TextSymbol","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Symbols","Runtime.Name":"Components.IComponent"}},{"HashCode":97197366,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol\">\r\n            <summary>\r\n                Text symbols are used to define the graphic for displaying labels on a FeatureLayer, CSVLayer, Sublayer, and\r\n                StreamLayer in a 2D MapView. Text symbols can also be used to define the symbol property of Graphic if the geometry\r\n                type is Point or Multipoint. With this class, you may alter the color, font, halo, and other properties of the\r\n                label graphic.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-symbols-TextSymbol.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HaloColor","TypeName":"dymaptic.GeoBlazor.Core.Objects.MapColor","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.HaloColor\">\r\n            <summary>\r\n                The color of the text symbol's halo.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HaloColor","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.MapColor"}},{"Kind":"Components.Component","Name":"HaloSize","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.HaloSize\">\r\n            <summary>\r\n                The size in points of the text symbol's halo.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HaloSize","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.Text\">\r\n            <summary>\r\n                The text string to display in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Text","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Color","TypeName":"dymaptic.GeoBlazor.Core.Objects.MapColor","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Symbols.Symbol.Color\">\r\n            <summary>\r\n                The color of the symbol.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.MapColor"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol","Common.TypeNameIdentifier":"TextSymbol","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Symbols","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":210669870,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"TextSymbol"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.ChildContent","Common.TypeNameIdentifier":"TextSymbol","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Symbols","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1964229779,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Symbols.TextSymbol.ChildContent","Common.TypeNameIdentifier":"TextSymbol","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Symbols","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1698194082,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Views.MapView","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Views.MapView\">\r\n            <summary>\r\n                The Top-Level Map Component Container.\r\n                A MapView displays a 2D view of a Map instance. An instance of MapView must be created to render a Map (along with\r\n                its operational and base layers) in 2D. To render a map and its layers in 3D, see the documentation for SceneView.\r\n                For a general overview of views, see View.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-views-MapView.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n            <example>\r\n                <a target=\"_blank\" href=\"https://samples.geoblazor.com/navigation\">Sample - Navigation</a>\r\n            </example>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MapView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Style\">\r\n            <summary>\r\n                Inline css styling attribute\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Class\">\r\n            <summary>\r\n                Inline html/css class selector for applying css\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Latitude","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Latitude\">\r\n            <summary>\r\n                The Latitude for the Center point of the view\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Latitude","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Longitude","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Longitude\">\r\n            <summary>\r\n                The Longitude for the Center point of the view\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Longitude","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Center","TypeName":"dymaptic.GeoBlazor.Core.Components.Geometries.Point","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Center\">\r\n            <summary>\r\n                The Center point of the view, equivalent to setting Latitude/Longitude\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Center","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Geometries.Point"}},{"Kind":"Components.Component","Name":"Zoom","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Zoom\">\r\n            <summary>\r\n                Represents the level of detail (LOD) at the center of the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Zoom","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Scale\">\r\n            <summary>\r\n                Represents the map scale at the center of the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Scale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Rotation\">\r\n            <summary>\r\n                The clockwise rotation of due north in relation to the top of the view in degrees.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Rotation","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"AllowDefaultEsriLogin","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.AllowDefaultEsriLogin\">\r\n            <summary>\r\n                Allows maps to be rendered without an Api or OAuth Token, which will trigger a default esri login popup.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AllowDefaultEsriLogin","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"LoadOnRender","TypeName":"System.Boolean","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.LoadOnRender\">\r\n            <summary>\r\n                Boolean flag that can be set to false to prevent the MapView from automatically rendering with the Blazor\r\n                components.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LoadOnRender","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"PromptForArcGISKey","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.PromptForArcGISKey\">\r\n            <summary>\r\n                Provides an override for the default behavior of requiring an API key. By setting to \"false\", all calls to ArcGIS\r\n                services will trigger a sign-in popup.\r\n            </summary>\r\n            <remarks>\r\n                Setting this to \"false\" is the same as setting <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.AllowDefaultEsriLogin\" /> to \"true\". This is provided\r\n                simply for convenience of discovery.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"PromptForArcGISKey","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"PromptForOAuthLogin","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.PromptForOAuthLogin\">\r\n            <summary>\r\n                If you set an `AppId` in your configuration, setting this to true will cause the app to attempt to auto-login\r\n                using ArcGIS OAuth.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PromptForOAuthLogin","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"OnJavascriptErrorHandler","TypeName":"System.Func<dymaptic.GeoBlazor.Core.Exceptions.JavascriptException, System.Threading.Tasks.Task>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptErrorHandler\">\r\n            <summary>\r\n                Implement this handler in your calling code to catch and handle Javascript errors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::dymaptic.GeoBlazor.Core.Exceptions.JavascriptException, global::System.Threading.Tasks.Task>","Common.PropertyName":"OnJavascriptErrorHandler","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.ClickEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnClick\">\r\n            <summary>\r\n                Handler delegate for click events on the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.ClickEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDoubleClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.ClickEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnDoubleClick\">\r\n            <summary>\r\n                Handler delegate for double-click events on the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnDoubleClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.ClickEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnImmediateClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.ClickEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnImmediateClick\">\r\n            <summary>\r\n                Handler delegate for immediate-click events on the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnImmediateClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.ClickEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnImmediateDoubleClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.ClickEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnImmediateDoubleClick\">\r\n            <summary>\r\n                Handler delegate for immediate-double-click events on the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnImmediateDoubleClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.ClickEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHold","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.ClickEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnHold\">\r\n            <summary>\r\n                Handler delegate for hold events on the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnHold","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.ClickEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.BlurEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnBlur\">\r\n            <summary>\r\n                Handler delegate for blur (lost focus) events on the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnBlur","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.BlurEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.FocusEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnFocus\">\r\n            <summary>\r\n                Handler delegate for focus events on the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnFocus","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.FocusEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDrag","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.DragEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnDrag\">\r\n            <summary>\r\n                Handler delegate for pointer drag events on the view, returns a <see cref=\"T:dymaptic.GeoBlazor.Core.Events.DragEvent\" />.\r\n            </summary>\r\n            <remarks>\r\n                The real-time nature of this handler make it a challenge to use continuously over SignalR in Blazor Server.\r\n                In this scenario, you should write a custom JavaScript handler instead.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnDrag","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.DragEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPointerDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.PointerEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerDown\">\r\n            <summary>\r\n                Handler delegate for pointer down events on the view.\r\n            </summary>\r\n            <remarks>\r\n                Fires after a mouse button is pressed, or a finger touches the display.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnPointerDown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.PointerEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPointerEnter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.PointerEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerEnter\">\r\n            <summary>\r\n                Handler delegate for pointer enter events on the view.\r\n            </summary>\r\n            <remarks>\r\n                Fires after a mouse cursor enters the view, or a display touch begins.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnPointerEnter","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.PointerEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPointerLeave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.PointerEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerLeave\">\r\n            <summary>\r\n                Handler delegate for pointer leave events on the view. Must take in a <see cref=\"T:dymaptic.GeoBlazor.Core.Components.Geometries.Point\" /> and return a\r\n                <see cref=\"T:System.Threading.Tasks.Task\" />.\r\n            </summary>\r\n            <remarks>\r\n                Fires after a mouse cursor leaves the view, or a display touch ends.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnPointerLeave","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.PointerEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPointerMove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.PointerEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerMove\">\r\n            <summary>\r\n                Handler delegate for point move events on the view. Must take in a <see cref=\"T:dymaptic.GeoBlazor.Core.Components.Geometries.Point\" /> and return a\r\n                <see cref=\"T:System.Threading.Tasks.Task\" />.\r\n            </summary>\r\n            <remarks>\r\n                The real-time nature of this handler make it a challenge to use continuously over SignalR in Blazor Server.\r\n                In this scenario, you should write a custom JavaScript handler instead.\r\n                See\r\n                <a target=\"_blank\" href=\"https://github.com/dymaptic/GeoBlazor/blob/develop/samples/dymaptic.GeoBlazor.Core.Sample.Shared/Pages/DisplayProjection.razor\">\r\n                    Display\r\n                    Projection\r\n                </a>\r\n                code.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnPointerMove","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.PointerEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPointerUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.PointerEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerUp\">\r\n            <summary>\r\n                Handler delegate for pointer up events on the view. Must take in a <see cref=\"T:dymaptic.GeoBlazor.Core.Components.Geometries.Point\" /> and return a\r\n                <see cref=\"T:System.Threading.Tasks.Task\" />.\r\n            </summary>\r\n            <remarks>\r\n                Fires after a mouse button is released, or a display touch ends.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnPointerUp","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.PointerEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.KeyDownEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnKeyDown\">\r\n            <summary>\r\n                Handler delegate for key-down events on the view.\r\n            </summary>\r\n            <remarks>\r\n                Fires after a keyboard key is pressed.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyDown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.KeyDownEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.KeyUpEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnKeyUp\">\r\n            <summary>\r\n                Handler delegate for key-up events on the view.\r\n            </summary>\r\n            <remarks>\r\n                Fires after a keyboard key is released.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyUp","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.KeyUpEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnViewInitialized","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnViewInitialized\">\r\n            <summary>\r\n                Event triggered when the JS view is created, but before the full map is rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnViewInitialized","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMapRendered","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnMapRendered\">\r\n            <summary>\r\n                Handler delegate for when the map view is fully rendered. Must return a <see cref=\"T:System.Threading.Tasks.Task\" />.\r\n            </summary>\r\n            <remarks>\r\n                OBSOLETE: The naming of this method was inconsistent with ArcGIS and the name of this class. It has been replaced by <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnViewRendered\" /> which also returns the Id of the view for handling multi-view scenarios.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnMapRendered","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnViewRendered","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Guid>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnViewRendered\">\r\n            <summary>\r\n                Handler delegate for when the map view is fully rendered. Must return a <see cref=\"T:System.Threading.Tasks.Task\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnViewRendered","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Guid>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSpatialReferenceChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnSpatialReferenceChanged\">\r\n            <summary>\r\n                Handler delegate for the view's Spatial Reference changing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnSpatialReferenceChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnExtentChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Components.Geometries.Extent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnExtentChanged\">\r\n            <summary>\r\n                Handler delegate for the view's Extent changing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnExtentChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Components.Geometries.Extent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnResize","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.ResizeEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnResize\">\r\n            <summary>\r\n                Handler delegate for the view's Extent changing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnResize","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.ResizeEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMouseWheel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.MouseWheelEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnMouseWheel\">\r\n            <summary>\r\n                Handler delegate for the view's Extent changing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnMouseWheel","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.MouseWheelEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnLayerViewCreate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.LayerViewCreateEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnLayerViewCreate\">\r\n            <summary>\r\n                Fires after each layer in the map has a corresponding LayerView created and rendered in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnLayerViewCreate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.LayerViewCreateEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnLayerViewDestroy","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.LayerViewDestroyEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnLayerViewDestroy\">\r\n            <summary>\r\n                Fires after a LayerView is destroyed and is no longer rendered in the view. This happens for example when a layer\r\n                is removed from the map of the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnLayerViewDestroy","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.LayerViewDestroyEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnLayerViewCreateError","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.LayerViewCreateErrorEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnLayerViewCreateError\">\r\n            <summary>\r\n                Fires after a LayerView is destroyed and is no longer rendered in the view. This happens for example when a layer\r\n                is removed from the map of the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnLayerViewCreateError","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.LayerViewCreateErrorEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"EventRateLimitInMilliseconds","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.EventRateLimitInMilliseconds\">\r\n            <summary>\r\n                Set this parameter to limit the rate at which recurring events are returned. Applies to <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnDrag\" />,\r\n                <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerMove\" />, <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnMouseWheel\" />, <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnResize\" />, and\r\n                <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnExtentChanged\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EventRateLimitInMilliseconds","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"GraphicSerializationChunkSize","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.GraphicSerializationChunkSize\">\r\n            <summary>\r\n               Optional setting to control the number of graphics that are serialized in a single chunk. Tuning this value might help with performance when adding large graphic sets.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GraphicSerializationChunkSize","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Views.MapView","Common.TypeNameIdentifier":"MapView","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Views","Runtime.Name":"Components.IComponent"}},{"HashCode":-1146895690,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Views.MapView","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Views.MapView\">\r\n            <summary>\r\n                The Top-Level Map Component Container.\r\n                A MapView displays a 2D view of a Map instance. An instance of MapView must be created to render a Map (along with\r\n                its operational and base layers) in 2D. To render a map and its layers in 3D, see the documentation for SceneView.\r\n                For a general overview of views, see View.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-views-MapView.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n            <example>\r\n                <a target=\"_blank\" href=\"https://samples.geoblazor.com/navigation\">Sample - Navigation</a>\r\n            </example>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Views.MapView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Style\">\r\n            <summary>\r\n                Inline css styling attribute\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Class\">\r\n            <summary>\r\n                Inline html/css class selector for applying css\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Latitude","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Latitude\">\r\n            <summary>\r\n                The Latitude for the Center point of the view\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Latitude","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Longitude","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Longitude\">\r\n            <summary>\r\n                The Longitude for the Center point of the view\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Longitude","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Center","TypeName":"dymaptic.GeoBlazor.Core.Components.Geometries.Point","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Center\">\r\n            <summary>\r\n                The Center point of the view, equivalent to setting Latitude/Longitude\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Center","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Geometries.Point"}},{"Kind":"Components.Component","Name":"Zoom","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Zoom\">\r\n            <summary>\r\n                Represents the level of detail (LOD) at the center of the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Zoom","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Scale\">\r\n            <summary>\r\n                Represents the map scale at the center of the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Scale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Rotation\">\r\n            <summary>\r\n                The clockwise rotation of due north in relation to the top of the view in degrees.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Rotation","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"AllowDefaultEsriLogin","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.AllowDefaultEsriLogin\">\r\n            <summary>\r\n                Allows maps to be rendered without an Api or OAuth Token, which will trigger a default esri login popup.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AllowDefaultEsriLogin","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"LoadOnRender","TypeName":"System.Boolean","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.LoadOnRender\">\r\n            <summary>\r\n                Boolean flag that can be set to false to prevent the MapView from automatically rendering with the Blazor\r\n                components.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LoadOnRender","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"PromptForArcGISKey","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.PromptForArcGISKey\">\r\n            <summary>\r\n                Provides an override for the default behavior of requiring an API key. By setting to \"false\", all calls to ArcGIS\r\n                services will trigger a sign-in popup.\r\n            </summary>\r\n            <remarks>\r\n                Setting this to \"false\" is the same as setting <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.AllowDefaultEsriLogin\" /> to \"true\". This is provided\r\n                simply for convenience of discovery.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"PromptForArcGISKey","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"PromptForOAuthLogin","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.PromptForOAuthLogin\">\r\n            <summary>\r\n                If you set an `AppId` in your configuration, setting this to true will cause the app to attempt to auto-login\r\n                using ArcGIS OAuth.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PromptForOAuthLogin","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"OnJavascriptErrorHandler","TypeName":"System.Func<dymaptic.GeoBlazor.Core.Exceptions.JavascriptException, System.Threading.Tasks.Task>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptErrorHandler\">\r\n            <summary>\r\n                Implement this handler in your calling code to catch and handle Javascript errors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::dymaptic.GeoBlazor.Core.Exceptions.JavascriptException, global::System.Threading.Tasks.Task>","Common.PropertyName":"OnJavascriptErrorHandler","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.ClickEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnClick\">\r\n            <summary>\r\n                Handler delegate for click events on the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.ClickEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDoubleClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.ClickEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnDoubleClick\">\r\n            <summary>\r\n                Handler delegate for double-click events on the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnDoubleClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.ClickEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnImmediateClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.ClickEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnImmediateClick\">\r\n            <summary>\r\n                Handler delegate for immediate-click events on the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnImmediateClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.ClickEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnImmediateDoubleClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.ClickEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnImmediateDoubleClick\">\r\n            <summary>\r\n                Handler delegate for immediate-double-click events on the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnImmediateDoubleClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.ClickEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHold","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.ClickEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnHold\">\r\n            <summary>\r\n                Handler delegate for hold events on the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnHold","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.ClickEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.BlurEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnBlur\">\r\n            <summary>\r\n                Handler delegate for blur (lost focus) events on the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnBlur","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.BlurEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.FocusEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnFocus\">\r\n            <summary>\r\n                Handler delegate for focus events on the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnFocus","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.FocusEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDrag","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.DragEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnDrag\">\r\n            <summary>\r\n                Handler delegate for pointer drag events on the view, returns a <see cref=\"T:dymaptic.GeoBlazor.Core.Events.DragEvent\" />.\r\n            </summary>\r\n            <remarks>\r\n                The real-time nature of this handler make it a challenge to use continuously over SignalR in Blazor Server.\r\n                In this scenario, you should write a custom JavaScript handler instead.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnDrag","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.DragEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPointerDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.PointerEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerDown\">\r\n            <summary>\r\n                Handler delegate for pointer down events on the view.\r\n            </summary>\r\n            <remarks>\r\n                Fires after a mouse button is pressed, or a finger touches the display.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnPointerDown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.PointerEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPointerEnter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.PointerEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerEnter\">\r\n            <summary>\r\n                Handler delegate for pointer enter events on the view.\r\n            </summary>\r\n            <remarks>\r\n                Fires after a mouse cursor enters the view, or a display touch begins.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnPointerEnter","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.PointerEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPointerLeave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.PointerEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerLeave\">\r\n            <summary>\r\n                Handler delegate for pointer leave events on the view. Must take in a <see cref=\"T:dymaptic.GeoBlazor.Core.Components.Geometries.Point\" /> and return a\r\n                <see cref=\"T:System.Threading.Tasks.Task\" />.\r\n            </summary>\r\n            <remarks>\r\n                Fires after a mouse cursor leaves the view, or a display touch ends.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnPointerLeave","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.PointerEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPointerMove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.PointerEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerMove\">\r\n            <summary>\r\n                Handler delegate for point move events on the view. Must take in a <see cref=\"T:dymaptic.GeoBlazor.Core.Components.Geometries.Point\" /> and return a\r\n                <see cref=\"T:System.Threading.Tasks.Task\" />.\r\n            </summary>\r\n            <remarks>\r\n                The real-time nature of this handler make it a challenge to use continuously over SignalR in Blazor Server.\r\n                In this scenario, you should write a custom JavaScript handler instead.\r\n                See\r\n                <a target=\"_blank\" href=\"https://github.com/dymaptic/GeoBlazor/blob/develop/samples/dymaptic.GeoBlazor.Core.Sample.Shared/Pages/DisplayProjection.razor\">\r\n                    Display\r\n                    Projection\r\n                </a>\r\n                code.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnPointerMove","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.PointerEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPointerUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.PointerEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerUp\">\r\n            <summary>\r\n                Handler delegate for pointer up events on the view. Must take in a <see cref=\"T:dymaptic.GeoBlazor.Core.Components.Geometries.Point\" /> and return a\r\n                <see cref=\"T:System.Threading.Tasks.Task\" />.\r\n            </summary>\r\n            <remarks>\r\n                Fires after a mouse button is released, or a display touch ends.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnPointerUp","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.PointerEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.KeyDownEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnKeyDown\">\r\n            <summary>\r\n                Handler delegate for key-down events on the view.\r\n            </summary>\r\n            <remarks>\r\n                Fires after a keyboard key is pressed.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyDown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.KeyDownEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.KeyUpEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnKeyUp\">\r\n            <summary>\r\n                Handler delegate for key-up events on the view.\r\n            </summary>\r\n            <remarks>\r\n                Fires after a keyboard key is released.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyUp","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.KeyUpEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnViewInitialized","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnViewInitialized\">\r\n            <summary>\r\n                Event triggered when the JS view is created, but before the full map is rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnViewInitialized","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMapRendered","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnMapRendered\">\r\n            <summary>\r\n                Handler delegate for when the map view is fully rendered. Must return a <see cref=\"T:System.Threading.Tasks.Task\" />.\r\n            </summary>\r\n            <remarks>\r\n                OBSOLETE: The naming of this method was inconsistent with ArcGIS and the name of this class. It has been replaced by <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnViewRendered\" /> which also returns the Id of the view for handling multi-view scenarios.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnMapRendered","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnViewRendered","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Guid>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnViewRendered\">\r\n            <summary>\r\n                Handler delegate for when the map view is fully rendered. Must return a <see cref=\"T:System.Threading.Tasks.Task\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnViewRendered","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Guid>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSpatialReferenceChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnSpatialReferenceChanged\">\r\n            <summary>\r\n                Handler delegate for the view's Spatial Reference changing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnSpatialReferenceChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnExtentChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Components.Geometries.Extent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnExtentChanged\">\r\n            <summary>\r\n                Handler delegate for the view's Extent changing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnExtentChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Components.Geometries.Extent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnResize","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.ResizeEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnResize\">\r\n            <summary>\r\n                Handler delegate for the view's Extent changing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnResize","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.ResizeEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMouseWheel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.MouseWheelEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnMouseWheel\">\r\n            <summary>\r\n                Handler delegate for the view's Extent changing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnMouseWheel","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.MouseWheelEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnLayerViewCreate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.LayerViewCreateEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnLayerViewCreate\">\r\n            <summary>\r\n                Fires after each layer in the map has a corresponding LayerView created and rendered in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnLayerViewCreate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.LayerViewCreateEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnLayerViewDestroy","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.LayerViewDestroyEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnLayerViewDestroy\">\r\n            <summary>\r\n                Fires after a LayerView is destroyed and is no longer rendered in the view. This happens for example when a layer\r\n                is removed from the map of the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnLayerViewDestroy","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.LayerViewDestroyEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnLayerViewCreateError","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.LayerViewCreateErrorEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnLayerViewCreateError\">\r\n            <summary>\r\n                Fires after a LayerView is destroyed and is no longer rendered in the view. This happens for example when a layer\r\n                is removed from the map of the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnLayerViewCreateError","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.LayerViewCreateErrorEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"EventRateLimitInMilliseconds","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.EventRateLimitInMilliseconds\">\r\n            <summary>\r\n                Set this parameter to limit the rate at which recurring events are returned. Applies to <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnDrag\" />,\r\n                <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerMove\" />, <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnMouseWheel\" />, <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnResize\" />, and\r\n                <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnExtentChanged\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EventRateLimitInMilliseconds","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"GraphicSerializationChunkSize","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.GraphicSerializationChunkSize\">\r\n            <summary>\r\n               Optional setting to control the number of graphics that are serialized in a single chunk. Tuning this value might help with performance when adding large graphic sets.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GraphicSerializationChunkSize","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Views.MapView","Common.TypeNameIdentifier":"MapView","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Views","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1772160914,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Views.MapView.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MapView"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Views.MapView.ChildContent","Common.TypeNameIdentifier":"MapView","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Views","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1615110520,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Views.MapView.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Views.MapView"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Views.MapView.ChildContent","Common.TypeNameIdentifier":"MapView","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Views","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1954066408,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Views.SceneView","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Views.SceneView\">\r\n            <summary>\r\n                A SceneView displays a 3D view of a Map or WebScene instance using WebGL. To render a map and its layers in 2D, see\r\n                the documentation for MapView. For a general overview of views, see View.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n            <example>\r\n                <a target=\"_blank\" href=\"https://samples.geoblazor.com/web-scene\">Sample - Web Scene</a>\r\n            </example>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SceneView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ZIndex","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.SceneView.ZIndex\">\r\n            <summary>\r\n                The Z-Index (elevation) of the camera position over the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ZIndex","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Tilt","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.SceneView.Tilt\">\r\n            <summary>\r\n                The tilt of the camera in degrees with respect to the surface as projected down from the camera position.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tilt","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Style\">\r\n            <summary>\r\n                Inline css styling attribute\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Class\">\r\n            <summary>\r\n                Inline html/css class selector for applying css\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Latitude","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Latitude\">\r\n            <summary>\r\n                The Latitude for the Center point of the view\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Latitude","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Longitude","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Longitude\">\r\n            <summary>\r\n                The Longitude for the Center point of the view\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Longitude","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Center","TypeName":"dymaptic.GeoBlazor.Core.Components.Geometries.Point","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Center\">\r\n            <summary>\r\n                The Center point of the view, equivalent to setting Latitude/Longitude\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Center","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Geometries.Point"}},{"Kind":"Components.Component","Name":"Zoom","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Zoom\">\r\n            <summary>\r\n                Represents the level of detail (LOD) at the center of the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Zoom","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Scale\">\r\n            <summary>\r\n                Represents the map scale at the center of the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Scale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Rotation\">\r\n            <summary>\r\n                The clockwise rotation of due north in relation to the top of the view in degrees.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Rotation","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"AllowDefaultEsriLogin","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.AllowDefaultEsriLogin\">\r\n            <summary>\r\n                Allows maps to be rendered without an Api or OAuth Token, which will trigger a default esri login popup.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AllowDefaultEsriLogin","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"LoadOnRender","TypeName":"System.Boolean","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.LoadOnRender\">\r\n            <summary>\r\n                Boolean flag that can be set to false to prevent the MapView from automatically rendering with the Blazor\r\n                components.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LoadOnRender","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"PromptForArcGISKey","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.PromptForArcGISKey\">\r\n            <summary>\r\n                Provides an override for the default behavior of requiring an API key. By setting to \"false\", all calls to ArcGIS\r\n                services will trigger a sign-in popup.\r\n            </summary>\r\n            <remarks>\r\n                Setting this to \"false\" is the same as setting <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.AllowDefaultEsriLogin\" /> to \"true\". This is provided\r\n                simply for convenience of discovery.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"PromptForArcGISKey","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"PromptForOAuthLogin","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.PromptForOAuthLogin\">\r\n            <summary>\r\n                If you set an `AppId` in your configuration, setting this to true will cause the app to attempt to auto-login\r\n                using ArcGIS OAuth.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PromptForOAuthLogin","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"OnJavascriptErrorHandler","TypeName":"System.Func<dymaptic.GeoBlazor.Core.Exceptions.JavascriptException, System.Threading.Tasks.Task>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptErrorHandler\">\r\n            <summary>\r\n                Implement this handler in your calling code to catch and handle Javascript errors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::dymaptic.GeoBlazor.Core.Exceptions.JavascriptException, global::System.Threading.Tasks.Task>","Common.PropertyName":"OnJavascriptErrorHandler","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.ClickEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnClick\">\r\n            <summary>\r\n                Handler delegate for click events on the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.ClickEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDoubleClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.ClickEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnDoubleClick\">\r\n            <summary>\r\n                Handler delegate for double-click events on the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnDoubleClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.ClickEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnImmediateClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.ClickEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnImmediateClick\">\r\n            <summary>\r\n                Handler delegate for immediate-click events on the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnImmediateClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.ClickEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnImmediateDoubleClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.ClickEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnImmediateDoubleClick\">\r\n            <summary>\r\n                Handler delegate for immediate-double-click events on the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnImmediateDoubleClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.ClickEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHold","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.ClickEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnHold\">\r\n            <summary>\r\n                Handler delegate for hold events on the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnHold","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.ClickEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.BlurEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnBlur\">\r\n            <summary>\r\n                Handler delegate for blur (lost focus) events on the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnBlur","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.BlurEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.FocusEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnFocus\">\r\n            <summary>\r\n                Handler delegate for focus events on the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnFocus","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.FocusEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDrag","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.DragEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnDrag\">\r\n            <summary>\r\n                Handler delegate for pointer drag events on the view, returns a <see cref=\"T:dymaptic.GeoBlazor.Core.Events.DragEvent\" />.\r\n            </summary>\r\n            <remarks>\r\n                The real-time nature of this handler make it a challenge to use continuously over SignalR in Blazor Server.\r\n                In this scenario, you should write a custom JavaScript handler instead.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnDrag","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.DragEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPointerDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.PointerEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerDown\">\r\n            <summary>\r\n                Handler delegate for pointer down events on the view.\r\n            </summary>\r\n            <remarks>\r\n                Fires after a mouse button is pressed, or a finger touches the display.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnPointerDown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.PointerEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPointerEnter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.PointerEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerEnter\">\r\n            <summary>\r\n                Handler delegate for pointer enter events on the view.\r\n            </summary>\r\n            <remarks>\r\n                Fires after a mouse cursor enters the view, or a display touch begins.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnPointerEnter","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.PointerEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPointerLeave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.PointerEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerLeave\">\r\n            <summary>\r\n                Handler delegate for pointer leave events on the view. Must take in a <see cref=\"T:dymaptic.GeoBlazor.Core.Components.Geometries.Point\" /> and return a\r\n                <see cref=\"T:System.Threading.Tasks.Task\" />.\r\n            </summary>\r\n            <remarks>\r\n                Fires after a mouse cursor leaves the view, or a display touch ends.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnPointerLeave","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.PointerEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPointerMove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.PointerEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerMove\">\r\n            <summary>\r\n                Handler delegate for point move events on the view. Must take in a <see cref=\"T:dymaptic.GeoBlazor.Core.Components.Geometries.Point\" /> and return a\r\n                <see cref=\"T:System.Threading.Tasks.Task\" />.\r\n            </summary>\r\n            <remarks>\r\n                The real-time nature of this handler make it a challenge to use continuously over SignalR in Blazor Server.\r\n                In this scenario, you should write a custom JavaScript handler instead.\r\n                See\r\n                <a target=\"_blank\" href=\"https://github.com/dymaptic/GeoBlazor/blob/develop/samples/dymaptic.GeoBlazor.Core.Sample.Shared/Pages/DisplayProjection.razor\">\r\n                    Display\r\n                    Projection\r\n                </a>\r\n                code.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnPointerMove","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.PointerEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPointerUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.PointerEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerUp\">\r\n            <summary>\r\n                Handler delegate for pointer up events on the view. Must take in a <see cref=\"T:dymaptic.GeoBlazor.Core.Components.Geometries.Point\" /> and return a\r\n                <see cref=\"T:System.Threading.Tasks.Task\" />.\r\n            </summary>\r\n            <remarks>\r\n                Fires after a mouse button is released, or a display touch ends.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnPointerUp","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.PointerEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.KeyDownEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnKeyDown\">\r\n            <summary>\r\n                Handler delegate for key-down events on the view.\r\n            </summary>\r\n            <remarks>\r\n                Fires after a keyboard key is pressed.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyDown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.KeyDownEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.KeyUpEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnKeyUp\">\r\n            <summary>\r\n                Handler delegate for key-up events on the view.\r\n            </summary>\r\n            <remarks>\r\n                Fires after a keyboard key is released.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyUp","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.KeyUpEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnViewInitialized","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnViewInitialized\">\r\n            <summary>\r\n                Event triggered when the JS view is created, but before the full map is rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnViewInitialized","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMapRendered","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnMapRendered\">\r\n            <summary>\r\n                Handler delegate for when the map view is fully rendered. Must return a <see cref=\"T:System.Threading.Tasks.Task\" />.\r\n            </summary>\r\n            <remarks>\r\n                OBSOLETE: The naming of this method was inconsistent with ArcGIS and the name of this class. It has been replaced by <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnViewRendered\" /> which also returns the Id of the view for handling multi-view scenarios.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnMapRendered","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnViewRendered","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Guid>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnViewRendered\">\r\n            <summary>\r\n                Handler delegate for when the map view is fully rendered. Must return a <see cref=\"T:System.Threading.Tasks.Task\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnViewRendered","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Guid>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSpatialReferenceChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnSpatialReferenceChanged\">\r\n            <summary>\r\n                Handler delegate for the view's Spatial Reference changing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnSpatialReferenceChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnExtentChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Components.Geometries.Extent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnExtentChanged\">\r\n            <summary>\r\n                Handler delegate for the view's Extent changing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnExtentChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Components.Geometries.Extent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnResize","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.ResizeEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnResize\">\r\n            <summary>\r\n                Handler delegate for the view's Extent changing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnResize","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.ResizeEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMouseWheel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.MouseWheelEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnMouseWheel\">\r\n            <summary>\r\n                Handler delegate for the view's Extent changing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnMouseWheel","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.MouseWheelEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnLayerViewCreate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.LayerViewCreateEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnLayerViewCreate\">\r\n            <summary>\r\n                Fires after each layer in the map has a corresponding LayerView created and rendered in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnLayerViewCreate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.LayerViewCreateEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnLayerViewDestroy","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.LayerViewDestroyEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnLayerViewDestroy\">\r\n            <summary>\r\n                Fires after a LayerView is destroyed and is no longer rendered in the view. This happens for example when a layer\r\n                is removed from the map of the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnLayerViewDestroy","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.LayerViewDestroyEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnLayerViewCreateError","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.LayerViewCreateErrorEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnLayerViewCreateError\">\r\n            <summary>\r\n                Fires after a LayerView is destroyed and is no longer rendered in the view. This happens for example when a layer\r\n                is removed from the map of the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnLayerViewCreateError","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.LayerViewCreateErrorEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"EventRateLimitInMilliseconds","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.EventRateLimitInMilliseconds\">\r\n            <summary>\r\n                Set this parameter to limit the rate at which recurring events are returned. Applies to <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnDrag\" />,\r\n                <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerMove\" />, <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnMouseWheel\" />, <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnResize\" />, and\r\n                <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnExtentChanged\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EventRateLimitInMilliseconds","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"GraphicSerializationChunkSize","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.GraphicSerializationChunkSize\">\r\n            <summary>\r\n               Optional setting to control the number of graphics that are serialized in a single chunk. Tuning this value might help with performance when adding large graphic sets.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GraphicSerializationChunkSize","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Views.SceneView","Common.TypeNameIdentifier":"SceneView","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Views","Runtime.Name":"Components.IComponent"}},{"HashCode":-1399533830,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Views.SceneView","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Views.SceneView\">\r\n            <summary>\r\n                A SceneView displays a 3D view of a Map or WebScene instance using WebGL. To render a map and its layers in 2D, see\r\n                the documentation for MapView. For a general overview of views, see View.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n            <example>\r\n                <a target=\"_blank\" href=\"https://samples.geoblazor.com/web-scene\">Sample - Web Scene</a>\r\n            </example>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Views.SceneView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ZIndex","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.SceneView.ZIndex\">\r\n            <summary>\r\n                The Z-Index (elevation) of the camera position over the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ZIndex","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Tilt","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.SceneView.Tilt\">\r\n            <summary>\r\n                The tilt of the camera in degrees with respect to the surface as projected down from the camera position.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Tilt","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Style\">\r\n            <summary>\r\n                Inline css styling attribute\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Style","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Class\">\r\n            <summary>\r\n                Inline html/css class selector for applying css\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Class","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Latitude","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Latitude\">\r\n            <summary>\r\n                The Latitude for the Center point of the view\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Latitude","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Longitude","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Longitude\">\r\n            <summary>\r\n                The Longitude for the Center point of the view\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Longitude","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Center","TypeName":"dymaptic.GeoBlazor.Core.Components.Geometries.Point","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Center\">\r\n            <summary>\r\n                The Center point of the view, equivalent to setting Latitude/Longitude\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Center","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Geometries.Point"}},{"Kind":"Components.Component","Name":"Zoom","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Zoom\">\r\n            <summary>\r\n                Represents the level of detail (LOD) at the center of the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Zoom","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Scale\">\r\n            <summary>\r\n                Represents the map scale at the center of the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Scale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.Rotation\">\r\n            <summary>\r\n                The clockwise rotation of due north in relation to the top of the view in degrees.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Rotation","Common.GloballyQualifiedTypeName":"global::System.Double"}},{"Kind":"Components.Component","Name":"AllowDefaultEsriLogin","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.AllowDefaultEsriLogin\">\r\n            <summary>\r\n                Allows maps to be rendered without an Api or OAuth Token, which will trigger a default esri login popup.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AllowDefaultEsriLogin","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"LoadOnRender","TypeName":"System.Boolean","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.LoadOnRender\">\r\n            <summary>\r\n                Boolean flag that can be set to false to prevent the MapView from automatically rendering with the Blazor\r\n                components.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LoadOnRender","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"PromptForArcGISKey","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.PromptForArcGISKey\">\r\n            <summary>\r\n                Provides an override for the default behavior of requiring an API key. By setting to \"false\", all calls to ArcGIS\r\n                services will trigger a sign-in popup.\r\n            </summary>\r\n            <remarks>\r\n                Setting this to \"false\" is the same as setting <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.AllowDefaultEsriLogin\" /> to \"true\". This is provided\r\n                simply for convenience of discovery.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"PromptForArcGISKey","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"PromptForOAuthLogin","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.PromptForOAuthLogin\">\r\n            <summary>\r\n                If you set an `AppId` in your configuration, setting this to true will cause the app to attempt to auto-login\r\n                using ArcGIS OAuth.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PromptForOAuthLogin","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"OnJavascriptErrorHandler","TypeName":"System.Func<dymaptic.GeoBlazor.Core.Exceptions.JavascriptException, System.Threading.Tasks.Task>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnJavascriptErrorHandler\">\r\n            <summary>\r\n                Implement this handler in your calling code to catch and handle Javascript errors.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::dymaptic.GeoBlazor.Core.Exceptions.JavascriptException, global::System.Threading.Tasks.Task>","Common.PropertyName":"OnJavascriptErrorHandler","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.ClickEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnClick\">\r\n            <summary>\r\n                Handler delegate for click events on the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.ClickEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDoubleClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.ClickEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnDoubleClick\">\r\n            <summary>\r\n                Handler delegate for double-click events on the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnDoubleClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.ClickEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnImmediateClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.ClickEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnImmediateClick\">\r\n            <summary>\r\n                Handler delegate for immediate-click events on the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnImmediateClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.ClickEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnImmediateDoubleClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.ClickEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnImmediateDoubleClick\">\r\n            <summary>\r\n                Handler delegate for immediate-double-click events on the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnImmediateDoubleClick","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.ClickEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnHold","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.ClickEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnHold\">\r\n            <summary>\r\n                Handler delegate for hold events on the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnHold","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.ClickEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnBlur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.BlurEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnBlur\">\r\n            <summary>\r\n                Handler delegate for blur (lost focus) events on the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnBlur","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.BlurEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnFocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.FocusEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnFocus\">\r\n            <summary>\r\n                Handler delegate for focus events on the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnFocus","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.FocusEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDrag","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.DragEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnDrag\">\r\n            <summary>\r\n                Handler delegate for pointer drag events on the view, returns a <see cref=\"T:dymaptic.GeoBlazor.Core.Events.DragEvent\" />.\r\n            </summary>\r\n            <remarks>\r\n                The real-time nature of this handler make it a challenge to use continuously over SignalR in Blazor Server.\r\n                In this scenario, you should write a custom JavaScript handler instead.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnDrag","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.DragEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPointerDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.PointerEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerDown\">\r\n            <summary>\r\n                Handler delegate for pointer down events on the view.\r\n            </summary>\r\n            <remarks>\r\n                Fires after a mouse button is pressed, or a finger touches the display.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnPointerDown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.PointerEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPointerEnter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.PointerEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerEnter\">\r\n            <summary>\r\n                Handler delegate for pointer enter events on the view.\r\n            </summary>\r\n            <remarks>\r\n                Fires after a mouse cursor enters the view, or a display touch begins.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnPointerEnter","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.PointerEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPointerLeave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.PointerEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerLeave\">\r\n            <summary>\r\n                Handler delegate for pointer leave events on the view. Must take in a <see cref=\"T:dymaptic.GeoBlazor.Core.Components.Geometries.Point\" /> and return a\r\n                <see cref=\"T:System.Threading.Tasks.Task\" />.\r\n            </summary>\r\n            <remarks>\r\n                Fires after a mouse cursor leaves the view, or a display touch ends.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnPointerLeave","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.PointerEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPointerMove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.PointerEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerMove\">\r\n            <summary>\r\n                Handler delegate for point move events on the view. Must take in a <see cref=\"T:dymaptic.GeoBlazor.Core.Components.Geometries.Point\" /> and return a\r\n                <see cref=\"T:System.Threading.Tasks.Task\" />.\r\n            </summary>\r\n            <remarks>\r\n                The real-time nature of this handler make it a challenge to use continuously over SignalR in Blazor Server.\r\n                In this scenario, you should write a custom JavaScript handler instead.\r\n                See\r\n                <a target=\"_blank\" href=\"https://github.com/dymaptic/GeoBlazor/blob/develop/samples/dymaptic.GeoBlazor.Core.Sample.Shared/Pages/DisplayProjection.razor\">\r\n                    Display\r\n                    Projection\r\n                </a>\r\n                code.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnPointerMove","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.PointerEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnPointerUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.PointerEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerUp\">\r\n            <summary>\r\n                Handler delegate for pointer up events on the view. Must take in a <see cref=\"T:dymaptic.GeoBlazor.Core.Components.Geometries.Point\" /> and return a\r\n                <see cref=\"T:System.Threading.Tasks.Task\" />.\r\n            </summary>\r\n            <remarks>\r\n                Fires after a mouse button is released, or a display touch ends.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnPointerUp","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.PointerEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnKeyDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.KeyDownEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnKeyDown\">\r\n            <summary>\r\n                Handler delegate for key-down events on the view.\r\n            </summary>\r\n            <remarks>\r\n                Fires after a keyboard key is pressed.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyDown","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.KeyDownEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnKeyUp","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.KeyUpEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnKeyUp\">\r\n            <summary>\r\n                Handler delegate for key-up events on the view.\r\n            </summary>\r\n            <remarks>\r\n                Fires after a keyboard key is released.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnKeyUp","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.KeyUpEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnViewInitialized","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnViewInitialized\">\r\n            <summary>\r\n                Event triggered when the JS view is created, but before the full map is rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnViewInitialized","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMapRendered","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnMapRendered\">\r\n            <summary>\r\n                Handler delegate for when the map view is fully rendered. Must return a <see cref=\"T:System.Threading.Tasks.Task\" />.\r\n            </summary>\r\n            <remarks>\r\n                OBSOLETE: The naming of this method was inconsistent with ArcGIS and the name of this class. It has been replaced by <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnViewRendered\" /> which also returns the Id of the view for handling multi-view scenarios.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"OnMapRendered","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnViewRendered","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Guid>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnViewRendered\">\r\n            <summary>\r\n                Handler delegate for when the map view is fully rendered. Must return a <see cref=\"T:System.Threading.Tasks.Task\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnViewRendered","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Guid>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSpatialReferenceChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnSpatialReferenceChanged\">\r\n            <summary>\r\n                Handler delegate for the view's Spatial Reference changing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnSpatialReferenceChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Components.Geometries.SpatialReference>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnExtentChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Components.Geometries.Extent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnExtentChanged\">\r\n            <summary>\r\n                Handler delegate for the view's Extent changing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnExtentChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Components.Geometries.Extent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnResize","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.ResizeEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnResize\">\r\n            <summary>\r\n                Handler delegate for the view's Extent changing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnResize","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.ResizeEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMouseWheel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.MouseWheelEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnMouseWheel\">\r\n            <summary>\r\n                Handler delegate for the view's Extent changing.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnMouseWheel","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.MouseWheelEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnLayerViewCreate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.LayerViewCreateEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnLayerViewCreate\">\r\n            <summary>\r\n                Fires after each layer in the map has a corresponding LayerView created and rendered in the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnLayerViewCreate","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.LayerViewCreateEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnLayerViewDestroy","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.LayerViewDestroyEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnLayerViewDestroy\">\r\n            <summary>\r\n                Fires after a LayerView is destroyed and is no longer rendered in the view. This happens for example when a layer\r\n                is removed from the map of the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnLayerViewDestroy","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.LayerViewDestroyEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnLayerViewCreateError","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.LayerViewCreateErrorEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnLayerViewCreateError\">\r\n            <summary>\r\n                Fires after a LayerView is destroyed and is no longer rendered in the view. This happens for example when a layer\r\n                is removed from the map of the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnLayerViewCreateError","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.LayerViewCreateErrorEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"EventRateLimitInMilliseconds","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.EventRateLimitInMilliseconds\">\r\n            <summary>\r\n                Set this parameter to limit the rate at which recurring events are returned. Applies to <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnDrag\" />,\r\n                <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnPointerMove\" />, <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnMouseWheel\" />, <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnResize\" />, and\r\n                <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.OnExtentChanged\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EventRateLimitInMilliseconds","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"GraphicSerializationChunkSize","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.MapView.GraphicSerializationChunkSize\">\r\n            <summary>\r\n               Optional setting to control the number of graphics that are serialized in a single chunk. Tuning this value might help with performance when adding large graphic sets.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"GraphicSerializationChunkSize","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Views.SceneView","Common.TypeNameIdentifier":"SceneView","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Views","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":852192513,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Views.SceneView.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SceneView"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Views.SceneView.ChildContent","Common.TypeNameIdentifier":"SceneView","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Views","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1276174490,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Views.SceneView.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Views.SceneView"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Views.SceneView.ChildContent","Common.TypeNameIdentifier":"SceneView","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Views","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-107425262,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Views.Viewpoint","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Views.Viewpoint\">\r\n            <summary>\r\n            Describes a point of view for a 2D or 3D view. In a 2D view, the viewpoint is determined using a center point and scale value.\r\n            In a 3D view, it is determined using a camera position.\r\n            The Viewpoint can be bookmarked for later use, or used for navigation purposes.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Viewpoint"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.Viewpoint.Rotation\">\r\n            <summary>\r\n            The rotation of due north in relation to the top of the view in degrees.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Rotation","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.Viewpoint.Scale\">\r\n            <summary>\r\n             The scale of the viewpoint.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Scale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Views.Viewpoint","Common.TypeNameIdentifier":"Viewpoint","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Views","Runtime.Name":"Components.IComponent"}},{"HashCode":1978572285,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Views.Viewpoint","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Views.Viewpoint\">\r\n            <summary>\r\n            Describes a point of view for a 2D or 3D view. In a 2D view, the viewpoint is determined using a center point and scale value.\r\n            In a 3D view, it is determined using a camera position.\r\n            The Viewpoint can be bookmarked for later use, or used for navigation purposes.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Views.Viewpoint"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.Viewpoint.Rotation\">\r\n            <summary>\r\n            The rotation of due north in relation to the top of the view in degrees.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Rotation","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Views.Viewpoint.Scale\">\r\n            <summary>\r\n             The scale of the viewpoint.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Scale","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Views.Viewpoint","Common.TypeNameIdentifier":"Viewpoint","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Views","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":995166972,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Views.Viewpoint.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Viewpoint"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Views.Viewpoint.ChildContent","Common.TypeNameIdentifier":"Viewpoint","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Views","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1316464231,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Views.Viewpoint.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Views.Viewpoint"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Views.Viewpoint.ChildContent","Common.TypeNameIdentifier":"Viewpoint","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Views","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":201477613,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.BasemapGalleryWidget","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.BasemapGalleryWidget\">\r\n            <summary>\r\n                The BasemapGallery widget displays a collection images representing basemaps from ArcGIS.com or a user-defined set\r\n                of map or image services. When a new basemap is selected from the BasemapGallery, the map's basemap layers are\r\n                removed and replaced with the basemap layers of the associated basemap selected in the gallery.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-BasemapGallery.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BasemapGalleryWidget"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BasemapGalleryWidget.Title\">\r\n            <summary>\r\n                The title to query against the source.\r\n            </summary>\r\n            <remarks>\r\n                Use either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BasemapGalleryWidget.Title\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BasemapGalleryWidget.PortalBasemapsSource\" /> to define the query.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.OverlayPosition?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\">\r\n            <summary>\r\n                The position of the widget in relation to the map view.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.OverlayPosition?"}},{"Kind":"Components.Component","Name":"ContainerId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\">\r\n            <summary>\r\n                The id of an external HTML Element (div). If provided, the widget will be placed inside that element, instead of on\r\n                the map.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ContainerId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Icon\">\r\n            <summary>\r\n                Icon which represents the widget. It is typically used when the widget is controlled by another one (e.g. in the Expand widget).\r\n                Default Value:null\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WidgetId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetId\">\r\n            <summary>\r\n                The unique ID assigned to the widget when the widget is created. If not set by the developer, it will default to the container ID, or if that is not present then it will be automatically generated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"WidgetId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.BasemapGalleryWidget","Common.TypeNameIdentifier":"BasemapGalleryWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":1125050606,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.BasemapGalleryWidget","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.BasemapGalleryWidget\">\r\n            <summary>\r\n                The BasemapGallery widget displays a collection images representing basemaps from ArcGIS.com or a user-defined set\r\n                of map or image services. When a new basemap is selected from the BasemapGallery, the map's basemap layers are\r\n                removed and replaced with the basemap layers of the associated basemap selected in the gallery.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-BasemapGallery.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.BasemapGalleryWidget"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BasemapGalleryWidget.Title\">\r\n            <summary>\r\n                The title to query against the source.\r\n            </summary>\r\n            <remarks>\r\n                Use either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BasemapGalleryWidget.Title\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BasemapGalleryWidget.PortalBasemapsSource\" /> to define the query.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.OverlayPosition?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\">\r\n            <summary>\r\n                The position of the widget in relation to the map view.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.OverlayPosition?"}},{"Kind":"Components.Component","Name":"ContainerId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\">\r\n            <summary>\r\n                The id of an external HTML Element (div). If provided, the widget will be placed inside that element, instead of on\r\n                the map.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ContainerId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Icon\">\r\n            <summary>\r\n                Icon which represents the widget. It is typically used when the widget is controlled by another one (e.g. in the Expand widget).\r\n                Default Value:null\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WidgetId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetId\">\r\n            <summary>\r\n                The unique ID assigned to the widget when the widget is created. If not set by the developer, it will default to the container ID, or if that is not present then it will be automatically generated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"WidgetId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.BasemapGalleryWidget","Common.TypeNameIdentifier":"BasemapGalleryWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-92739098,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.BasemapGalleryWidget.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BasemapGalleryWidget"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.BasemapGalleryWidget.ChildContent","Common.TypeNameIdentifier":"BasemapGalleryWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1286694135,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.BasemapGalleryWidget.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.BasemapGalleryWidget"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.BasemapGalleryWidget.ChildContent","Common.TypeNameIdentifier":"BasemapGalleryWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1140800846,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget\">\r\n            <summary>\r\n                The Basemap ListItem class represents two of the operational Items in the LayerList ViewModel. In the Basemap\r\n                LayerList widget UI, the list items represent any base or reference layers displayed in the view. To display the\r\n                ListItems as separate types, a developer will need to specify a base or reference. It provides access to the\r\n                associated layer's properties, allows the developer to configure actions related to the layer, and allows the\r\n                developer to add content to the item related to the layer.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-BasemapLayerList.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BasemapLayerListWidget"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IconClass","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.IconClass\">\r\n            <summary>\r\n                The widget's default CSS icon class.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.Label\">\r\n            <summary>\r\n                The widget's default label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnBaseListItemCreatedHandler","TypeName":"System.Func<dymaptic.GeoBlazor.Core.Components.Widgets.LayerList.ListItem, System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Widgets.LayerList.ListItem>>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.OnBaseListItemCreatedHandler\">\r\n            <summary>\r\n                A delegate to implement a custom handler for setting up a base type of<see cref=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.LayerList.ListItem\" />.\r\n                Function must take in a ListItem and return a Task with the designated base type of item.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::dymaptic.GeoBlazor.Core.Components.Widgets.LayerList.ListItem, global::System.Threading.Tasks.Task<global::dymaptic.GeoBlazor.Core.Components.Widgets.LayerList.ListItem>>","Common.PropertyName":"OnBaseListItemCreatedHandler","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"OnReferenceListItemCreatedHandler","TypeName":"System.Func<dymaptic.GeoBlazor.Core.Components.Widgets.LayerList.ListItem, System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Widgets.LayerList.ListItem>>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.OnReferenceListItemCreatedHandler\">\r\n            <summary>\r\n                A delegate to implement a custom handler for setting up a reference type of<see cref=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.LayerList.ListItem\" />.\r\n                Function must take in a ListItem and return a Task with the designated reference type of item.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::dymaptic.GeoBlazor.Core.Components.Widgets.LayerList.ListItem, global::System.Threading.Tasks.Task<global::dymaptic.GeoBlazor.Core.Components.Widgets.LayerList.ListItem>>","Common.PropertyName":"OnReferenceListItemCreatedHandler","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.OverlayPosition?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\">\r\n            <summary>\r\n                The position of the widget in relation to the map view.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.OverlayPosition?"}},{"Kind":"Components.Component","Name":"ContainerId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\">\r\n            <summary>\r\n                The id of an external HTML Element (div). If provided, the widget will be placed inside that element, instead of on\r\n                the map.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ContainerId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Icon\">\r\n            <summary>\r\n                Icon which represents the widget. It is typically used when the widget is controlled by another one (e.g. in the Expand widget).\r\n                Default Value:null\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WidgetId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetId\">\r\n            <summary>\r\n                The unique ID assigned to the widget when the widget is created. If not set by the developer, it will default to the container ID, or if that is not present then it will be automatically generated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"WidgetId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget","Common.TypeNameIdentifier":"BasemapLayerListWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":-500552051,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget\">\r\n            <summary>\r\n                The Basemap ListItem class represents two of the operational Items in the LayerList ViewModel. In the Basemap\r\n                LayerList widget UI, the list items represent any base or reference layers displayed in the view. To display the\r\n                ListItems as separate types, a developer will need to specify a base or reference. It provides access to the\r\n                associated layer's properties, allows the developer to configure actions related to the layer, and allows the\r\n                developer to add content to the item related to the layer.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-BasemapLayerList.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IconClass","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.IconClass\">\r\n            <summary>\r\n                The widget's default CSS icon class.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.Label\">\r\n            <summary>\r\n                The widget's default label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnBaseListItemCreatedHandler","TypeName":"System.Func<dymaptic.GeoBlazor.Core.Components.Widgets.LayerList.ListItem, System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Widgets.LayerList.ListItem>>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.OnBaseListItemCreatedHandler\">\r\n            <summary>\r\n                A delegate to implement a custom handler for setting up a base type of<see cref=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.LayerList.ListItem\" />.\r\n                Function must take in a ListItem and return a Task with the designated base type of item.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::dymaptic.GeoBlazor.Core.Components.Widgets.LayerList.ListItem, global::System.Threading.Tasks.Task<global::dymaptic.GeoBlazor.Core.Components.Widgets.LayerList.ListItem>>","Common.PropertyName":"OnBaseListItemCreatedHandler","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"OnReferenceListItemCreatedHandler","TypeName":"System.Func<dymaptic.GeoBlazor.Core.Components.Widgets.LayerList.ListItem, System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Widgets.LayerList.ListItem>>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.OnReferenceListItemCreatedHandler\">\r\n            <summary>\r\n                A delegate to implement a custom handler for setting up a reference type of<see cref=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.LayerList.ListItem\" />.\r\n                Function must take in a ListItem and return a Task with the designated reference type of item.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::dymaptic.GeoBlazor.Core.Components.Widgets.LayerList.ListItem, global::System.Threading.Tasks.Task<global::dymaptic.GeoBlazor.Core.Components.Widgets.LayerList.ListItem>>","Common.PropertyName":"OnReferenceListItemCreatedHandler","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.OverlayPosition?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\">\r\n            <summary>\r\n                The position of the widget in relation to the map view.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.OverlayPosition?"}},{"Kind":"Components.Component","Name":"ContainerId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\">\r\n            <summary>\r\n                The id of an external HTML Element (div). If provided, the widget will be placed inside that element, instead of on\r\n                the map.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ContainerId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Icon\">\r\n            <summary>\r\n                Icon which represents the widget. It is typically used when the widget is controlled by another one (e.g. in the Expand widget).\r\n                Default Value:null\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WidgetId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetId\">\r\n            <summary>\r\n                The unique ID assigned to the widget when the widget is created. If not set by the developer, it will default to the container ID, or if that is not present then it will be automatically generated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"WidgetId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget","Common.TypeNameIdentifier":"BasemapLayerListWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":142500601,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BasemapLayerListWidget"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.ChildContent","Common.TypeNameIdentifier":"BasemapLayerListWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1775659280,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.BasemapLayerListWidget.ChildContent","Common.TypeNameIdentifier":"BasemapLayerListWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-2018671926,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.BasemapToggleWidget","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.BasemapToggleWidget\">\r\n            <summary>\r\n                The BasemapToggle provides a widget which allows an end-user to switch between two basemaps. The toggled basemap is\r\n                set inside the view's map object.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-BasemapToggle.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BasemapToggleWidget"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"NextBasemapName","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BasemapToggleWidget.NextBasemapName\">\r\n            <summary>\r\n                The name of the next basemap for toggling.\r\n            </summary>\r\n            <remarks>\r\n                Set either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BasemapToggleWidget.NextBasemapName\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BasemapToggleWidget.NextBasemap\" />\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"NextBasemapName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.OverlayPosition?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\">\r\n            <summary>\r\n                The position of the widget in relation to the map view.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.OverlayPosition?"}},{"Kind":"Components.Component","Name":"ContainerId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\">\r\n            <summary>\r\n                The id of an external HTML Element (div). If provided, the widget will be placed inside that element, instead of on\r\n                the map.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ContainerId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Icon\">\r\n            <summary>\r\n                Icon which represents the widget. It is typically used when the widget is controlled by another one (e.g. in the Expand widget).\r\n                Default Value:null\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WidgetId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetId\">\r\n            <summary>\r\n                The unique ID assigned to the widget when the widget is created. If not set by the developer, it will default to the container ID, or if that is not present then it will be automatically generated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"WidgetId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.BasemapToggleWidget","Common.TypeNameIdentifier":"BasemapToggleWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":238741688,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.BasemapToggleWidget","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.BasemapToggleWidget\">\r\n            <summary>\r\n                The BasemapToggle provides a widget which allows an end-user to switch between two basemaps. The toggled basemap is\r\n                set inside the view's map object.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-BasemapToggle.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.BasemapToggleWidget"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"NextBasemapName","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BasemapToggleWidget.NextBasemapName\">\r\n            <summary>\r\n                The name of the next basemap for toggling.\r\n            </summary>\r\n            <remarks>\r\n                Set either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BasemapToggleWidget.NextBasemapName\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BasemapToggleWidget.NextBasemap\" />\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"NextBasemapName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.OverlayPosition?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\">\r\n            <summary>\r\n                The position of the widget in relation to the map view.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.OverlayPosition?"}},{"Kind":"Components.Component","Name":"ContainerId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\">\r\n            <summary>\r\n                The id of an external HTML Element (div). If provided, the widget will be placed inside that element, instead of on\r\n                the map.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ContainerId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Icon\">\r\n            <summary>\r\n                Icon which represents the widget. It is typically used when the widget is controlled by another one (e.g. in the Expand widget).\r\n                Default Value:null\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WidgetId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetId\">\r\n            <summary>\r\n                The unique ID assigned to the widget when the widget is created. If not set by the developer, it will default to the container ID, or if that is not present then it will be automatically generated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"WidgetId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.BasemapToggleWidget","Common.TypeNameIdentifier":"BasemapToggleWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1229381756,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.BasemapToggleWidget.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BasemapToggleWidget"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.BasemapToggleWidget.ChildContent","Common.TypeNameIdentifier":"BasemapToggleWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-810585071,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.BasemapToggleWidget.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.BasemapToggleWidget"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.BasemapToggleWidget.ChildContent","Common.TypeNameIdentifier":"BasemapToggleWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-937638110,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark\">\r\n            <summary>\r\n            A bookmark is a saved map extent that allows end users to quickly navigate\r\n            to a particular area of interest using the Bookmarks widget.\r\n            They are usually defined part of the WebMap.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Bookmark"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TimeExtent","TypeName":"dymaptic.GeoBlazor.Core.Objects.TimeExtent","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark.TimeExtent\">\r\n            <summary>\r\n            The extent of the specified bookmark.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TimeExtent","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.TimeExtent"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark.Name\">\r\n            <summary>\r\n            The name of the bookmark.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Thumbnail","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark.Thumbnail\">\r\n            <summary>\r\n            The URL for a thumbnail image.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Thumbnail","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark","Common.TypeNameIdentifier":"Bookmark","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":1627657357,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark\">\r\n            <summary>\r\n            A bookmark is a saved map extent that allows end users to quickly navigate\r\n            to a particular area of interest using the Bookmarks widget.\r\n            They are usually defined part of the WebMap.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TimeExtent","TypeName":"dymaptic.GeoBlazor.Core.Objects.TimeExtent","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark.TimeExtent\">\r\n            <summary>\r\n            The extent of the specified bookmark.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"TimeExtent","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.TimeExtent"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark.Name\">\r\n            <summary>\r\n            The name of the bookmark.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Thumbnail","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark.Thumbnail\">\r\n            <summary>\r\n            The URL for a thumbnail image.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Thumbnail","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark","Common.TypeNameIdentifier":"Bookmark","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":2105382130,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Bookmark"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark.ChildContent","Common.TypeNameIdentifier":"Bookmark","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-251337823,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.Bookmark.ChildContent","Common.TypeNameIdentifier":"Bookmark","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1522161438,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget\">\r\n            <summary>\r\n                The Bookmarks widget allows end users to quickly navigate to a particular area of interest. It displays a list of bookmarks, which are typically defined inside the WebMap.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Bookmarks.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BookmarksWidget"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget.Disabled\">\r\n            <summary>\r\n                When true, the widget is visually withdrawn and cannot be interacted with.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"EditingEnabled","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget.EditingEnabled\">\r\n            <summary>\r\n               Indicates whether the bookmarks are able to be edited.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EditingEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"HeadingLevel","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget.HeadingLevel\">\r\n            <summary>\r\n            Indicates the heading level to use for the message \"No bookmarks\" when no bookmarks are available in this widget.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HeadingLevel","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"OnBookmarkSelect","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.BookmarkSelectEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget.OnBookmarkSelect\">\r\n            <summary>\r\n                Handler delegate for click events on the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnBookmarkSelect","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.BookmarkSelectEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.OverlayPosition?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\">\r\n            <summary>\r\n                The position of the widget in relation to the map view.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.OverlayPosition?"}},{"Kind":"Components.Component","Name":"ContainerId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\">\r\n            <summary>\r\n                The id of an external HTML Element (div). If provided, the widget will be placed inside that element, instead of on\r\n                the map.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ContainerId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Icon\">\r\n            <summary>\r\n                Icon which represents the widget. It is typically used when the widget is controlled by another one (e.g. in the Expand widget).\r\n                Default Value:null\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WidgetId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetId\">\r\n            <summary>\r\n                The unique ID assigned to the widget when the widget is created. If not set by the developer, it will default to the container ID, or if that is not present then it will be automatically generated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"WidgetId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget","Common.TypeNameIdentifier":"BookmarksWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":-1266045334,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget\">\r\n            <summary>\r\n                The Bookmarks widget allows end users to quickly navigate to a particular area of interest. It displays a list of bookmarks, which are typically defined inside the WebMap.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Bookmarks.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget.Disabled\">\r\n            <summary>\r\n                When true, the widget is visually withdrawn and cannot be interacted with.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Disabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"EditingEnabled","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget.EditingEnabled\">\r\n            <summary>\r\n               Indicates whether the bookmarks are able to be edited.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EditingEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"HeadingLevel","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget.HeadingLevel\">\r\n            <summary>\r\n            Indicates the heading level to use for the message \"No bookmarks\" when no bookmarks are available in this widget.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HeadingLevel","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"OnBookmarkSelect","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Events.BookmarkSelectEvent>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget.OnBookmarkSelect\">\r\n            <summary>\r\n                Handler delegate for click events on the view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnBookmarkSelect","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Events.BookmarkSelectEvent>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.OverlayPosition?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\">\r\n            <summary>\r\n                The position of the widget in relation to the map view.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.OverlayPosition?"}},{"Kind":"Components.Component","Name":"ContainerId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\">\r\n            <summary>\r\n                The id of an external HTML Element (div). If provided, the widget will be placed inside that element, instead of on\r\n                the map.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ContainerId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Icon\">\r\n            <summary>\r\n                Icon which represents the widget. It is typically used when the widget is controlled by another one (e.g. in the Expand widget).\r\n                Default Value:null\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WidgetId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetId\">\r\n            <summary>\r\n                The unique ID assigned to the widget when the widget is created. If not set by the developer, it will default to the container ID, or if that is not present then it will be automatically generated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"WidgetId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget","Common.TypeNameIdentifier":"BookmarksWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-2087185819,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BookmarksWidget"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget.ChildContent","Common.TypeNameIdentifier":"BookmarksWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1317222332,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.BookmarksWidget.ChildContent","Common.TypeNameIdentifier":"BookmarksWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-788538688,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.CompassWidget","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.CompassWidget\">\r\n            <summary>\r\n                The Compass widget indicates where north is in relation to the current view rotation or camera heading. Clicking\r\n                the Compass widget rotates the view to face north (heading = 0). This widget is added to a SceneView by default.\r\n                The icon for the Compass widget is determined based upon the view's spatial reference. If the view's spatial\r\n                reference is not Web Mercator or WGS84 a dial icon will be used, however when the spatial reference is Web Mercator\r\n                or WGS84 the icon will be a north arrow.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Compass.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CompassWidget"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IconClass","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.CompassWidget.IconClass\">\r\n            <summary>\r\n                The widget's default CSS icon class.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.CompassWidget.Label\">\r\n            <summary>\r\n                The widget's default label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.OverlayPosition?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\">\r\n            <summary>\r\n                The position of the widget in relation to the map view.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.OverlayPosition?"}},{"Kind":"Components.Component","Name":"ContainerId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\">\r\n            <summary>\r\n                The id of an external HTML Element (div). If provided, the widget will be placed inside that element, instead of on\r\n                the map.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ContainerId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Icon\">\r\n            <summary>\r\n                Icon which represents the widget. It is typically used when the widget is controlled by another one (e.g. in the Expand widget).\r\n                Default Value:null\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WidgetId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetId\">\r\n            <summary>\r\n                The unique ID assigned to the widget when the widget is created. If not set by the developer, it will default to the container ID, or if that is not present then it will be automatically generated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"WidgetId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.CompassWidget","Common.TypeNameIdentifier":"CompassWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":592460247,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.CompassWidget","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.CompassWidget\">\r\n            <summary>\r\n                The Compass widget indicates where north is in relation to the current view rotation or camera heading. Clicking\r\n                the Compass widget rotates the view to face north (heading = 0). This widget is added to a SceneView by default.\r\n                The icon for the Compass widget is determined based upon the view's spatial reference. If the view's spatial\r\n                reference is not Web Mercator or WGS84 a dial icon will be used, however when the spatial reference is Web Mercator\r\n                or WGS84 the icon will be a north arrow.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Compass.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.CompassWidget"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IconClass","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.CompassWidget.IconClass\">\r\n            <summary>\r\n                The widget's default CSS icon class.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.CompassWidget.Label\">\r\n            <summary>\r\n                The widget's default label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.OverlayPosition?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\">\r\n            <summary>\r\n                The position of the widget in relation to the map view.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.OverlayPosition?"}},{"Kind":"Components.Component","Name":"ContainerId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\">\r\n            <summary>\r\n                The id of an external HTML Element (div). If provided, the widget will be placed inside that element, instead of on\r\n                the map.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ContainerId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Icon\">\r\n            <summary>\r\n                Icon which represents the widget. It is typically used when the widget is controlled by another one (e.g. in the Expand widget).\r\n                Default Value:null\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WidgetId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetId\">\r\n            <summary>\r\n                The unique ID assigned to the widget when the widget is created. If not set by the developer, it will default to the container ID, or if that is not present then it will be automatically generated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"WidgetId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.CompassWidget","Common.TypeNameIdentifier":"CompassWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1159889719,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.CompassWidget.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CompassWidget"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.CompassWidget.ChildContent","Common.TypeNameIdentifier":"CompassWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":871741374,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.CompassWidget.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.CompassWidget"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.CompassWidget.ChildContent","Common.TypeNameIdentifier":"CompassWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":434105595,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.CodedValueDomain","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.CodedValueDomain\">\r\n            <summary>\r\n                Information about the coded values belonging to the domain. Coded value domains specify a valid set of values for a field. Each valid value is assigned a unique name. For example, in a layer for water mains, water main features may be buried under different types of surfaces as signified by a GroundSurfaceType field: pavement, gravel, sand, or none (for exposed water mains). The coded value domain includes both the actual value that is stored in the database (for example, 1 for pavement) and a more user-friendly description of what that value actually means.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-support-CodedValueDomain.html\">ArcGIS JS API</a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CodedValueDomain"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Domain.Name\">\r\n            <summary>\r\n                The domain name.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.CodedValueDomain","Common.TypeNameIdentifier":"CodedValueDomain","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":-2103340964,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.CodedValueDomain","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.CodedValueDomain\">\r\n            <summary>\r\n                Information about the coded values belonging to the domain. Coded value domains specify a valid set of values for a field. Each valid value is assigned a unique name. For example, in a layer for water mains, water main features may be buried under different types of surfaces as signified by a GroundSurfaceType field: pavement, gravel, sand, or none (for exposed water mains). The coded value domain includes both the actual value that is stored in the database (for example, 1 for pavement) and a more user-friendly description of what that value actually means.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-support-CodedValueDomain.html\">ArcGIS JS API</a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.CodedValueDomain"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Domain.Name\">\r\n            <summary>\r\n                The domain name.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.CodedValueDomain","Common.TypeNameIdentifier":"CodedValueDomain","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1807219258,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.CodedValueDomain.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CodedValueDomain"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.CodedValueDomain.ChildContent","Common.TypeNameIdentifier":"CodedValueDomain","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1014157496,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.CodedValueDomain.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.CodedValueDomain"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.CodedValueDomain.ChildContent","Common.TypeNameIdentifier":"CodedValueDomain","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1886253623,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.CodedValue","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.CodedValue\">\r\n            <summary>\r\n                The coded value in a domain.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-support-CodedValueDomain.html#CodedValue\">ArcGIS JS API</a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CodedValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.CodedValue.Name\">\r\n            <summary>\r\n                The name of the coded value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Code","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.CodedValue.Code\">\r\n            <summary>\r\n                The value of the code.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Code","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.CodedValue","Common.TypeNameIdentifier":"CodedValue","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":1845184508,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.CodedValue","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.CodedValue\">\r\n            <summary>\r\n                The coded value in a domain.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-support-CodedValueDomain.html#CodedValue\">ArcGIS JS API</a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.CodedValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.CodedValue.Name\">\r\n            <summary>\r\n                The name of the coded value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Code","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.CodedValue.Code\">\r\n            <summary>\r\n                The value of the code.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Code","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.CodedValue","Common.TypeNameIdentifier":"CodedValue","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1125249738,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.CodedValue.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CodedValue"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.CodedValue.ChildContent","Common.TypeNameIdentifier":"CodedValue","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":995011634,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.CodedValue.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.CodedValue"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.CodedValue.ChildContent","Common.TypeNameIdentifier":"CodedValue","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1848884588,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.RangeDomain","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.RangeDomain\">\r\n            <summary>\r\n                Range domains specify a valid minimum and maximum valid value that can be stored in numeric and date fields.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-support-RangeDomain.html\">ArcGIS JS API</a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"RangeDomain"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"MaxValue","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.RangeDomain.MaxValue\">\r\n            <summary>\r\n                The maximum valid value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxValue","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"MinValue","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.RangeDomain.MinValue\">\r\n            <summary>\r\n                The minimum valid value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinValue","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Domain.Name\">\r\n            <summary>\r\n                The domain name.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.RangeDomain","Common.TypeNameIdentifier":"RangeDomain","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":417238138,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.RangeDomain","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.RangeDomain\">\r\n            <summary>\r\n                Range domains specify a valid minimum and maximum valid value that can be stored in numeric and date fields.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-support-RangeDomain.html\">ArcGIS JS API</a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.RangeDomain"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"MaxValue","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.RangeDomain.MaxValue\">\r\n            <summary>\r\n                The maximum valid value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxValue","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"MinValue","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.RangeDomain.MinValue\">\r\n            <summary>\r\n                The minimum valid value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinValue","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Domain.Name\">\r\n            <summary>\r\n                The domain name.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.RangeDomain","Common.TypeNameIdentifier":"RangeDomain","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-859328194,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.RangeDomain.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"RangeDomain"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.RangeDomain.ChildContent","Common.TypeNameIdentifier":"RangeDomain","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1089373451,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.RangeDomain.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.RangeDomain"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.RangeDomain.ChildContent","Common.TypeNameIdentifier":"RangeDomain","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1334786878,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget\">\r\n            <summary>\r\n                The Expand widget acts as a clickable button for opening a widget.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Expand.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandWidget"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ExpandIconClass","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.ExpandIconClass\">\r\n            <summary>\r\n                Icon font used to style the Expand button when expanded.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandIconClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CollapseIconClass","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.CollapseIconClass\">\r\n            <summary>\r\n                Icon font used to style the Expand button when collapsed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CollapseIconClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ExpandTooltip","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.ExpandTooltip\">\r\n            <summary>\r\n                Tooltip to display to indicate Expand widget can be expanded\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandTooltip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CollapseTooltip","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.CollapseTooltip\">\r\n            <summary>\r\n                Tooltip to display to indicate Expand widget can be collapsed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CollapseTooltip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AutoCollapse","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.AutoCollapse\">\r\n            <summary>\r\n                Automatically collapses the expand widget instance when the view's viewpoint updates.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoCollapse","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CloseOnEsc","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.CloseOnEsc\">\r\n            <summary>\r\n                When true, the Expand widget will close after the Escape key is pressed when the keyboard focus is within its\r\n                content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CloseOnEsc","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"HtmlContent","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.HtmlContent\">\r\n            <summary>\r\n                The custom HTML content to display within the expanded Expand widget.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HtmlContent","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Expanded","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.Expanded\">\r\n            <summary>\r\n                Indicates whether the widget is currently expanded or not.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Expanded","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ExpandIcon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.ExpandIcon\">\r\n            <summary>\r\n               Calcite icon used when the widget is collapsed. Will automatically use the content's icon if it has one.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CollapseIcon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.CollapseIcon\">\r\n            <summary>\r\n               Calcite icon used to style the Expand button when the content can be collapsed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CollapseIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Mode","TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.Mode","IsEnum":true,"Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.Mode\">\r\n            <summary>\r\n              The mode in which the widget displays.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Mode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Widgets.Mode"}},{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.OverlayPosition?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\">\r\n            <summary>\r\n                The position of the widget in relation to the map view.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.OverlayPosition?"}},{"Kind":"Components.Component","Name":"ContainerId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\">\r\n            <summary>\r\n                The id of an external HTML Element (div). If provided, the widget will be placed inside that element, instead of on\r\n                the map.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ContainerId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Icon\">\r\n            <summary>\r\n                Icon which represents the widget. It is typically used when the widget is controlled by another one (e.g. in the Expand widget).\r\n                Default Value:null\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WidgetId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetId\">\r\n            <summary>\r\n                The unique ID assigned to the widget when the widget is created. If not set by the developer, it will default to the container ID, or if that is not present then it will be automatically generated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"WidgetId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget","Common.TypeNameIdentifier":"ExpandWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":-1489396032,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget\">\r\n            <summary>\r\n                The Expand widget acts as a clickable button for opening a widget.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Expand.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ExpandIconClass","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.ExpandIconClass\">\r\n            <summary>\r\n                Icon font used to style the Expand button when expanded.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandIconClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CollapseIconClass","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.CollapseIconClass\">\r\n            <summary>\r\n                Icon font used to style the Expand button when collapsed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CollapseIconClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ExpandTooltip","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.ExpandTooltip\">\r\n            <summary>\r\n                Tooltip to display to indicate Expand widget can be expanded\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandTooltip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CollapseTooltip","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.CollapseTooltip\">\r\n            <summary>\r\n                Tooltip to display to indicate Expand widget can be collapsed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CollapseTooltip","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AutoCollapse","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.AutoCollapse\">\r\n            <summary>\r\n                Automatically collapses the expand widget instance when the view's viewpoint updates.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoCollapse","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CloseOnEsc","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.CloseOnEsc\">\r\n            <summary>\r\n                When true, the Expand widget will close after the Escape key is pressed when the keyboard focus is within its\r\n                content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CloseOnEsc","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"HtmlContent","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.HtmlContent\">\r\n            <summary>\r\n                The custom HTML content to display within the expanded Expand widget.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HtmlContent","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Expanded","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.Expanded\">\r\n            <summary>\r\n                Indicates whether the widget is currently expanded or not.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Expanded","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ExpandIcon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.ExpandIcon\">\r\n            <summary>\r\n               Calcite icon used when the widget is collapsed. Will automatically use the content's icon if it has one.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpandIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"CollapseIcon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.CollapseIcon\">\r\n            <summary>\r\n               Calcite icon used to style the Expand button when the content can be collapsed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CollapseIcon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Mode","TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.Mode","IsEnum":true,"Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.Mode\">\r\n            <summary>\r\n              The mode in which the widget displays.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Mode","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Widgets.Mode"}},{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.OverlayPosition?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\">\r\n            <summary>\r\n                The position of the widget in relation to the map view.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.OverlayPosition?"}},{"Kind":"Components.Component","Name":"ContainerId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\">\r\n            <summary>\r\n                The id of an external HTML Element (div). If provided, the widget will be placed inside that element, instead of on\r\n                the map.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ContainerId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Icon\">\r\n            <summary>\r\n                Icon which represents the widget. It is typically used when the widget is controlled by another one (e.g. in the Expand widget).\r\n                Default Value:null\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WidgetId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetId\">\r\n            <summary>\r\n                The unique ID assigned to the widget when the widget is created. If not set by the developer, it will default to the container ID, or if that is not present then it will be automatically generated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"WidgetId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget","Common.TypeNameIdentifier":"ExpandWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1534196225,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ExpandWidget"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.ChildContent","Common.TypeNameIdentifier":"ExpandWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1206952104,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.ExpandWidget.ChildContent","Common.TypeNameIdentifier":"ExpandWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-611500013,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement\">\r\n            <summary>\r\n                A FieldElement form element defines how a feature layer's field participates in the FeatureForm. This is the recommended approach to set field configurations within a feature form's or feature layer's formTemplate.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-form-elements-FieldElement.html\">ArcGIS JS API</a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FieldElement"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"EditableExpression","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement.EditableExpression\">\r\n            <summary>\r\n                 A reference to the name of an Arcade expression defined in the expressionInfos of the FormTemplate. The expression must follow the specification defined in the Form Constraint Profile. Expressions may reference field values using the $feature global input and must return either true or false.\r\n            </summary>\r\n            <remarks>\r\n                A reference to the name of an Arcade expression defined in the expressionInfos of the FormTemplate. The expression must follow the specification defined in the Form Constraint Profile. Expressions may reference field values using the $feature global input and must return either true or false.\r\n                The referenced expression must be defined in the form template's expressionInfos. It cannot be set inline within the element object.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"EditableExpression","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"RequiredExpression","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement.RequiredExpression\">\r\n            <summary>\r\n                A reference to the name of an Arcade expression defined in the expressionInfos of the FormTemplate. The expression must follow the specification defined in the Form Constraint Profile. Expressions may reference field values using the $feature global input and must return either true or false.\r\n                When this expression evaluates to true and the field value is required, the element must have a valid value in order for the feature to be created or edited. When the expression evaluates to false, the element is not required. If no expression is provided, the required behavior is defined via the required property.\r\n                If the referenced field is non-nullable, the requiredExpression is ignored and the element is always required.\r\n            </summary>\r\n            <remarks>\r\n                The referenced expression must be defined in the form template's expressionInfos. It cannot be set inline within the element object.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredExpression","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FieldName","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement.FieldName\">\r\n            <summary>\r\n                The field name as defined by the feature layer. Set this property to indicate which field to edit.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FieldName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement.Hint\">\r\n            <summary>\r\n                Contains a hint used to help editors while editing fields. Set this as a temporary placeholder for text/number inputs in either TextAreaInput or TextBoxInput.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.FormElement.Description\">\r\n            <summary>\r\n                The element's description providing the purpose behind it.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Description","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.FormElement.Label\">\r\n            <summary>\r\n                A string value containing the field alias. This is not to Arcade expressions as the title is used instead.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"VisibilityExpression","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.FormElement.VisibilityExpression\">\r\n            <summary>\r\n                A reference to the name of an Arcade expression defined in the expressionInfos of the FormTemplate. The expression must follow the specification defined by the Form Constraint Profile. Expressions may reference field values using the $feature profile variable and must return either true or false.\r\n            </summary>\r\n            <remarks>\r\n                When this expression evaluates to true, the element is displayed. When the expression evaluates to false the element is not displayed. If no expression is provided, the element is always displayed. Care must be taken when defining a visibility expression for a non-nullable field i.e. to make sure that such fields either have default values or are made visible to users so that they can provide a value before submitting the form.\r\n                The referenced expression must be defined in the form template's expressionInfos. It cannot be set inline within the element object.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"VisibilityExpression","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement","Common.TypeNameIdentifier":"FieldElement","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":1710806275,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement\">\r\n            <summary>\r\n                A FieldElement form element defines how a feature layer's field participates in the FeatureForm. This is the recommended approach to set field configurations within a feature form's or feature layer's formTemplate.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-form-elements-FieldElement.html\">ArcGIS JS API</a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"EditableExpression","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement.EditableExpression\">\r\n            <summary>\r\n                 A reference to the name of an Arcade expression defined in the expressionInfos of the FormTemplate. The expression must follow the specification defined in the Form Constraint Profile. Expressions may reference field values using the $feature global input and must return either true or false.\r\n            </summary>\r\n            <remarks>\r\n                A reference to the name of an Arcade expression defined in the expressionInfos of the FormTemplate. The expression must follow the specification defined in the Form Constraint Profile. Expressions may reference field values using the $feature global input and must return either true or false.\r\n                The referenced expression must be defined in the form template's expressionInfos. It cannot be set inline within the element object.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"EditableExpression","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"RequiredExpression","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement.RequiredExpression\">\r\n            <summary>\r\n                A reference to the name of an Arcade expression defined in the expressionInfos of the FormTemplate. The expression must follow the specification defined in the Form Constraint Profile. Expressions may reference field values using the $feature global input and must return either true or false.\r\n                When this expression evaluates to true and the field value is required, the element must have a valid value in order for the feature to be created or edited. When the expression evaluates to false, the element is not required. If no expression is provided, the required behavior is defined via the required property.\r\n                If the referenced field is non-nullable, the requiredExpression is ignored and the element is always required.\r\n            </summary>\r\n            <remarks>\r\n                The referenced expression must be defined in the form template's expressionInfos. It cannot be set inline within the element object.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"RequiredExpression","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"FieldName","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement.FieldName\">\r\n            <summary>\r\n                The field name as defined by the feature layer. Set this property to indicate which field to edit.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FieldName","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Hint","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement.Hint\">\r\n            <summary>\r\n                Contains a hint used to help editors while editing fields. Set this as a temporary placeholder for text/number inputs in either TextAreaInput or TextBoxInput.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Hint","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.FormElement.Description\">\r\n            <summary>\r\n                The element's description providing the purpose behind it.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Description","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.FormElement.Label\">\r\n            <summary>\r\n                A string value containing the field alias. This is not to Arcade expressions as the title is used instead.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"VisibilityExpression","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.FormElement.VisibilityExpression\">\r\n            <summary>\r\n                A reference to the name of an Arcade expression defined in the expressionInfos of the FormTemplate. The expression must follow the specification defined by the Form Constraint Profile. Expressions may reference field values using the $feature profile variable and must return either true or false.\r\n            </summary>\r\n            <remarks>\r\n                When this expression evaluates to true, the element is displayed. When the expression evaluates to false the element is not displayed. If no expression is provided, the element is always displayed. Care must be taken when defining a visibility expression for a non-nullable field i.e. to make sure that such fields either have default values or are made visible to users so that they can provide a value before submitting the form.\r\n                The referenced expression must be defined in the form template's expressionInfos. It cannot be set inline within the element object.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"VisibilityExpression","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement","Common.TypeNameIdentifier":"FieldElement","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":517160068,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"FieldElement"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement.ChildContent","Common.TypeNameIdentifier":"FieldElement","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1656826605,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.FieldElement.ChildContent","Common.TypeNameIdentifier":"FieldElement","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1358041717,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.GroupElement","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.GroupElement\">\r\n            <summary>\r\n                A GroupElement form element defines a container that holds a set of form elements that can be expanded, collapsed, or displayed together. This is the preferred way to set grouped field configurations within a FeatureForm or Featurelayer formTemplate.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-form-elements-GroupElement.html\">ArcGIS JS API</a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupElement"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.FormElement.Description\">\r\n            <summary>\r\n                The element's description providing the purpose behind it.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Description","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.FormElement.Label\">\r\n            <summary>\r\n                A string value containing the field alias. This is not to Arcade expressions as the title is used instead.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"VisibilityExpression","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.FormElement.VisibilityExpression\">\r\n            <summary>\r\n                A reference to the name of an Arcade expression defined in the expressionInfos of the FormTemplate. The expression must follow the specification defined by the Form Constraint Profile. Expressions may reference field values using the $feature profile variable and must return either true or false.\r\n            </summary>\r\n            <remarks>\r\n                When this expression evaluates to true, the element is displayed. When the expression evaluates to false the element is not displayed. If no expression is provided, the element is always displayed. Care must be taken when defining a visibility expression for a non-nullable field i.e. to make sure that such fields either have default values or are made visible to users so that they can provide a value before submitting the form.\r\n                The referenced expression must be defined in the form template's expressionInfos. It cannot be set inline within the element object.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"VisibilityExpression","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.GroupElement","Common.TypeNameIdentifier":"GroupElement","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":-168128429,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.GroupElement","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.GroupElement\">\r\n            <summary>\r\n                A GroupElement form element defines a container that holds a set of form elements that can be expanded, collapsed, or displayed together. This is the preferred way to set grouped field configurations within a FeatureForm or Featurelayer formTemplate.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-form-elements-GroupElement.html\">ArcGIS JS API</a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.GroupElement"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.FormElement.Description\">\r\n            <summary>\r\n                The element's description providing the purpose behind it.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Description","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.FormElement.Label\">\r\n            <summary>\r\n                A string value containing the field alias. This is not to Arcade expressions as the title is used instead.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"VisibilityExpression","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.FormElement.VisibilityExpression\">\r\n            <summary>\r\n                A reference to the name of an Arcade expression defined in the expressionInfos of the FormTemplate. The expression must follow the specification defined by the Form Constraint Profile. Expressions may reference field values using the $feature profile variable and must return either true or false.\r\n            </summary>\r\n            <remarks>\r\n                When this expression evaluates to true, the element is displayed. When the expression evaluates to false the element is not displayed. If no expression is provided, the element is always displayed. Care must be taken when defining a visibility expression for a non-nullable field i.e. to make sure that such fields either have default values or are made visible to users so that they can provide a value before submitting the form.\r\n                The referenced expression must be defined in the form template's expressionInfos. It cannot be set inline within the element object.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"VisibilityExpression","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.GroupElement","Common.TypeNameIdentifier":"GroupElement","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1811881698,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.GroupElement.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"GroupElement"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.GroupElement.ChildContent","Common.TypeNameIdentifier":"GroupElement","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-572202892,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.GroupElement.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.GroupElement"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.GroupElement.ChildContent","Common.TypeNameIdentifier":"GroupElement","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":478068450,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.TextBoxInput","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.TextBoxInput\">\r\n            <summary>\r\n                The TextBoxInput class defines the desired user interface as a single-line text box.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-form-elements-inputs-TextBoxInput.html\">ArcGIS JS API</a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TextBoxInput"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.TextBoxInput.MaxLength\">\r\n            <summary>\r\n                When set, defines the text input's maximum length.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxLength","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MinLength","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.TextBoxInput.MinLength\">\r\n            <summary>\r\n                When set, defines the text input's minimum length.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinLength","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.TextBoxInput","Common.TypeNameIdentifier":"TextBoxInput","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":398153203,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.TextBoxInput","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.TextBoxInput\">\r\n            <summary>\r\n                The TextBoxInput class defines the desired user interface as a single-line text box.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-form-elements-inputs-TextBoxInput.html\">ArcGIS JS API</a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.TextBoxInput"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.TextBoxInput.MaxLength\">\r\n            <summary>\r\n                When set, defines the text input's maximum length.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxLength","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MinLength","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.TextBoxInput.MinLength\">\r\n            <summary>\r\n                When set, defines the text input's minimum length.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinLength","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.TextBoxInput","Common.TypeNameIdentifier":"TextBoxInput","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1057035136,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.TextBoxInput.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"TextBoxInput"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.TextBoxInput.ChildContent","Common.TypeNameIdentifier":"TextBoxInput","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-509972078,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.TextBoxInput.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.TextBoxInput"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.TextBoxInput.ChildContent","Common.TypeNameIdentifier":"TextBoxInput","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1122694490,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.TextAreaInput","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.TextAreaInput\">\r\n            <summary>\r\n                The TextAreaInput class defines the desired user interface as a multi-line text area.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-form-elements-inputs-TextAreaInput.html\">ArcGIS JS API</a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TextAreaInput"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.TextAreaInput.MaxLength\">\r\n            <summary>\r\n                When set, defines the text input's maximum length.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxLength","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MinLength","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.TextAreaInput.MinLength\">\r\n            <summary>\r\n                When set, defines the text input's minimum length.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinLength","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.TextAreaInput","Common.TypeNameIdentifier":"TextAreaInput","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":-669328439,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.TextAreaInput","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.TextAreaInput\">\r\n            <summary>\r\n                The TextAreaInput class defines the desired user interface as a multi-line text area.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-form-elements-inputs-TextAreaInput.html\">ArcGIS JS API</a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.TextAreaInput"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.TextAreaInput.MaxLength\">\r\n            <summary>\r\n                When set, defines the text input's maximum length.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxLength","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MinLength","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.TextAreaInput.MinLength\">\r\n            <summary>\r\n                When set, defines the text input's minimum length.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinLength","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.TextAreaInput","Common.TypeNameIdentifier":"TextAreaInput","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1601854052,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.TextAreaInput.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"TextAreaInput"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.TextAreaInput.ChildContent","Common.TypeNameIdentifier":"TextAreaInput","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1493543022,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.TextAreaInput.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.TextAreaInput"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.TextAreaInput.ChildContent","Common.TypeNameIdentifier":"TextAreaInput","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-721560684,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.DateTimePickerInput","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.DateTimePickerInput\">\r\n            <summary>\r\n                The DateTimePickerInput class defines the desired user interface for editing date fields in a form.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-form-elements-inputs-DateTimePickerInput.html\">ArcGIS JS API</a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DateTimePickerInput"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IncludeTime","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.DateTimePickerInput.IncludeTime\">\r\n            <summary>\r\n                Indicates if the input should provide an option to select the time. If not provided, the default value is false.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IncludeTime","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Max","TypeName":"System.Int64?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.DateTimePickerInput.Max\">\r\n            <summary>\r\n                The maximum date to allow. The number represents the number of milliseconds since epoch (January 1, 1970) in UTC.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Max","Common.GloballyQualifiedTypeName":"global::System.Int64?"}},{"Kind":"Components.Component","Name":"Min","TypeName":"System.Int64?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.DateTimePickerInput.Min\">\r\n            <summary>\r\n                The minimum date to allow. The number represents the number of milliseconds since epoch (January 1, 1970) in UTC.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Min","Common.GloballyQualifiedTypeName":"global::System.Int64?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.DateTimePickerInput","Common.TypeNameIdentifier":"DateTimePickerInput","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":141916376,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.DateTimePickerInput","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.DateTimePickerInput\">\r\n            <summary>\r\n                The DateTimePickerInput class defines the desired user interface for editing date fields in a form.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-form-elements-inputs-DateTimePickerInput.html\">ArcGIS JS API</a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.DateTimePickerInput"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IncludeTime","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.DateTimePickerInput.IncludeTime\">\r\n            <summary>\r\n                Indicates if the input should provide an option to select the time. If not provided, the default value is false.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IncludeTime","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Max","TypeName":"System.Int64?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.DateTimePickerInput.Max\">\r\n            <summary>\r\n                The maximum date to allow. The number represents the number of milliseconds since epoch (January 1, 1970) in UTC.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Max","Common.GloballyQualifiedTypeName":"global::System.Int64?"}},{"Kind":"Components.Component","Name":"Min","TypeName":"System.Int64?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.DateTimePickerInput.Min\">\r\n            <summary>\r\n                The minimum date to allow. The number represents the number of milliseconds since epoch (January 1, 1970) in UTC.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Min","Common.GloballyQualifiedTypeName":"global::System.Int64?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.DateTimePickerInput","Common.TypeNameIdentifier":"DateTimePickerInput","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-410278807,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.DateTimePickerInput.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"DateTimePickerInput"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.DateTimePickerInput.ChildContent","Common.TypeNameIdentifier":"DateTimePickerInput","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1362706172,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.DateTimePickerInput.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.DateTimePickerInput"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.DateTimePickerInput.ChildContent","Common.TypeNameIdentifier":"DateTimePickerInput","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1685287444,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.BarcodeScannerInput","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.BarcodeScannerInput\">\r\n            <summary>\r\n                The BarcodeScannerInput class defines the desired user interface for a barcode or QR code scanner. This input type will default to the TextBoxInput type as the API does not currently support bar code scanning.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-form-elements-inputs-BarcodeScannerInput.html\">ArcGIS JS API</a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BarcodeScannerInput"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BarcodeScannerInput.MaxLength\">\r\n            <summary>\r\n                When set, defines the text input's maximum length.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxLength","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MinLength","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BarcodeScannerInput.MinLength\">\r\n            <summary>\r\n                When set, defines the text input's minimum length.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinLength","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.BarcodeScannerInput","Common.TypeNameIdentifier":"BarcodeScannerInput","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":-2022601827,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.BarcodeScannerInput","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.BarcodeScannerInput\">\r\n            <summary>\r\n                The BarcodeScannerInput class defines the desired user interface for a barcode or QR code scanner. This input type will default to the TextBoxInput type as the API does not currently support bar code scanning.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-form-elements-inputs-BarcodeScannerInput.html\">ArcGIS JS API</a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.BarcodeScannerInput"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BarcodeScannerInput.MaxLength\">\r\n            <summary>\r\n                When set, defines the text input's maximum length.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxLength","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"MinLength","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.BarcodeScannerInput.MinLength\">\r\n            <summary>\r\n                When set, defines the text input's minimum length.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MinLength","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.BarcodeScannerInput","Common.TypeNameIdentifier":"BarcodeScannerInput","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":459361711,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.BarcodeScannerInput.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BarcodeScannerInput"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.BarcodeScannerInput.ChildContent","Common.TypeNameIdentifier":"BarcodeScannerInput","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-2063765945,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.BarcodeScannerInput.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.BarcodeScannerInput"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.BarcodeScannerInput.ChildContent","Common.TypeNameIdentifier":"BarcodeScannerInput","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-2086423423,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.ComboBoxInput","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.ComboBoxInput\">\r\n            <summary>\r\n                The ComboBoxInput class defines the desired user interface for a combo box group.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-form-elements-inputs-ComboBoxInput.html\">ArcGIS JS API</a>\r\n            </summary>\r\n            <remarks>\r\n                Coded-value domains are required when using this input type. Previously, fields containing values that weren't compatible with their associated coded-value domain(s) displayed the option and would remove it once a user updated the value. The ComboBoxInput will now display and keep the value but will disable it.\r\n            </remarks>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ComboBoxInput"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"NoValueOptionLabel","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.ComboBoxInput.NoValueOptionLabel\">\r\n            <summary>\r\n                The text used to represent a null value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NoValueOptionLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ShowNoValueOption","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.ComboBoxInput.ShowNoValueOption\">\r\n            <summary>\r\n                Determines whether a null value option is displayed. This only applies to fields that support null values.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowNoValueOption","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.ComboBoxInput","Common.TypeNameIdentifier":"ComboBoxInput","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":865216894,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.ComboBoxInput","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.ComboBoxInput\">\r\n            <summary>\r\n                The ComboBoxInput class defines the desired user interface for a combo box group.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-form-elements-inputs-ComboBoxInput.html\">ArcGIS JS API</a>\r\n            </summary>\r\n            <remarks>\r\n                Coded-value domains are required when using this input type. Previously, fields containing values that weren't compatible with their associated coded-value domain(s) displayed the option and would remove it once a user updated the value. The ComboBoxInput will now display and keep the value but will disable it.\r\n            </remarks>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.ComboBoxInput"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"NoValueOptionLabel","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.ComboBoxInput.NoValueOptionLabel\">\r\n            <summary>\r\n                The text used to represent a null value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NoValueOptionLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ShowNoValueOption","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.ComboBoxInput.ShowNoValueOption\">\r\n            <summary>\r\n                Determines whether a null value option is displayed. This only applies to fields that support null values.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowNoValueOption","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.ComboBoxInput","Common.TypeNameIdentifier":"ComboBoxInput","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1460876034,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.ComboBoxInput.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ComboBoxInput"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.ComboBoxInput.ChildContent","Common.TypeNameIdentifier":"ComboBoxInput","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":835263886,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.ComboBoxInput.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.ComboBoxInput"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.ComboBoxInput.ChildContent","Common.TypeNameIdentifier":"ComboBoxInput","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":515587543,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.RadioButtonsInput","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.RadioButtonsInput\">\r\n            <summary>\r\n                https://developers.arcgis.com/javascript/latest/api-reference/esri-form-elements-inputs-RadioButtonsInput.html\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-form-elements-inputs-RadioButtonsInput.html\">ArcGIS JS API</a>\r\n            </summary>\r\n            <remarks>\r\n                Coded-value domains are required when using this input type. Previously, fields containing values that weren't compatible with their associated coded-value domain(s) displayed the option and would remove it once a user updated the value. The RadioButtonsInput will now keep the value, but it will not display an option in the user interface.\r\n            </remarks>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"RadioButtonsInput"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"NoValueOptionLabel","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.RadioButtonsInput.NoValueOptionLabel\">\r\n            <summary>\r\n                The text used to represent a null value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NoValueOptionLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ShowNoValueOption","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.RadioButtonsInput.ShowNoValueOption\">\r\n            <summary>\r\n                Determines whether a null value option is displayed. This only applies to fields that support null values.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowNoValueOption","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.RadioButtonsInput","Common.TypeNameIdentifier":"RadioButtonsInput","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":1050673724,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.RadioButtonsInput","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.RadioButtonsInput\">\r\n            <summary>\r\n                https://developers.arcgis.com/javascript/latest/api-reference/esri-form-elements-inputs-RadioButtonsInput.html\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-form-elements-inputs-RadioButtonsInput.html\">ArcGIS JS API</a>\r\n            </summary>\r\n            <remarks>\r\n                Coded-value domains are required when using this input type. Previously, fields containing values that weren't compatible with their associated coded-value domain(s) displayed the option and would remove it once a user updated the value. The RadioButtonsInput will now keep the value, but it will not display an option in the user interface.\r\n            </remarks>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.RadioButtonsInput"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"NoValueOptionLabel","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.RadioButtonsInput.NoValueOptionLabel\">\r\n            <summary>\r\n                The text used to represent a null value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NoValueOptionLabel","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ShowNoValueOption","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.RadioButtonsInput.ShowNoValueOption\">\r\n            <summary>\r\n                Determines whether a null value option is displayed. This only applies to fields that support null values.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ShowNoValueOption","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.RadioButtonsInput","Common.TypeNameIdentifier":"RadioButtonsInput","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-423459136,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.RadioButtonsInput.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"RadioButtonsInput"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.RadioButtonsInput.ChildContent","Common.TypeNameIdentifier":"RadioButtonsInput","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1657217552,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.RadioButtonsInput.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.RadioButtonsInput"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.RadioButtonsInput.ChildContent","Common.TypeNameIdentifier":"RadioButtonsInput","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":400433375,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.SwitchInput","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.SwitchInput\">\r\n            <summary>\r\n                The SwitchInput class defines the desired user interface for a binary switch or toggle. This should be used when selecting between two options.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-form-elements-inputs-SwitchInput.html\">ArcGIS JS API</a>\r\n            </summary>\r\n            <remarks>\r\n                Coded-value domains are required when using this input type.\r\n            </remarks>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SwitchInput"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OffValue","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.SwitchInput.OffValue\">\r\n            <summary>\r\n                Coded value used when the switch state is turned off. Values that are parseable as numbers will be converted.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OffValue","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnValue","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.SwitchInput.OnValue\">\r\n            <summary>\r\n                Coded value used when the switch state is turned on. Values that are parseable as numbers will be converted.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnValue","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.SwitchInput","Common.TypeNameIdentifier":"SwitchInput","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":-1321684817,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.SwitchInput","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.SwitchInput\">\r\n            <summary>\r\n                The SwitchInput class defines the desired user interface for a binary switch or toggle. This should be used when selecting between two options.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-form-elements-inputs-SwitchInput.html\">ArcGIS JS API</a>\r\n            </summary>\r\n            <remarks>\r\n                Coded-value domains are required when using this input type.\r\n            </remarks>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.SwitchInput"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OffValue","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.SwitchInput.OffValue\">\r\n            <summary>\r\n                Coded value used when the switch state is turned off. Values that are parseable as numbers will be converted.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OffValue","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnValue","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.SwitchInput.OnValue\">\r\n            <summary>\r\n                Coded value used when the switch state is turned on. Values that are parseable as numbers will be converted.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnValue","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.SwitchInput","Common.TypeNameIdentifier":"SwitchInput","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-308412064,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.SwitchInput.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SwitchInput"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.SwitchInput.ChildContent","Common.TypeNameIdentifier":"SwitchInput","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1949483013,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.SwitchInput.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.SwitchInput"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.SwitchInput.ChildContent","Common.TypeNameIdentifier":"SwitchInput","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1528393447,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate\">\r\n            <summary>\r\n                A FormTemplate formats and defines the content of a FeatureForm for a specific Layer or Graphic. A FormTemplate allows the user to access values from feature attributes when a feature in the view is selected.\r\n                The FormTemplate can be set directly on a FeatureLayer, a FeatureForm, or its view model. The template consists of various elements that display a specific type of form data.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-form-FormTemplate.html\">ArcGIS JS API</a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FormTemplate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate.Description\">\r\n            <summary>\r\n                The description of the form.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Description","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PreserveFieldValuesWhenHidden","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate.PreserveFieldValuesWhenHidden\">\r\n            <summary>\r\n                Indicates whether to retain or clear a form's field element values. Use this property when a field element initially displays as visible but then updates to not display as a result of an applied visibilityExpression.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PreserveFieldValuesWhenHidden","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate.Title\">\r\n            <summary>\r\n                The string template for defining how to format the title displayed at the top of a form.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate","Common.TypeNameIdentifier":"FormTemplate","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":1819995597,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate\">\r\n            <summary>\r\n                A FormTemplate formats and defines the content of a FeatureForm for a specific Layer or Graphic. A FormTemplate allows the user to access values from feature attributes when a feature in the view is selected.\r\n                The FormTemplate can be set directly on a FeatureLayer, a FeatureForm, or its view model. The template consists of various elements that display a specific type of form data.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-form-FormTemplate.html\">ArcGIS JS API</a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate.Description\">\r\n            <summary>\r\n                The description of the form.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Description","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"PreserveFieldValuesWhenHidden","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate.PreserveFieldValuesWhenHidden\">\r\n            <summary>\r\n                Indicates whether to retain or clear a form's field element values. Use this property when a field element initially displays as visible but then updates to not display as a result of an applied visibilityExpression.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PreserveFieldValuesWhenHidden","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate.Title\">\r\n            <summary>\r\n                The string template for defining how to format the title displayed at the top of a form.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate","Common.TypeNameIdentifier":"FormTemplate","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":342676449,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"FormTemplate"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate.ChildContent","Common.TypeNameIdentifier":"FormTemplate","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-368899271,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.FormTemplate.ChildContent","Common.TypeNameIdentifier":"FormTemplate","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":960734127,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.HomeWidget","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.HomeWidget\">\r\n            <summary>\r\n                Provides a simple widget that switches the View to its initial Viewpoint or a previously defined viewpoint.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Home.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HomeWidget"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IconClass","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.HomeWidget.IconClass\">\r\n            <summary>\r\n                The widget's default CSS icon class.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.HomeWidget.Label\">\r\n            <summary>\r\n                The widget's default label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.OverlayPosition?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\">\r\n            <summary>\r\n                The position of the widget in relation to the map view.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.OverlayPosition?"}},{"Kind":"Components.Component","Name":"ContainerId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\">\r\n            <summary>\r\n                The id of an external HTML Element (div). If provided, the widget will be placed inside that element, instead of on\r\n                the map.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ContainerId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Icon\">\r\n            <summary>\r\n                Icon which represents the widget. It is typically used when the widget is controlled by another one (e.g. in the Expand widget).\r\n                Default Value:null\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WidgetId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetId\">\r\n            <summary>\r\n                The unique ID assigned to the widget when the widget is created. If not set by the developer, it will default to the container ID, or if that is not present then it will be automatically generated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"WidgetId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.HomeWidget","Common.TypeNameIdentifier":"HomeWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":1046919862,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.HomeWidget","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.HomeWidget\">\r\n            <summary>\r\n                Provides a simple widget that switches the View to its initial Viewpoint or a previously defined viewpoint.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Home.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.HomeWidget"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IconClass","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.HomeWidget.IconClass\">\r\n            <summary>\r\n                The widget's default CSS icon class.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.HomeWidget.Label\">\r\n            <summary>\r\n                The widget's default label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.OverlayPosition?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\">\r\n            <summary>\r\n                The position of the widget in relation to the map view.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.OverlayPosition?"}},{"Kind":"Components.Component","Name":"ContainerId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\">\r\n            <summary>\r\n                The id of an external HTML Element (div). If provided, the widget will be placed inside that element, instead of on\r\n                the map.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ContainerId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Icon\">\r\n            <summary>\r\n                Icon which represents the widget. It is typically used when the widget is controlled by another one (e.g. in the Expand widget).\r\n                Default Value:null\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WidgetId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetId\">\r\n            <summary>\r\n                The unique ID assigned to the widget when the widget is created. If not set by the developer, it will default to the container ID, or if that is not present then it will be automatically generated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"WidgetId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.HomeWidget","Common.TypeNameIdentifier":"HomeWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1019027821,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.HomeWidget.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HomeWidget"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.HomeWidget.ChildContent","Common.TypeNameIdentifier":"HomeWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":101171235,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.HomeWidget.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.HomeWidget"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.HomeWidget.ChildContent","Common.TypeNameIdentifier":"HomeWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-2047630463,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.LayerListWidget","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.LayerListWidget\">\r\n            <summary>\r\n                The LayerList widget provides a way to display a list of layers, and switch on/off their visibility. The ListItem\r\n                API provides access to each layer's properties, allows the developer to configure actions related to the layer, and\r\n                allows the developer to add content to the item related to the layer.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-LayerList.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LayerListWidget"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IconClass","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.LayerListWidget.IconClass\">\r\n            <summary>\r\n                The widget's default CSS icon class.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.LayerListWidget.Label\">\r\n            <summary>\r\n                The widget's default label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnListItemCreatedHandler","TypeName":"System.Func<dymaptic.GeoBlazor.Core.Components.Widgets.LayerList.ListItem, System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Widgets.LayerList.ListItem>>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.LayerListWidget.OnListItemCreatedHandler\">\r\n            <summary>\r\n                A delegate to implement a custom handler for setting up each <see cref=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.LayerList.ListItem\" />.\r\n                Function must take in a ListItem and return a Task with the same (updated) item.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::dymaptic.GeoBlazor.Core.Components.Widgets.LayerList.ListItem, global::System.Threading.Tasks.Task<global::dymaptic.GeoBlazor.Core.Components.Widgets.LayerList.ListItem>>","Common.PropertyName":"OnListItemCreatedHandler","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.OverlayPosition?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\">\r\n            <summary>\r\n                The position of the widget in relation to the map view.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.OverlayPosition?"}},{"Kind":"Components.Component","Name":"ContainerId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\">\r\n            <summary>\r\n                The id of an external HTML Element (div). If provided, the widget will be placed inside that element, instead of on\r\n                the map.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ContainerId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Icon\">\r\n            <summary>\r\n                Icon which represents the widget. It is typically used when the widget is controlled by another one (e.g. in the Expand widget).\r\n                Default Value:null\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WidgetId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetId\">\r\n            <summary>\r\n                The unique ID assigned to the widget when the widget is created. If not set by the developer, it will default to the container ID, or if that is not present then it will be automatically generated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"WidgetId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.LayerListWidget","Common.TypeNameIdentifier":"LayerListWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":1058769601,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.LayerListWidget","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.LayerListWidget\">\r\n            <summary>\r\n                The LayerList widget provides a way to display a list of layers, and switch on/off their visibility. The ListItem\r\n                API provides access to each layer's properties, allows the developer to configure actions related to the layer, and\r\n                allows the developer to add content to the item related to the layer.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-LayerList.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.LayerListWidget"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IconClass","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.LayerListWidget.IconClass\">\r\n            <summary>\r\n                The widget's default CSS icon class.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IconClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.LayerListWidget.Label\">\r\n            <summary>\r\n                The widget's default label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"OnListItemCreatedHandler","TypeName":"System.Func<dymaptic.GeoBlazor.Core.Components.Widgets.LayerList.ListItem, System.Threading.Tasks.Task<dymaptic.GeoBlazor.Core.Components.Widgets.LayerList.ListItem>>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.LayerListWidget.OnListItemCreatedHandler\">\r\n            <summary>\r\n                A delegate to implement a custom handler for setting up each <see cref=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.LayerList.ListItem\" />.\r\n                Function must take in a ListItem and return a Task with the same (updated) item.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::dymaptic.GeoBlazor.Core.Components.Widgets.LayerList.ListItem, global::System.Threading.Tasks.Task<global::dymaptic.GeoBlazor.Core.Components.Widgets.LayerList.ListItem>>","Common.PropertyName":"OnListItemCreatedHandler","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.OverlayPosition?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\">\r\n            <summary>\r\n                The position of the widget in relation to the map view.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.OverlayPosition?"}},{"Kind":"Components.Component","Name":"ContainerId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\">\r\n            <summary>\r\n                The id of an external HTML Element (div). If provided, the widget will be placed inside that element, instead of on\r\n                the map.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ContainerId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Icon\">\r\n            <summary>\r\n                Icon which represents the widget. It is typically used when the widget is controlled by another one (e.g. in the Expand widget).\r\n                Default Value:null\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WidgetId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetId\">\r\n            <summary>\r\n                The unique ID assigned to the widget when the widget is created. If not set by the developer, it will default to the container ID, or if that is not present then it will be automatically generated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"WidgetId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.LayerListWidget","Common.TypeNameIdentifier":"LayerListWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":445496350,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.LayerListWidget.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"LayerListWidget"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.LayerListWidget.ChildContent","Common.TypeNameIdentifier":"LayerListWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1036159155,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.LayerListWidget.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.LayerListWidget"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.LayerListWidget.ChildContent","Common.TypeNameIdentifier":"LayerListWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1647413138,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.LegendWidget","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.LegendWidget\">\r\n            <summary>\r\n                The Legend widget describes the symbols used to represent layers in a map. All symbols and text used in this widget\r\n                are configured in the Renderer of the layer. The legend will only display layers and sublayers that are visible in\r\n                the view.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Legend.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LegendWidget"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.OverlayPosition?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\">\r\n            <summary>\r\n                The position of the widget in relation to the map view.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.OverlayPosition?"}},{"Kind":"Components.Component","Name":"ContainerId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\">\r\n            <summary>\r\n                The id of an external HTML Element (div). If provided, the widget will be placed inside that element, instead of on\r\n                the map.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ContainerId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Icon\">\r\n            <summary>\r\n                Icon which represents the widget. It is typically used when the widget is controlled by another one (e.g. in the Expand widget).\r\n                Default Value:null\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WidgetId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetId\">\r\n            <summary>\r\n                The unique ID assigned to the widget when the widget is created. If not set by the developer, it will default to the container ID, or if that is not present then it will be automatically generated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"WidgetId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.LegendWidget","Common.TypeNameIdentifier":"LegendWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":1602034031,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.LegendWidget","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.LegendWidget\">\r\n            <summary>\r\n                The Legend widget describes the symbols used to represent layers in a map. All symbols and text used in this widget\r\n                are configured in the Renderer of the layer. The legend will only display layers and sublayers that are visible in\r\n                the view.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Legend.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.LegendWidget"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.OverlayPosition?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\">\r\n            <summary>\r\n                The position of the widget in relation to the map view.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.OverlayPosition?"}},{"Kind":"Components.Component","Name":"ContainerId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\">\r\n            <summary>\r\n                The id of an external HTML Element (div). If provided, the widget will be placed inside that element, instead of on\r\n                the map.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ContainerId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Icon\">\r\n            <summary>\r\n                Icon which represents the widget. It is typically used when the widget is controlled by another one (e.g. in the Expand widget).\r\n                Default Value:null\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WidgetId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetId\">\r\n            <summary>\r\n                The unique ID assigned to the widget when the widget is created. If not set by the developer, it will default to the container ID, or if that is not present then it will be automatically generated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"WidgetId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.LegendWidget","Common.TypeNameIdentifier":"LegendWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-551203618,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.LegendWidget.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"LegendWidget"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.LegendWidget.ChildContent","Common.TypeNameIdentifier":"LegendWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":420636469,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.LegendWidget.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.LegendWidget"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.LegendWidget.ChildContent","Common.TypeNameIdentifier":"LegendWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1684029290,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.LayerInfo","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.LayerInfo\">\r\n            <summary>\r\n                Specifies a layer to display in the legend.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LayerInfo"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.LayerInfo.Title\">\r\n            <summary>\r\n                Specifies a title for the layer to display above its symbols and descriptions. If no title is specified the service\r\n                name is used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Layer","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.Layer","IsEditorRequired":true,"Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.LayerInfo.Layer\">\r\n            <summary>\r\n                A layer to display in the legend.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Layer","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.Layer"}},{"Kind":"Components.Component","Name":"SublayerIds","TypeName":"System.Int32[]","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.LayerInfo.SublayerIds\">\r\n            <summary>\r\n                Only applicable if the layer is a MapImageLayer. The IDs of the MapImageLayer sublayers for which to display legend\r\n                information.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SublayerIds","Common.GloballyQualifiedTypeName":"global::System.Int32[]"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.LayerInfo","Common.TypeNameIdentifier":"LayerInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":958645271,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.LayerInfo","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.LayerInfo\">\r\n            <summary>\r\n                Specifies a layer to display in the legend.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.LayerInfo"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.LayerInfo.Title\">\r\n            <summary>\r\n                Specifies a title for the layer to display above its symbols and descriptions. If no title is specified the service\r\n                name is used.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Layer","TypeName":"dymaptic.GeoBlazor.Core.Components.Layers.Layer","IsEditorRequired":true,"Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.LayerInfo.Layer\">\r\n            <summary>\r\n                A layer to display in the legend.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Layer","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Layers.Layer"}},{"Kind":"Components.Component","Name":"SublayerIds","TypeName":"System.Int32[]","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.LayerInfo.SublayerIds\">\r\n            <summary>\r\n                Only applicable if the layer is a MapImageLayer. The IDs of the MapImageLayer sublayers for which to display legend\r\n                information.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SublayerIds","Common.GloballyQualifiedTypeName":"global::System.Int32[]"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.LayerInfo","Common.TypeNameIdentifier":"LayerInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-678553116,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.LayerInfo.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"LayerInfo"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.LayerInfo.ChildContent","Common.TypeNameIdentifier":"LayerInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":401866702,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.LayerInfo.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.LayerInfo"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.LayerInfo.ChildContent","Common.TypeNameIdentifier":"LayerInfo","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1332242462,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyle","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyle\">\r\n            <summary>\r\n            The widget legend style, sets the display style of the legend widget.\r\n            <a target=\"_blank\" href=\" https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Legend.html#style\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LegendStyle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyleType?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyle.Type\">\r\n            <summary>\r\n            The Legend style type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyleType?"}},{"Kind":"Components.Component","Name":"Layout","TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyleLayout?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyle.Layout\">\r\n            <summary>\r\n            The legend style layout when there are multiple legends\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Layout","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyleLayout?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyle","Common.TypeNameIdentifier":"LegendStyle","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":811785924,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyle","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyle\">\r\n            <summary>\r\n            The widget legend style, sets the display style of the legend widget.\r\n            <a target=\"_blank\" href=\" https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Legend.html#style\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyleType?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyle.Type\">\r\n            <summary>\r\n            The Legend style type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyleType?"}},{"Kind":"Components.Component","Name":"Layout","TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyleLayout?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyle.Layout\">\r\n            <summary>\r\n            The legend style layout when there are multiple legends\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Layout","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyleLayout?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyle","Common.TypeNameIdentifier":"LegendStyle","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1910452708,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyle.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"LegendStyle"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyle.ChildContent","Common.TypeNameIdentifier":"LegendStyle","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-455166039,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyle.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyle"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.LegendStyle.ChildContent","Common.TypeNameIdentifier":"LegendStyle","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":883183516,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.LocateWidget","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.LocateWidget\">\r\n            <summary>\r\n                Provides a simple widget that animates the View to the user's current location. The view rotates according to the\r\n                direction where the tracked device is heading towards.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Locate.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LocateWidget"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"UseHeadingEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.LocateWidget.UseHeadingEnabled\">\r\n            <summary>\r\n                Indicates whether the widget will automatically rotate to user's direction.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UseHeadingEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.LocateWidget.Scale\">\r\n            <summary>\r\n                Indicates the scale to set on the view when navigating to the position of the geolocated result once a location is\r\n                returned from the track event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Scale","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.OverlayPosition?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\">\r\n            <summary>\r\n                The position of the widget in relation to the map view.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.OverlayPosition?"}},{"Kind":"Components.Component","Name":"ContainerId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\">\r\n            <summary>\r\n                The id of an external HTML Element (div). If provided, the widget will be placed inside that element, instead of on\r\n                the map.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ContainerId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Icon\">\r\n            <summary>\r\n                Icon which represents the widget. It is typically used when the widget is controlled by another one (e.g. in the Expand widget).\r\n                Default Value:null\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WidgetId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetId\">\r\n            <summary>\r\n                The unique ID assigned to the widget when the widget is created. If not set by the developer, it will default to the container ID, or if that is not present then it will be automatically generated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"WidgetId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.LocateWidget","Common.TypeNameIdentifier":"LocateWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":1313598046,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.LocateWidget","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.LocateWidget\">\r\n            <summary>\r\n                Provides a simple widget that animates the View to the user's current location. The view rotates according to the\r\n                direction where the tracked device is heading towards.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Locate.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.LocateWidget"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"UseHeadingEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.LocateWidget.UseHeadingEnabled\">\r\n            <summary>\r\n                Indicates whether the widget will automatically rotate to user's direction.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"UseHeadingEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Scale","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.LocateWidget.Scale\">\r\n            <summary>\r\n                Indicates the scale to set on the view when navigating to the position of the geolocated result once a location is\r\n                returned from the track event.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Scale","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.OverlayPosition?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\">\r\n            <summary>\r\n                The position of the widget in relation to the map view.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.OverlayPosition?"}},{"Kind":"Components.Component","Name":"ContainerId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\">\r\n            <summary>\r\n                The id of an external HTML Element (div). If provided, the widget will be placed inside that element, instead of on\r\n                the map.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ContainerId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Icon\">\r\n            <summary>\r\n                Icon which represents the widget. It is typically used when the widget is controlled by another one (e.g. in the Expand widget).\r\n                Default Value:null\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WidgetId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetId\">\r\n            <summary>\r\n                The unique ID assigned to the widget when the widget is created. If not set by the developer, it will default to the container ID, or if that is not present then it will be automatically generated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"WidgetId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.LocateWidget","Common.TypeNameIdentifier":"LocateWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":343069421,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.LocateWidget.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"LocateWidget"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.LocateWidget.ChildContent","Common.TypeNameIdentifier":"LocateWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":2008383393,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.LocateWidget.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.LocateWidget"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.LocateWidget.ChildContent","Common.TypeNameIdentifier":"LocateWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":329325581,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget\">\r\n            <summary>\r\n               The Image Measurement widget allows you to perform measurements on image services with mensuration capability.\r\n                Mensuration is a method of applying geometric rules to find length of lines, area of surfaces, or volume using information obtained\r\n                from lines and angles. It can also include measuring the height and absolute location of a feature.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Measurement.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MeasurementWidget"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ActiveTool","TypeName":"dymaptic.GeoBlazor.Core.Components.ActiveTool?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget.ActiveTool\">\r\n            <summary>\r\n            Specifies the current measurement tool to display.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ActiveTool","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.ActiveTool?"}},{"Kind":"Components.Component","Name":"AreaUnit","TypeName":"dymaptic.GeoBlazor.Core.Objects.AreaUnit?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget.AreaUnit\">\r\n            <summary>\r\n            Unit system (imperial, metric) or specific unit used for displaying the area values.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AreaUnit","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.AreaUnit?"}},{"Kind":"Components.Component","Name":"LinearUnit","TypeName":"dymaptic.GeoBlazor.Core.Objects.LengthUnit?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget.LinearUnit\">\r\n            <summary>\r\n            Unit system (imperial, metric) or specific unit used for displaying the distance values.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LinearUnit","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.LengthUnit?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget.Label\">\r\n            <summary>\r\n            The widget's default label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.OverlayPosition?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\">\r\n            <summary>\r\n                The position of the widget in relation to the map view.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.OverlayPosition?"}},{"Kind":"Components.Component","Name":"ContainerId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\">\r\n            <summary>\r\n                The id of an external HTML Element (div). If provided, the widget will be placed inside that element, instead of on\r\n                the map.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ContainerId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Icon\">\r\n            <summary>\r\n                Icon which represents the widget. It is typically used when the widget is controlled by another one (e.g. in the Expand widget).\r\n                Default Value:null\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WidgetId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetId\">\r\n            <summary>\r\n                The unique ID assigned to the widget when the widget is created. If not set by the developer, it will default to the container ID, or if that is not present then it will be automatically generated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"WidgetId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget","Common.TypeNameIdentifier":"MeasurementWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":1802032154,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget\">\r\n            <summary>\r\n               The Image Measurement widget allows you to perform measurements on image services with mensuration capability.\r\n                Mensuration is a method of applying geometric rules to find length of lines, area of surfaces, or volume using information obtained\r\n                from lines and angles. It can also include measuring the height and absolute location of a feature.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Measurement.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ActiveTool","TypeName":"dymaptic.GeoBlazor.Core.Components.ActiveTool?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget.ActiveTool\">\r\n            <summary>\r\n            Specifies the current measurement tool to display.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ActiveTool","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.ActiveTool?"}},{"Kind":"Components.Component","Name":"AreaUnit","TypeName":"dymaptic.GeoBlazor.Core.Objects.AreaUnit?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget.AreaUnit\">\r\n            <summary>\r\n            Unit system (imperial, metric) or specific unit used for displaying the area values.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AreaUnit","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.AreaUnit?"}},{"Kind":"Components.Component","Name":"LinearUnit","TypeName":"dymaptic.GeoBlazor.Core.Objects.LengthUnit?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget.LinearUnit\">\r\n            <summary>\r\n            Unit system (imperial, metric) or specific unit used for displaying the distance values.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"LinearUnit","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.LengthUnit?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget.Label\">\r\n            <summary>\r\n            The widget's default label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.OverlayPosition?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\">\r\n            <summary>\r\n                The position of the widget in relation to the map view.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.OverlayPosition?"}},{"Kind":"Components.Component","Name":"ContainerId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\">\r\n            <summary>\r\n                The id of an external HTML Element (div). If provided, the widget will be placed inside that element, instead of on\r\n                the map.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ContainerId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Icon\">\r\n            <summary>\r\n                Icon which represents the widget. It is typically used when the widget is controlled by another one (e.g. in the Expand widget).\r\n                Default Value:null\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WidgetId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetId\">\r\n            <summary>\r\n                The unique ID assigned to the widget when the widget is created. If not set by the developer, it will default to the container ID, or if that is not present then it will be automatically generated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"WidgetId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget","Common.TypeNameIdentifier":"MeasurementWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1860846482,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MeasurementWidget"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget.ChildContent","Common.TypeNameIdentifier":"MeasurementWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":636970061,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.MeasurementWidget.ChildContent","Common.TypeNameIdentifier":"MeasurementWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":761744443,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget\">\r\n            <summary>\r\n                The Popup widget allows users to view content from feature attributes. Popups enhance web applications by providing\r\n                users with a simple way to interact with and view attributes in a layer. They play an important role in relaying\r\n                information to the user, which improves the storytelling capabilities of the application.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Popup.html\">\r\n                    ArcGIS\r\n                    API\r\n                </a>\r\n            </summary>\r\n            <remarks>\r\n                All Views contain a default popup. This popup can display generic content, which is set in its title and content\r\n                properties. When content is set directly on the Popup instance it is not tied to a specific feature or layer.\r\n                In most cases this module will not need to be loaded into your application because the view contains a default\r\n                instance of popup.\r\n            </remarks>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PopupWidget"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Alignment","TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupAlignment?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.Alignment\">\r\n            <summary>\r\n                Position of the popup in relation to the selected feature. The default behavior is to display above the feature and\r\n                adjust if not enough room. If needing to explicitly control where the popup displays in relation to the feature,\r\n                choose an option besides auto.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Alignment","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Widgets.PopupAlignment?"}},{"Kind":"Components.Component","Name":"AutoCloseEnabled","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.AutoCloseEnabled\">\r\n            <summary>\r\n                This closes the popup when the View camera or Viewpoint changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoCloseEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AutoOpenEnabled","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.AutoOpenEnabled\">\r\n            <summary>\r\n                This property indicates to the Popup that it needs to allow or disallow the click event propagation. Use\r\n                view.popup.autoOpenEnabled = false; when needing to stop the click event propagation.\r\n                DefaultValue: true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoOpenEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Collapsed","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.Collapsed\">\r\n            <summary>\r\n                Indicates whether the popup displays its content. If true, only the header displays.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Collapsed","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CollapseEnabled","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.CollapseEnabled\">\r\n            <summary>\r\n                Indicates whether to enable collapse functionality for the popup.\r\n                DefaultValue: true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CollapseEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"StringContent","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.StringContent\">\r\n            <summary>\r\n                The html string content of the popup. When set directly on the Popup, this content is static and cannot use fields\r\n                to set content templates. To set a template for the content based on field or attribute names, see\r\n                <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.Content\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"StringContent","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DefaultPopupTemplateEnabled","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.DefaultPopupTemplateEnabled\">\r\n            <summary>\r\n                Enables automatic creation of a popup template for layers that have popups enabled but no popupTemplate defined.\r\n                Automatic popup templates are supported for layers that support the createPopupTemplate method. (Supported for\r\n                FeatureLayer, GeoJSONLayer, OGCFeatureLayer, SceneLayer, CSVLayer, PointCloudLayer, StreamLayer, and ImageryLayer).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DefaultPopupTemplateEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"DockEnabled","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.DockEnabled\">\r\n            <summary>\r\n                Indicates whether the placement of the popup is docked to the side of the view.\r\n                Docking the popup allows for a better user experience, particularly when opening popups in apps on mobile devices.\r\n                When a popup is \"dockEnabled\" it means the popup no longer points to the selected feature or the location assigned\r\n                to it. Rather it is attached to a side, the top, or the bottom of the view.\r\n                See <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.DockOptions\" /> to override default options related to docking the popup.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DockEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"HeadingLevel","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.HeadingLevel\">\r\n            <summary>\r\n                Indicates the heading level to use for the title of the popup. By default, the title is rendered as a level 2\r\n                heading (e.g. <h2>Popup title</h2>). Depending on the widget's placement in your app, you may need to adjust this\r\n                heading for proper semantics. This is important for meeting accessibility standards.\r\n                DefaultValue:2\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HeadingLevel","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"HighlightEnabled","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.HighlightEnabled\">\r\n            <summary>\r\n                Highlight the selected popup feature using the highlightOptions set on the MapView or the highlightOptions set on\r\n                the SceneView.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HighlightEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.Label\">\r\n            <summary>\r\n                The widget's default label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MaxInlineActions","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.MaxInlineActions\">\r\n            <summary>\r\n                Defines the maximum icons displayed at one time in the action area.\r\n                DefaultValue: 3\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxInlineActions","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"SpinnerEnabled","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.SpinnerEnabled\">\r\n            <summary>\r\n                Indicates whether to display a spinner at the popup location prior to its display when it has pending promises.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SpinnerEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.Title\">\r\n            <summary>\r\n                The title of the popup. This can be set generically on the popup no matter the features that are selected. If the\r\n                selected feature has a PopupTemplate, then the title set in the corresponding template is used here.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.OverlayPosition?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\">\r\n            <summary>\r\n                The position of the widget in relation to the map view.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.OverlayPosition?"}},{"Kind":"Components.Component","Name":"ContainerId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\">\r\n            <summary>\r\n                The id of an external HTML Element (div). If provided, the widget will be placed inside that element, instead of on\r\n                the map.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ContainerId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Icon\">\r\n            <summary>\r\n                Icon which represents the widget. It is typically used when the widget is controlled by another one (e.g. in the Expand widget).\r\n                Default Value:null\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WidgetId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetId\">\r\n            <summary>\r\n                The unique ID assigned to the widget when the widget is created. If not set by the developer, it will default to the container ID, or if that is not present then it will be automatically generated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"WidgetId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget","Common.TypeNameIdentifier":"PopupWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":1825677686,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget\">\r\n            <summary>\r\n                The Popup widget allows users to view content from feature attributes. Popups enhance web applications by providing\r\n                users with a simple way to interact with and view attributes in a layer. They play an important role in relaying\r\n                information to the user, which improves the storytelling capabilities of the application.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Popup.html\">\r\n                    ArcGIS\r\n                    API\r\n                </a>\r\n            </summary>\r\n            <remarks>\r\n                All Views contain a default popup. This popup can display generic content, which is set in its title and content\r\n                properties. When content is set directly on the Popup instance it is not tied to a specific feature or layer.\r\n                In most cases this module will not need to be loaded into your application because the view contains a default\r\n                instance of popup.\r\n            </remarks>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Alignment","TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupAlignment?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.Alignment\">\r\n            <summary>\r\n                Position of the popup in relation to the selected feature. The default behavior is to display above the feature and\r\n                adjust if not enough room. If needing to explicitly control where the popup displays in relation to the feature,\r\n                choose an option besides auto.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Alignment","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Widgets.PopupAlignment?"}},{"Kind":"Components.Component","Name":"AutoCloseEnabled","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.AutoCloseEnabled\">\r\n            <summary>\r\n                This closes the popup when the View camera or Viewpoint changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoCloseEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"AutoOpenEnabled","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.AutoOpenEnabled\">\r\n            <summary>\r\n                This property indicates to the Popup that it needs to allow or disallow the click event propagation. Use\r\n                view.popup.autoOpenEnabled = false; when needing to stop the click event propagation.\r\n                DefaultValue: true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AutoOpenEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Collapsed","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.Collapsed\">\r\n            <summary>\r\n                Indicates whether the popup displays its content. If true, only the header displays.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Collapsed","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"CollapseEnabled","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.CollapseEnabled\">\r\n            <summary>\r\n                Indicates whether to enable collapse functionality for the popup.\r\n                DefaultValue: true\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"CollapseEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"StringContent","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.StringContent\">\r\n            <summary>\r\n                The html string content of the popup. When set directly on the Popup, this content is static and cannot use fields\r\n                to set content templates. To set a template for the content based on field or attribute names, see\r\n                <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Popups.PopupTemplate.Content\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"StringContent","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"DefaultPopupTemplateEnabled","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.DefaultPopupTemplateEnabled\">\r\n            <summary>\r\n                Enables automatic creation of a popup template for layers that have popups enabled but no popupTemplate defined.\r\n                Automatic popup templates are supported for layers that support the createPopupTemplate method. (Supported for\r\n                FeatureLayer, GeoJSONLayer, OGCFeatureLayer, SceneLayer, CSVLayer, PointCloudLayer, StreamLayer, and ImageryLayer).\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DefaultPopupTemplateEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"DockEnabled","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.DockEnabled\">\r\n            <summary>\r\n                Indicates whether the placement of the popup is docked to the side of the view.\r\n                Docking the popup allows for a better user experience, particularly when opening popups in apps on mobile devices.\r\n                When a popup is \"dockEnabled\" it means the popup no longer points to the selected feature or the location assigned\r\n                to it. Rather it is attached to a side, the top, or the bottom of the view.\r\n                See <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.DockOptions\" /> to override default options related to docking the popup.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DockEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"HeadingLevel","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.HeadingLevel\">\r\n            <summary>\r\n                Indicates the heading level to use for the title of the popup. By default, the title is rendered as a level 2\r\n                heading (e.g. <h2>Popup title</h2>). Depending on the widget's placement in your app, you may need to adjust this\r\n                heading for proper semantics. This is important for meeting accessibility standards.\r\n                DefaultValue:2\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HeadingLevel","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"HighlightEnabled","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.HighlightEnabled\">\r\n            <summary>\r\n                Highlight the selected popup feature using the highlightOptions set on the MapView or the highlightOptions set on\r\n                the SceneView.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HighlightEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Label","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.Label\">\r\n            <summary>\r\n                The widget's default label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Label","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"MaxInlineActions","TypeName":"System.Int32?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.MaxInlineActions\">\r\n            <summary>\r\n                Defines the maximum icons displayed at one time in the action area.\r\n                DefaultValue: 3\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaxInlineActions","Common.GloballyQualifiedTypeName":"global::System.Int32?"}},{"Kind":"Components.Component","Name":"SpinnerEnabled","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.SpinnerEnabled\">\r\n            <summary>\r\n                Indicates whether to display a spinner at the popup location prior to its display when it has pending promises.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SpinnerEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.Title\">\r\n            <summary>\r\n                The title of the popup. This can be set generically on the popup no matter the features that are selected. If the\r\n                selected feature has a PopupTemplate, then the title set in the corresponding template is used here.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.OverlayPosition?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\">\r\n            <summary>\r\n                The position of the widget in relation to the map view.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.OverlayPosition?"}},{"Kind":"Components.Component","Name":"ContainerId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\">\r\n            <summary>\r\n                The id of an external HTML Element (div). If provided, the widget will be placed inside that element, instead of on\r\n                the map.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ContainerId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Icon\">\r\n            <summary>\r\n                Icon which represents the widget. It is typically used when the widget is controlled by another one (e.g. in the Expand widget).\r\n                Default Value:null\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WidgetId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetId\">\r\n            <summary>\r\n                The unique ID assigned to the widget when the widget is created. If not set by the developer, it will default to the container ID, or if that is not present then it will be automatically generated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"WidgetId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget","Common.TypeNameIdentifier":"PopupWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1185041843,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PopupWidget"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.ChildContent","Common.TypeNameIdentifier":"PopupWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-931958238,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupWidget.ChildContent","Common.TypeNameIdentifier":"PopupWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1156061050,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockOptions","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockOptions\">\r\n            <summary>\r\n                Docking the popup allows for a better user experience, particularly when opening popups in apps on mobile devices.\r\n                When a popup is \"dockEnabled\" it means the popup no longer points to the selected feature or the location assigned\r\n                to it. Rather it is placed in one of the corners of the view or to the top or bottom of it. This property allows\r\n                the developer to set various options for docking the popup.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PopupDockOptions"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockPosition?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockOptions.Position\">\r\n            <summary>\r\n                The position in the view at which to dock the popup.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockPosition?"}},{"Kind":"Components.Component","Name":"ButtonEnabled","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockOptions.ButtonEnabled\">\r\n            <summary>\r\n                If true, displays the dock button. If false, hides the dock button from the popup.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ButtonEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"BreakPoint","TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.BreakPoint","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockOptions.BreakPoint\">\r\n            <summary>\r\n                Defines the dimensions of the View at which to dock the popup. Set to false to disable docking at a breakpoint.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"BreakPoint","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Widgets.BreakPoint"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockOptions","Common.TypeNameIdentifier":"PopupDockOptions","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":1684937976,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockOptions","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockOptions\">\r\n            <summary>\r\n                Docking the popup allows for a better user experience, particularly when opening popups in apps on mobile devices.\r\n                When a popup is \"dockEnabled\" it means the popup no longer points to the selected feature or the location assigned\r\n                to it. Rather it is placed in one of the corners of the view or to the top or bottom of it. This property allows\r\n                the developer to set various options for docking the popup.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockOptions"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockPosition?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockOptions.Position\">\r\n            <summary>\r\n                The position in the view at which to dock the popup.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockPosition?"}},{"Kind":"Components.Component","Name":"ButtonEnabled","TypeName":"System.Boolean?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockOptions.ButtonEnabled\">\r\n            <summary>\r\n                If true, displays the dock button. If false, hides the dock button from the popup.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ButtonEnabled","Common.GloballyQualifiedTypeName":"global::System.Boolean?"}},{"Kind":"Components.Component","Name":"BreakPoint","TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.BreakPoint","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockOptions.BreakPoint\">\r\n            <summary>\r\n                Defines the dimensions of the View at which to dock the popup. Set to false to disable docking at a breakpoint.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"BreakPoint","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Widgets.BreakPoint"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockOptions","Common.TypeNameIdentifier":"PopupDockOptions","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":520745734,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockOptions.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PopupDockOptions"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockOptions.ChildContent","Common.TypeNameIdentifier":"PopupDockOptions","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1984954362,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockOptions.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockOptions"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupDockOptions.ChildContent","Common.TypeNameIdentifier":"PopupDockOptions","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1435871487,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupVisibleElements","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.PopupVisibleElements\">\r\n            <summary>\r\n                The visible elements that are displayed within the widget. This provides the ability to turn individual elements of\r\n                the widget's display on/off.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PopupVisibleElements"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupVisibleElements","Common.TypeNameIdentifier":"PopupVisibleElements","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":-1776874658,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupVisibleElements","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.PopupVisibleElements\">\r\n            <summary>\r\n                The visible elements that are displayed within the widget. This provides the ability to turn individual elements of\r\n                the widget's display on/off.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupVisibleElements"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupVisibleElements","Common.TypeNameIdentifier":"PopupVisibleElements","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1372555977,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupVisibleElements.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PopupVisibleElements"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupVisibleElements.ChildContent","Common.TypeNameIdentifier":"PopupVisibleElements","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-563720539,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupVisibleElements.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupVisibleElements"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.PopupVisibleElements.ChildContent","Common.TypeNameIdentifier":"PopupVisibleElements","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1638235077,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.ScaleBarWidget","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.ScaleBarWidget\">\r\n            <summary>\r\n                The ScaleBar widget displays a scale bar on the map or in a specified HTML node. The widget respects various\r\n                coordinate systems and displays units in metric or non-metric values. Metric values shows either kilometers or\r\n                meters depending on the scale, and likewise non-metric values shows miles and feet depending on the scale.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-ScaleBar.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ScaleBarWidget"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Unit","TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.ScaleUnit?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.ScaleBarWidget.Unit\">\r\n            <summary>\r\n                Units to use for the scale bar\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Unit","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Widgets.ScaleUnit?"}},{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.OverlayPosition?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\">\r\n            <summary>\r\n                The position of the widget in relation to the map view.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.OverlayPosition?"}},{"Kind":"Components.Component","Name":"ContainerId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\">\r\n            <summary>\r\n                The id of an external HTML Element (div). If provided, the widget will be placed inside that element, instead of on\r\n                the map.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ContainerId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Icon\">\r\n            <summary>\r\n                Icon which represents the widget. It is typically used when the widget is controlled by another one (e.g. in the Expand widget).\r\n                Default Value:null\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WidgetId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetId\">\r\n            <summary>\r\n                The unique ID assigned to the widget when the widget is created. If not set by the developer, it will default to the container ID, or if that is not present then it will be automatically generated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"WidgetId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.ScaleBarWidget","Common.TypeNameIdentifier":"ScaleBarWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":28079136,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.ScaleBarWidget","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.ScaleBarWidget\">\r\n            <summary>\r\n                The ScaleBar widget displays a scale bar on the map or in a specified HTML node. The widget respects various\r\n                coordinate systems and displays units in metric or non-metric values. Metric values shows either kilometers or\r\n                meters depending on the scale, and likewise non-metric values shows miles and feet depending on the scale.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-ScaleBar.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.ScaleBarWidget"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Unit","TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.ScaleUnit?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.ScaleBarWidget.Unit\">\r\n            <summary>\r\n                Units to use for the scale bar\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Unit","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.Widgets.ScaleUnit?"}},{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.OverlayPosition?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\">\r\n            <summary>\r\n                The position of the widget in relation to the map view.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.OverlayPosition?"}},{"Kind":"Components.Component","Name":"ContainerId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\">\r\n            <summary>\r\n                The id of an external HTML Element (div). If provided, the widget will be placed inside that element, instead of on\r\n                the map.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ContainerId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Icon\">\r\n            <summary>\r\n                Icon which represents the widget. It is typically used when the widget is controlled by another one (e.g. in the Expand widget).\r\n                Default Value:null\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WidgetId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetId\">\r\n            <summary>\r\n                The unique ID assigned to the widget when the widget is created. If not set by the developer, it will default to the container ID, or if that is not present then it will be automatically generated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"WidgetId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.ScaleBarWidget","Common.TypeNameIdentifier":"ScaleBarWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":757210343,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.ScaleBarWidget.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ScaleBarWidget"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.ScaleBarWidget.ChildContent","Common.TypeNameIdentifier":"ScaleBarWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-756909441,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.ScaleBarWidget.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.ScaleBarWidget"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.ScaleBarWidget.ChildContent","Common.TypeNameIdentifier":"ScaleBarWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-458091130,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget\">\r\n            <summary>\r\n                The Search widget provides a way to perform search operations on locator service(s), map/feature service feature\r\n                layer(s), SceneLayers with an associated feature layer, BuildingComponentSublayer with an associated feature layer,\r\n                GeoJSONLayer, CSVLayer, OGCFeatureLayer, and/or table(s). If using a locator with a geocoding service, the\r\n                findAddressCandidates operation is used, whereas queries are used on feature layers.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Search.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SearchWidget"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnSearchSelectResultEvent","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Objects.SearchResult>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.OnSearchSelectResultEvent\">\r\n            <summary>\r\n                A delegate for a handler of search selection result events.\r\n                Function must take in a <see cref=\"T:dymaptic.GeoBlazor.Core.Objects.SearchResult\" /> parameter, and return a <see cref=\"T:System.Threading.Tasks.Task\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnSearchSelectResultEvent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Objects.SearchResult>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.OverlayPosition?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\">\r\n            <summary>\r\n                The position of the widget in relation to the map view.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.OverlayPosition?"}},{"Kind":"Components.Component","Name":"ContainerId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\">\r\n            <summary>\r\n                The id of an external HTML Element (div). If provided, the widget will be placed inside that element, instead of on\r\n                the map.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ContainerId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Icon\">\r\n            <summary>\r\n                Icon which represents the widget. It is typically used when the widget is controlled by another one (e.g. in the Expand widget).\r\n                Default Value:null\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WidgetId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetId\">\r\n            <summary>\r\n                The unique ID assigned to the widget when the widget is created. If not set by the developer, it will default to the container ID, or if that is not present then it will be automatically generated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"WidgetId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget","Common.TypeNameIdentifier":"SearchWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Runtime.Name":"Components.IComponent"}},{"HashCode":2061307977,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget\">\r\n            <summary>\r\n                The Search widget provides a way to perform search operations on locator service(s), map/feature service feature\r\n                layer(s), SceneLayers with an associated feature layer, BuildingComponentSublayer with an associated feature layer,\r\n                GeoJSONLayer, CSVLayer, OGCFeatureLayer, and/or table(s). If using a locator with a geocoding service, the\r\n                findAddressCandidates operation is used, whereas queries are used on feature layers.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Search.html\">\r\n                    ArcGIS\r\n                    JS API\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnSearchSelectResultEvent","TypeName":"Microsoft.AspNetCore.Components.EventCallback<dymaptic.GeoBlazor.Core.Objects.SearchResult>","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.OnSearchSelectResultEvent\">\r\n            <summary>\r\n                A delegate for a handler of search selection result events.\r\n                Function must take in a <see cref=\"T:dymaptic.GeoBlazor.Core.Objects.SearchResult\" /> parameter, and return a <see cref=\"T:System.Threading.Tasks.Task\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnSearchSelectResultEvent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::dymaptic.GeoBlazor.Core.Objects.SearchResult>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Position","TypeName":"dymaptic.GeoBlazor.Core.Components.OverlayPosition?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\">\r\n            <summary>\r\n                The position of the widget in relation to the map view.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Position","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Components.OverlayPosition?"}},{"Kind":"Components.Component","Name":"ContainerId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\">\r\n            <summary>\r\n                The id of an external HTML Element (div). If provided, the widget will be placed inside that element, instead of on\r\n                the map.\r\n            </summary>\r\n            <remarks>\r\n                Either <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Position\" /> or <see cref=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.ContainerId\" /> should be set, but not both.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ContainerId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.Icon\">\r\n            <summary>\r\n                Icon which represents the widget. It is typically used when the widget is controlled by another one (e.g. in the Expand widget).\r\n                Default Value:null\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Icon","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"WidgetId","TypeName":"System.String","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.Widgets.Widget.WidgetId\">\r\n            <summary>\r\n                The unique ID assigned to the widget when the widget is created. If not set by the developer, it will default to the container ID, or if that is not present then it will be automatically generated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"WidgetId","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget","Common.TypeNameIdentifier":"SearchWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":695636409,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SearchWidget"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.ChildContent","Common.TypeNameIdentifier":"SearchWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1403507120,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Components.Widgets.SearchWidget.ChildContent","Common.TypeNameIdentifier":"SearchWidget","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Components.Widgets","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-276853226,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Objects.HighlightOptions","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Objects.HighlightOptions\">\r\n            <summary>\r\n                Options for configuring the highlight. Use the highlight method on the appropriate LayerView to highlight a\r\n                feature. With version 4.19, highlighting a feature influences the shadow of the feature as well. By default, the\r\n                shadow of the highlighted feature is displayed in a darker shade.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-views-MapView.html#highlightOptions\">\r\n                    ArcGIS\r\n                    JS API (LayerView)\r\n                </a>\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#highlightOptions\">\r\n                    ArcGIS\r\n                    JS API (SceneView)\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HighlightOptions"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"dymaptic.GeoBlazor.Core.Objects.MapColor","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Objects.HighlightOptions.Color\">\r\n            <summary>\r\n                The color of the highlight fill.\r\n                DefaultValue: #00ffff\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.MapColor"}},{"Kind":"Components.Component","Name":"HaloColor","TypeName":"dymaptic.GeoBlazor.Core.Objects.MapColor","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Objects.HighlightOptions.HaloColor\">\r\n            <summary>\r\n                The color of the halo surrounding the highlight. If no haloColor is provided, then the halo will be colored with\r\n                the specified color.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HaloColor","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.MapColor"}},{"Kind":"Components.Component","Name":"HaloOpacity","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Objects.HighlightOptions.HaloOpacity\">\r\n            <summary>\r\n                The opacity of the highlight halo. This will be multiplied with any opacity specified in color.\r\n                DefaultValue: 1\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HaloOpacity","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"FillOpacity","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Objects.HighlightOptions.FillOpacity\">\r\n            <summary>\r\n                The opacity of the fill (area within the halo). This will be multiplied with the opacity specified in color.\r\n                DefaultValue: 0.25\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FillOpacity","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"ShadowColor","TypeName":"dymaptic.GeoBlazor.Core.Objects.MapColor","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Objects.HighlightOptions.ShadowColor\">\r\n            <summary>\r\n                The color of the highlighted feature's shadow.\r\n                DefaultValue: #000000\r\n            </summary>\r\n            <remarks>\r\n                Only supported on 3D scene views.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ShadowColor","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.MapColor"}},{"Kind":"Components.Component","Name":"ShadowOpacity","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Objects.HighlightOptions.ShadowOpacity\">\r\n            <summary>\r\n                The opacity of the highlighted feature's shadow. This will be multiplied with the opacity specified in shadowColor.\r\n                DefaultValue: 0.4\r\n            </summary>\r\n            <remarks>\r\n                Only supported on 3D scene views.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ShadowOpacity","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"ShadowDifference","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Objects.HighlightOptions.ShadowDifference\">\r\n            <summary>\r\n                Defines the intensity of the shadow area obtained by overlapping the shadow of the highlighted feature and the\r\n                shadow of other objects in the scene. The value ranges from 0 to 1. A value of 0 highlights the overlapping shadow\r\n                areas in the same way (no difference). Setting it to 1 highlights only the difference between the shadow areas, so\r\n                the overlapping shadow areas aren't highlighted at all.\r\n                DefaultValue: 0.375\r\n            </summary>\r\n            <remarks>\r\n                Only supported on 3D scene views.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ShadowDifference","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Objects.HighlightOptions","Common.TypeNameIdentifier":"HighlightOptions","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Objects","Runtime.Name":"Components.IComponent"}},{"HashCode":431581107,"Kind":"Components.Component","Name":"dymaptic.GeoBlazor.Core.Objects.HighlightOptions","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"T:dymaptic.GeoBlazor.Core.Objects.HighlightOptions\">\r\n            <summary>\r\n                Options for configuring the highlight. Use the highlight method on the appropriate LayerView to highlight a\r\n                feature. With version 4.19, highlighting a feature influences the shadow of the feature as well. By default, the\r\n                shadow of the highlighted feature is displayed in a darker shade.\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-views-MapView.html#highlightOptions\">\r\n                    ArcGIS\r\n                    JS API (LayerView)\r\n                </a>\r\n                <a target=\"_blank\" href=\"https://developers.arcgis.com/javascript/latest/api-reference/esri-views-SceneView.html#highlightOptions\">\r\n                    ArcGIS\r\n                    JS API (SceneView)\r\n                </a>\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"dymaptic.GeoBlazor.Core.Objects.HighlightOptions"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"dymaptic.GeoBlazor.Core.Objects.MapColor","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Objects.HighlightOptions.Color\">\r\n            <summary>\r\n                The color of the highlight fill.\r\n                DefaultValue: #00ffff\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Color","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.MapColor"}},{"Kind":"Components.Component","Name":"HaloColor","TypeName":"dymaptic.GeoBlazor.Core.Objects.MapColor","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Objects.HighlightOptions.HaloColor\">\r\n            <summary>\r\n                The color of the halo surrounding the highlight. If no haloColor is provided, then the halo will be colored with\r\n                the specified color.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HaloColor","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.MapColor"}},{"Kind":"Components.Component","Name":"HaloOpacity","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Objects.HighlightOptions.HaloOpacity\">\r\n            <summary>\r\n                The opacity of the highlight halo. This will be multiplied with any opacity specified in color.\r\n                DefaultValue: 1\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HaloOpacity","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"FillOpacity","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Objects.HighlightOptions.FillOpacity\">\r\n            <summary>\r\n                The opacity of the fill (area within the halo). This will be multiplied with the opacity specified in color.\r\n                DefaultValue: 0.25\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FillOpacity","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"ShadowColor","TypeName":"dymaptic.GeoBlazor.Core.Objects.MapColor","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Objects.HighlightOptions.ShadowColor\">\r\n            <summary>\r\n                The color of the highlighted feature's shadow.\r\n                DefaultValue: #000000\r\n            </summary>\r\n            <remarks>\r\n                Only supported on 3D scene views.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ShadowColor","Common.GloballyQualifiedTypeName":"global::dymaptic.GeoBlazor.Core.Objects.MapColor"}},{"Kind":"Components.Component","Name":"ShadowOpacity","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Objects.HighlightOptions.ShadowOpacity\">\r\n            <summary>\r\n                The opacity of the highlighted feature's shadow. This will be multiplied with the opacity specified in shadowColor.\r\n                DefaultValue: 0.4\r\n            </summary>\r\n            <remarks>\r\n                Only supported on 3D scene views.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ShadowOpacity","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"ShadowDifference","TypeName":"System.Double?","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Objects.HighlightOptions.ShadowDifference\">\r\n            <summary>\r\n                Defines the intensity of the shadow area obtained by overlapping the shadow of the highlighted feature and the\r\n                shadow of other objects in the scene. The value ranges from 0 to 1. A value of 0 highlights the overlapping shadow\r\n                areas in the same way (no difference). Setting it to 1 highlights only the difference between the shadow areas, so\r\n                the overlapping shadow areas aren't highlighted at all.\r\n                DefaultValue: 0.375\r\n            </summary>\r\n            <remarks>\r\n                Only supported on 3D scene views.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"ShadowDifference","Common.GloballyQualifiedTypeName":"global::System.Double?"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Objects.HighlightOptions","Common.TypeNameIdentifier":"HighlightOptions","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Objects","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1680390592,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Objects.HighlightOptions.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HighlightOptions"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Objects.HighlightOptions.ChildContent","Common.TypeNameIdentifier":"HighlightOptions","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Objects","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1026857437,"Kind":"Components.ChildContent","Name":"dymaptic.GeoBlazor.Core.Objects.HighlightOptions.ChildContent","AssemblyName":"dymaptic.GeoBlazor.Core","Documentation":"<member name=\"P:dymaptic.GeoBlazor.Core.Components.MapComponent.ChildContent\">\r\n            <summary>\r\n                ChildContent defines the ability to add other components within this component in the razor syntax.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"dymaptic.GeoBlazor.Core.Objects.HighlightOptions"}],"Metadata":{"Common.TypeName":"dymaptic.GeoBlazor.Core.Objects.HighlightOptions.ChildContent","Common.TypeNameIdentifier":"HighlightOptions","Common.TypeNamespace":"dymaptic.GeoBlazor.Core.Objects","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1335718411,"Kind":"Components.Component","Name":"VehicleSpeedControlSystem.Client.Pages.DetailsPage","AssemblyName":"VehicleSpeedControlSystem.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DetailsPage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"id","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"id","Common.GloballyQualifiedTypeName":"global::System.Int32"}}],"Metadata":{"Common.TypeName":"VehicleSpeedControlSystem.Client.Pages.DetailsPage","Common.TypeNameIdentifier":"DetailsPage","Common.TypeNamespace":"VehicleSpeedControlSystem.Client.Pages","Runtime.Name":"Components.IComponent"}},{"HashCode":-1341012172,"Kind":"Components.Component","Name":"VehicleSpeedControlSystem.Client.Pages.DetailsPage","AssemblyName":"VehicleSpeedControlSystem.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"VehicleSpeedControlSystem.Client.Pages.DetailsPage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"id","TypeName":"System.Int32","Metadata":{"Common.PropertyName":"id","Common.GloballyQualifiedTypeName":"global::System.Int32"}}],"Metadata":{"Common.TypeName":"VehicleSpeedControlSystem.Client.Pages.DetailsPage","Common.TypeNameIdentifier":"DetailsPage","Common.TypeNamespace":"VehicleSpeedControlSystem.Client.Pages","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1609130656,"Kind":"Components.Component","Name":"VehicleSpeedControlSystem.Client.Pages.Index","AssemblyName":"VehicleSpeedControlSystem.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Index"}],"Metadata":{"Common.TypeName":"VehicleSpeedControlSystem.Client.Pages.Index","Common.TypeNameIdentifier":"Index","Common.TypeNamespace":"VehicleSpeedControlSystem.Client.Pages","Runtime.Name":"Components.IComponent"}},{"HashCode":-633634330,"Kind":"Components.Component","Name":"VehicleSpeedControlSystem.Client.Pages.Index","AssemblyName":"VehicleSpeedControlSystem.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"VehicleSpeedControlSystem.Client.Pages.Index"}],"Metadata":{"Common.TypeName":"VehicleSpeedControlSystem.Client.Pages.Index","Common.TypeNameIdentifier":"Index","Common.TypeNamespace":"VehicleSpeedControlSystem.Client.Pages","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-780393199,"Kind":"Components.Component","Name":"VehicleSpeedControlSystem.Client.Pages.CounterReserve","AssemblyName":"VehicleSpeedControlSystem.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CounterReserve"}],"Metadata":{"Common.TypeName":"VehicleSpeedControlSystem.Client.Pages.CounterReserve","Common.TypeNameIdentifier":"CounterReserve","Common.TypeNamespace":"VehicleSpeedControlSystem.Client.Pages","Runtime.Name":"Components.IComponent"}},{"HashCode":2058627307,"Kind":"Components.Component","Name":"VehicleSpeedControlSystem.Client.Pages.CounterReserve","AssemblyName":"VehicleSpeedControlSystem.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"VehicleSpeedControlSystem.Client.Pages.CounterReserve"}],"Metadata":{"Common.TypeName":"VehicleSpeedControlSystem.Client.Pages.CounterReserve","Common.TypeNameIdentifier":"CounterReserve","Common.TypeNamespace":"VehicleSpeedControlSystem.Client.Pages","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-682981396,"Kind":"Components.Component","Name":"VehicleSpeedControlSystem.Client.Pages.Counter","AssemblyName":"VehicleSpeedControlSystem.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Counter"}],"Metadata":{"Common.TypeName":"VehicleSpeedControlSystem.Client.Pages.Counter","Common.TypeNameIdentifier":"Counter","Common.TypeNamespace":"VehicleSpeedControlSystem.Client.Pages","Runtime.Name":"Components.IComponent"}},{"HashCode":588631634,"Kind":"Components.Component","Name":"VehicleSpeedControlSystem.Client.Pages.Counter","AssemblyName":"VehicleSpeedControlSystem.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"VehicleSpeedControlSystem.Client.Pages.Counter"}],"Metadata":{"Common.TypeName":"VehicleSpeedControlSystem.Client.Pages.Counter","Common.TypeNameIdentifier":"Counter","Common.TypeNamespace":"VehicleSpeedControlSystem.Client.Pages","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-667590372,"Kind":"Components.Component","Name":"VehicleSpeedControlSystem.Client.Pages.IndeXr","AssemblyName":"VehicleSpeedControlSystem.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"IndeXr"}],"Metadata":{"Common.TypeName":"VehicleSpeedControlSystem.Client.Pages.IndeXr","Common.TypeNameIdentifier":"IndeXr","Common.TypeNamespace":"VehicleSpeedControlSystem.Client.Pages","Runtime.Name":"Components.IComponent"}},{"HashCode":944229529,"Kind":"Components.Component","Name":"VehicleSpeedControlSystem.Client.Pages.IndeXr","AssemblyName":"VehicleSpeedControlSystem.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"VehicleSpeedControlSystem.Client.Pages.IndeXr"}],"Metadata":{"Common.TypeName":"VehicleSpeedControlSystem.Client.Pages.IndeXr","Common.TypeNameIdentifier":"IndeXr","Common.TypeNamespace":"VehicleSpeedControlSystem.Client.Pages","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1583809399,"Kind":"Components.Component","Name":"VehicleSpeedControlSystem.Client.Pages.Notifications","AssemblyName":"VehicleSpeedControlSystem.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Notifications"}],"Metadata":{"Common.TypeName":"VehicleSpeedControlSystem.Client.Pages.Notifications","Common.TypeNameIdentifier":"Notifications","Common.TypeNamespace":"VehicleSpeedControlSystem.Client.Pages","Runtime.Name":"Components.IComponent"}},{"HashCode":-1329531969,"Kind":"Components.Component","Name":"VehicleSpeedControlSystem.Client.Pages.Notifications","AssemblyName":"VehicleSpeedControlSystem.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"VehicleSpeedControlSystem.Client.Pages.Notifications"}],"Metadata":{"Common.TypeName":"VehicleSpeedControlSystem.Client.Pages.Notifications","Common.TypeNameIdentifier":"Notifications","Common.TypeNamespace":"VehicleSpeedControlSystem.Client.Pages","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1587253777,"Kind":"Components.Component","Name":"VehicleSpeedControlSystem.Client.Pages.FetchData","AssemblyName":"VehicleSpeedControlSystem.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FetchData"}],"Metadata":{"Common.TypeName":"VehicleSpeedControlSystem.Client.Pages.FetchData","Common.TypeNameIdentifier":"FetchData","Common.TypeNamespace":"VehicleSpeedControlSystem.Client.Pages","Runtime.Name":"Components.IComponent"}},{"HashCode":467737005,"Kind":"Components.Component","Name":"VehicleSpeedControlSystem.Client.Pages.FetchData","AssemblyName":"VehicleSpeedControlSystem.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"VehicleSpeedControlSystem.Client.Pages.FetchData"}],"Metadata":{"Common.TypeName":"VehicleSpeedControlSystem.Client.Pages.FetchData","Common.TypeNameIdentifier":"FetchData","Common.TypeNamespace":"VehicleSpeedControlSystem.Client.Pages","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1288813764,"Kind":"Components.Component","Name":"VehicleSpeedControlSystem.Client.Pages.SignUp","AssemblyName":"VehicleSpeedControlSystem.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SignUp"}],"Metadata":{"Common.TypeName":"VehicleSpeedControlSystem.Client.Pages.SignUp","Common.TypeNameIdentifier":"SignUp","Common.TypeNamespace":"VehicleSpeedControlSystem.Client.Pages","Runtime.Name":"Components.IComponent"}},{"HashCode":1651276015,"Kind":"Components.Component","Name":"VehicleSpeedControlSystem.Client.Pages.SignUp","AssemblyName":"VehicleSpeedControlSystem.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"VehicleSpeedControlSystem.Client.Pages.SignUp"}],"Metadata":{"Common.TypeName":"VehicleSpeedControlSystem.Client.Pages.SignUp","Common.TypeNameIdentifier":"SignUp","Common.TypeNamespace":"VehicleSpeedControlSystem.Client.Pages","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1325235266,"Kind":"Components.Component","Name":"VehicleSpeedControlSystem.Client.Pages.SignIn","AssemblyName":"VehicleSpeedControlSystem.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SignIn"}],"Metadata":{"Common.TypeName":"VehicleSpeedControlSystem.Client.Pages.SignIn","Common.TypeNameIdentifier":"SignIn","Common.TypeNamespace":"VehicleSpeedControlSystem.Client.Pages","Runtime.Name":"Components.IComponent"}},{"HashCode":1486506918,"Kind":"Components.Component","Name":"VehicleSpeedControlSystem.Client.Pages.SignIn","AssemblyName":"VehicleSpeedControlSystem.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"VehicleSpeedControlSystem.Client.Pages.SignIn"}],"Metadata":{"Common.TypeName":"VehicleSpeedControlSystem.Client.Pages.SignIn","Common.TypeNameIdentifier":"SignIn","Common.TypeNamespace":"VehicleSpeedControlSystem.Client.Pages","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":49206180,"Kind":"Components.Component","Name":"VehicleSpeedControlSystem.Client.Shared.SurveyPrompt","AssemblyName":"VehicleSpeedControlSystem.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SurveyPrompt"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"VehicleSpeedControlSystem.Client.Shared.SurveyPrompt","Common.TypeNameIdentifier":"SurveyPrompt","Common.TypeNamespace":"VehicleSpeedControlSystem.Client.Shared","Runtime.Name":"Components.IComponent"}},{"HashCode":-330980165,"Kind":"Components.Component","Name":"VehicleSpeedControlSystem.Client.Shared.SurveyPrompt","AssemblyName":"VehicleSpeedControlSystem.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"VehicleSpeedControlSystem.Client.Shared.SurveyPrompt"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.PropertyName":"Title","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"VehicleSpeedControlSystem.Client.Shared.SurveyPrompt","Common.TypeNameIdentifier":"SurveyPrompt","Common.TypeNamespace":"VehicleSpeedControlSystem.Client.Shared","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-420094725,"Kind":"Components.Component","Name":"VehicleSpeedControlSystem.Client.Shared.MainLayout","AssemblyName":"VehicleSpeedControlSystem.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MainLayout"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Body","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Body","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"VehicleSpeedControlSystem.Client.Shared.MainLayout","Common.TypeNameIdentifier":"MainLayout","Common.TypeNamespace":"VehicleSpeedControlSystem.Client.Shared","Runtime.Name":"Components.IComponent"}},{"HashCode":-300035942,"Kind":"Components.Component","Name":"VehicleSpeedControlSystem.Client.Shared.MainLayout","AssemblyName":"VehicleSpeedControlSystem.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"VehicleSpeedControlSystem.Client.Shared.MainLayout"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Body","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Body","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"VehicleSpeedControlSystem.Client.Shared.MainLayout","Common.TypeNameIdentifier":"MainLayout","Common.TypeNamespace":"VehicleSpeedControlSystem.Client.Shared","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":23096172,"Kind":"Components.ChildContent","Name":"VehicleSpeedControlSystem.Client.Shared.MainLayout.Body","AssemblyName":"VehicleSpeedControlSystem.Client","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Body","ParentTag":"MainLayout"}],"Metadata":{"Common.TypeName":"VehicleSpeedControlSystem.Client.Shared.MainLayout.Body","Common.TypeNameIdentifier":"MainLayout","Common.TypeNamespace":"VehicleSpeedControlSystem.Client.Shared","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1953604045,"Kind":"Components.ChildContent","Name":"VehicleSpeedControlSystem.Client.Shared.MainLayout.Body","AssemblyName":"VehicleSpeedControlSystem.Client","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Body","ParentTag":"VehicleSpeedControlSystem.Client.Shared.MainLayout"}],"Metadata":{"Common.TypeName":"VehicleSpeedControlSystem.Client.Shared.MainLayout.Body","Common.TypeNameIdentifier":"MainLayout","Common.TypeNamespace":"VehicleSpeedControlSystem.Client.Shared","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1086438677,"Kind":"Components.Component","Name":"VehicleSpeedControlSystem.Client.Shared.NavMenu","AssemblyName":"VehicleSpeedControlSystem.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NavMenu"}],"Metadata":{"Common.TypeName":"VehicleSpeedControlSystem.Client.Shared.NavMenu","Common.TypeNameIdentifier":"NavMenu","Common.TypeNamespace":"VehicleSpeedControlSystem.Client.Shared","Runtime.Name":"Components.IComponent"}},{"HashCode":910374647,"Kind":"Components.Component","Name":"VehicleSpeedControlSystem.Client.Shared.NavMenu","AssemblyName":"VehicleSpeedControlSystem.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"VehicleSpeedControlSystem.Client.Shared.NavMenu"}],"Metadata":{"Common.TypeName":"VehicleSpeedControlSystem.Client.Shared.NavMenu","Common.TypeNameIdentifier":"NavMenu","Common.TypeNamespace":"VehicleSpeedControlSystem.Client.Shared","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-175249890,"Kind":"Components.Component","Name":"VehicleSpeedControlSystem.Client.App","AssemblyName":"VehicleSpeedControlSystem.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"App"}],"Metadata":{"Common.TypeName":"VehicleSpeedControlSystem.Client.App","Common.TypeNameIdentifier":"App","Common.TypeNamespace":"VehicleSpeedControlSystem.Client","Runtime.Name":"Components.IComponent"}},{"HashCode":1675258495,"Kind":"Components.Component","Name":"VehicleSpeedControlSystem.Client.App","AssemblyName":"VehicleSpeedControlSystem.Client","CaseSensitive":true,"TagMatchingRules":[{"TagName":"VehicleSpeedControlSystem.Client.App"}],"Metadata":{"Common.TypeName":"VehicleSpeedControlSystem.Client.App","Common.TypeNameIdentifier":"App","Common.TypeNamespace":"VehicleSpeedControlSystem.Client","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":600300187,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","AssemblyName":"Microsoft.AspNetCore.Components.Forms","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator\">\r\n            <summary>\r\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DataAnnotationsValidator"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","Common.TypeNameIdentifier":"DataAnnotationsValidator","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent"}},{"HashCode":-450791174,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","AssemblyName":"Microsoft.AspNetCore.Components.Forms","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator\">\r\n            <summary>\r\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","Common.TypeNameIdentifier":"DataAnnotationsValidator","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":112112172,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.CascadingValue`1\">\r\n            <summary>\r\n            A component that provides a cascading value to all descendant components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CascadingValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.CascadingValue<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\r\n            <summary>\r\n            The content to which the value should be provided.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\">\r\n            <summary>\r\n            The value to be provided.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Name\">\r\n             <summary>\r\n             Optionally gives a name to the provided value. Descendant components\r\n             will be able to receive the value by specifying this name.\r\n            \r\n             If no name is specified, then descendant components will receive the\r\n             value based the type of value they are requesting.\r\n             </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IsFixed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.IsFixed\">\r\n            <summary>\r\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\r\n            performance optimization that allows the framework to skip setting up\r\n            change notifications. Set this flag only if you will not change\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsFixed","Common.GloballyQualifiedTypeName":"global::System.Boolean"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","Common.TypeNameIdentifier":"CascadingValue","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":-2006353105,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.CascadingValue`1\">\r\n            <summary>\r\n            A component that provides a cascading value to all descendant components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.CascadingValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.CascadingValue<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\r\n            <summary>\r\n            The content to which the value should be provided.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\">\r\n            <summary>\r\n            The value to be provided.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Name\">\r\n             <summary>\r\n             Optionally gives a name to the provided value. Descendant components\r\n             will be able to receive the value by specifying this name.\r\n            \r\n             If no name is specified, then descendant components will receive the\r\n             value based the type of value they are requesting.\r\n             </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"IsFixed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.IsFixed\">\r\n            <summary>\r\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\r\n            performance optimization that allows the framework to skip setting up\r\n            change notifications. Set this flag only if you will not change\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"IsFixed","Common.GloballyQualifiedTypeName":"global::System.Boolean"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","Common.TypeNameIdentifier":"CascadingValue","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-889459120,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\r\n            <summary>\r\n            The content to which the value should be provided.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CascadingValue"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","Common.TypeNameIdentifier":"CascadingValue","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1095368138,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\r\n            <summary>\r\n            The content to which the value should be provided.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.CascadingValue"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","Common.TypeNameIdentifier":"CascadingValue","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":816413986,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.DynamicComponent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.DynamicComponent\">\r\n            <summary>\r\n            A component that renders another component dynamically according to its\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DynamicComponent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"System.Type","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\">\r\n            <summary>\r\n            Gets or sets the type of the component to be rendered. The supplied type must\r\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::System.Type"}},{"Kind":"Components.Component","Name":"Parameters","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Parameters\">\r\n            <summary>\r\n            Gets or sets a dictionary of parameters to be passed to the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Parameters","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.DynamicComponent","Common.TypeNameIdentifier":"DynamicComponent","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Runtime.Name":"Components.IComponent"}},{"HashCode":1299178003,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.DynamicComponent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.DynamicComponent\">\r\n            <summary>\r\n            A component that renders another component dynamically according to its\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.DynamicComponent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"System.Type","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\">\r\n            <summary>\r\n            Gets or sets the type of the component to be rendered. The supplied type must\r\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::System.Type"}},{"Kind":"Components.Component","Name":"Parameters","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Parameters\">\r\n            <summary>\r\n            Gets or sets a dictionary of parameters to be passed to the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Parameters","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.DynamicComponent","Common.TypeNameIdentifier":"DynamicComponent","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":443104849,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.LayoutView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.LayoutView\">\r\n            <summary>\r\n            Displays the specified content inside the specified layout and any further\r\n            nested layouts.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LayoutView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to display.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Layout","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.Layout\">\r\n            <summary>\r\n            Gets or sets the type of the layout in which to display the content.\r\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Layout","Common.GloballyQualifiedTypeName":"global::System.Type"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView","Common.TypeNameIdentifier":"LayoutView","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Runtime.Name":"Components.IComponent"}},{"HashCode":2117237878,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.LayoutView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.LayoutView\">\r\n            <summary>\r\n            Displays the specified content inside the specified layout and any further\r\n            nested layouts.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.LayoutView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to display.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Layout","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.Layout\">\r\n            <summary>\r\n            Gets or sets the type of the layout in which to display the content.\r\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Layout","Common.GloballyQualifiedTypeName":"global::System.Type"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView","Common.TypeNameIdentifier":"LayoutView","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1467088548,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to display.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"LayoutView"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","Common.TypeNameIdentifier":"LayoutView","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-752363043,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to display.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.LayoutView"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","Common.TypeNameIdentifier":"LayoutView","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1158605894,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.RouteView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.RouteView\">\r\n            <summary>\r\n            Displays the specified page component, rendering it inside its layout\r\n            and any further nested layouts.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"RouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This determines the page that will be\r\n            displayed and the parameter values that will be supplied to the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RouteData","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\r\n            <summary>\r\n            Gets or sets the type of a layout to be used if the page does not\r\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\r\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DefaultLayout","Common.GloballyQualifiedTypeName":"global::System.Type"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.RouteView","Common.TypeNameIdentifier":"RouteView","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Runtime.Name":"Components.IComponent"}},{"HashCode":-1575418860,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.RouteView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.RouteView\">\r\n            <summary>\r\n            Displays the specified page component, rendering it inside its layout\r\n            and any further nested layouts.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.RouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This determines the page that will be\r\n            displayed and the parameter values that will be supplied to the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RouteData","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\r\n            <summary>\r\n            Gets or sets the type of a layout to be used if the page does not\r\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\r\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DefaultLayout","Common.GloballyQualifiedTypeName":"global::System.Type"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.RouteView","Common.TypeNameIdentifier":"RouteView","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":251306581,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.Router","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.Router\">\r\n            <summary>\r\n            A component that supplies route data corresponding to the current navigation state.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Router"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AppAssembly","TypeName":"System.Reflection.Assembly","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AppAssembly\">\r\n            <summary>\r\n            Gets or sets the assembly that should be searched for components matching the URI.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AppAssembly","Common.GloballyQualifiedTypeName":"global::System.Reflection.Assembly"}},{"Kind":"Components.Component","Name":"AdditionalAssemblies","TypeName":"System.Collections.Generic.IEnumerable<System.Reflection.Assembly>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AdditionalAssemblies\">\r\n            <summary>\r\n            Gets or sets a collection of additional assemblies that should be searched for components\r\n            that can match URIs.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAssemblies","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.Reflection.Assembly>"}},{"Kind":"Components.Component","Name":"NotFound","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\r\n            <summary>\r\n            Gets or sets the content to display when no match is found for the requested route.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NotFound","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Found","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\r\n            <summary>\r\n            Gets or sets the content to display when a match is found for the requested route.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Found","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.RouteData>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Navigating","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\r\n            <summary>\r\n            Get or sets the content to display when asynchronous navigation is in progress.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Navigating","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnNavigateAsync","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.OnNavigateAsync\">\r\n            <summary>\r\n            Gets or sets a handler that should be called before navigating to a new page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnNavigateAsync","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Routing.NavigationContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PreferExactMatches","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.PreferExactMatches\">\r\n            <summary>\r\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\r\n            over wildcards.\r\n            <para>This property is obsolete and configuring it does nothing.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PreferExactMatches","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router","Common.TypeNameIdentifier":"Router","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Runtime.Name":"Components.IComponent"}},{"HashCode":-1275292906,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.Router","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.Router\">\r\n            <summary>\r\n            A component that supplies route data corresponding to the current navigation state.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.Router"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AppAssembly","TypeName":"System.Reflection.Assembly","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AppAssembly\">\r\n            <summary>\r\n            Gets or sets the assembly that should be searched for components matching the URI.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AppAssembly","Common.GloballyQualifiedTypeName":"global::System.Reflection.Assembly"}},{"Kind":"Components.Component","Name":"AdditionalAssemblies","TypeName":"System.Collections.Generic.IEnumerable<System.Reflection.Assembly>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AdditionalAssemblies\">\r\n            <summary>\r\n            Gets or sets a collection of additional assemblies that should be searched for components\r\n            that can match URIs.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAssemblies","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.Reflection.Assembly>"}},{"Kind":"Components.Component","Name":"NotFound","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\r\n            <summary>\r\n            Gets or sets the content to display when no match is found for the requested route.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"NotFound","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Found","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\r\n            <summary>\r\n            Gets or sets the content to display when a match is found for the requested route.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Found","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.RouteData>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Navigating","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\r\n            <summary>\r\n            Get or sets the content to display when asynchronous navigation is in progress.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Navigating","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnNavigateAsync","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.OnNavigateAsync\">\r\n            <summary>\r\n            Gets or sets a handler that should be called before navigating to a new page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnNavigateAsync","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Routing.NavigationContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PreferExactMatches","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.PreferExactMatches\">\r\n            <summary>\r\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\r\n            over wildcards.\r\n            <para>This property is obsolete and configuring it does nothing.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PreferExactMatches","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router","Common.TypeNameIdentifier":"Router","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1082338626,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\r\n            <summary>\r\n            Gets or sets the content to display when no match is found for the requested route.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotFound","ParentTag":"Router"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","Common.TypeNameIdentifier":"Router","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-555496463,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\r\n            <summary>\r\n            Gets or sets the content to display when no match is found for the requested route.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotFound","ParentTag":"Microsoft.AspNetCore.Components.Routing.Router"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","Common.TypeNameIdentifier":"Router","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":23965824,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Found","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\r\n            <summary>\r\n            Gets or sets the content to display when a match is found for the requested route.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Found","ParentTag":"Router"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Found"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Found","Common.TypeNameIdentifier":"Router","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-523621034,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Found","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\r\n            <summary>\r\n            Gets or sets the content to display when a match is found for the requested route.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Found","ParentTag":"Microsoft.AspNetCore.Components.Routing.Router"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Found"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Found","Common.TypeNameIdentifier":"Router","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1637319012,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\r\n            <summary>\r\n            Get or sets the content to display when asynchronous navigation is in progress.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Navigating","ParentTag":"Router"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","Common.TypeNameIdentifier":"Router","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":-1087896449,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\r\n            <summary>\r\n            Get or sets the content to display when asynchronous navigation is in progress.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Navigating","ParentTag":"Microsoft.AspNetCore.Components.Routing.Router"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","Common.TypeNameIdentifier":"Router","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1976229550,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.EditForm","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\">\r\n            <summary>\r\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditForm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\">\r\n            <summary>\r\n            Supplies the edit context explicitly. If using this parameter, do not\r\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\r\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EditContext","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.EditContext"}},{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\">\r\n            <summary>\r\n            Specifies the top-level model object for the form. An edit context will\r\n            be constructed for this model. If using this parameter, do not also supply\r\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Model","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\r\n            <summary>\r\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnSubmit\">\r\n             <summary>\r\n             A callback that will be invoked when the form is submitted.\r\n            \r\n             If using this parameter, you are responsible for triggering any validation\r\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\r\n             </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnSubmit","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnValidSubmit\">\r\n            <summary>\r\n            A callback that will be invoked when the form is submitted and the\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnValidSubmit","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInvalidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnInvalidSubmit\">\r\n            <summary>\r\n            A callback that will be invoked when the form is submitted and the\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnInvalidSubmit","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm","Common.TypeNameIdentifier":"EditForm","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent"}},{"HashCode":191090756,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.EditForm","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\">\r\n            <summary>\r\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.EditForm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\">\r\n            <summary>\r\n            Supplies the edit context explicitly. If using this parameter, do not\r\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\r\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"EditContext","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.EditContext"}},{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\">\r\n            <summary>\r\n            Specifies the top-level model object for the form. An edit context will\r\n            be constructed for this model. If using this parameter, do not also supply\r\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Model","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\r\n            <summary>\r\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnSubmit\">\r\n             <summary>\r\n             A callback that will be invoked when the form is submitted.\r\n            \r\n             If using this parameter, you are responsible for triggering any validation\r\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\r\n             </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnSubmit","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnValidSubmit\">\r\n            <summary>\r\n            A callback that will be invoked when the form is submitted and the\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnValidSubmit","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInvalidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnInvalidSubmit\">\r\n            <summary>\r\n            A callback that will be invoked when the form is submitted and the\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnInvalidSubmit","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm","Common.TypeNameIdentifier":"EditForm","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":421419917,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\r\n            <summary>\r\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"EditForm"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ChildContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","Common.TypeNameIdentifier":"EditForm","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":226510491,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\r\n            <summary>\r\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Forms.EditForm"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ChildContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","Common.TypeNameIdentifier":"EditForm","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-2065312680,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputCheckbox\">\r\n            <summary>\r\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputCheckbox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Boolean>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.Boolean>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Common.TypeNameIdentifier":"InputCheckbox","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent"}},{"HashCode":-350659821,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputCheckbox\">\r\n            <summary>\r\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.Boolean"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Boolean>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.Boolean>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Common.TypeNameIdentifier":"InputCheckbox","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1258965888,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputDate`1\">\r\n            <summary>\r\n            An input component for editing date values.\r\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputDate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.InputDate<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Microsoft.AspNetCore.Components.Forms.InputDateType","IsEnum":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.Type\">\r\n            <summary>\r\n            Gets or sets the type of HTML input to be rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.InputDateType"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.ParsingErrorMessage\">\r\n            <summary>\r\n            Gets or sets the error message used when displaying an a parsing error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ParsingErrorMessage","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Common.TypeNameIdentifier":"InputDate","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":1020867059,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputDate`1\">\r\n            <summary>\r\n            An input component for editing date values.\r\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputDate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.InputDate<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Microsoft.AspNetCore.Components.Forms.InputDateType","IsEnum":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.Type\">\r\n            <summary>\r\n            Gets or sets the type of HTML input to be rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Type","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.InputDateType"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.ParsingErrorMessage\">\r\n            <summary>\r\n            Gets or sets the error message used when displaying an a parsing error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ParsingErrorMessage","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Common.TypeNameIdentifier":"InputDate","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1382592640,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputFile","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputFile\">\r\n            <summary>\r\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputFile"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.OnChange\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnChange","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputFile","Common.TypeNameIdentifier":"InputFile","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent"}},{"HashCode":959106530,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputFile","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputFile\">\r\n            <summary>\r\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputFile"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.OnChange\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnChange","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputFile","Common.TypeNameIdentifier":"InputFile","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1394710171,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputNumber`1\">\r\n            <summary>\r\n            An input component for editing numeric values.\r\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputNumber"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputNumber`1.ParsingErrorMessage\">\r\n            <summary>\r\n            Gets or sets the error message used when displaying an a parsing error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ParsingErrorMessage","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Common.TypeNameIdentifier":"InputNumber","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":2117387803,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputNumber`1\">\r\n            <summary>\r\n            An input component for editing numeric values.\r\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputNumber"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputNumber`1.ParsingErrorMessage\">\r\n            <summary>\r\n            Gets or sets the error message used when displaying an a parsing error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ParsingErrorMessage","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Common.TypeNameIdentifier":"InputNumber","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1831010680,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\">\r\n            <summary>\r\n            An input component used for selecting a value from a group of choices.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputRadio"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of this input.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Name\">\r\n            <summary>\r\n            Gets or sets the name of the parent input radio group.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","Common.TypeNameIdentifier":"InputRadio","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":748163635,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\">\r\n            <summary>\r\n            An input component used for selecting a value from a group of choices.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadio"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of this input.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Name\">\r\n            <summary>\r\n            Gets or sets the name of the parent input radio group.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","Common.TypeNameIdentifier":"InputRadio","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":553938885,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\">\r\n            <summary>\r\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputRadioGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.Name\">\r\n            <summary>\r\n            Gets or sets the name of the group.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Common.TypeNameIdentifier":"InputRadioGroup","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":-240189885,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\">\r\n            <summary>\r\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.Name\">\r\n            <summary>\r\n            Gets or sets the name of the group.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Common.TypeNameIdentifier":"InputRadioGroup","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-329149034,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"InputRadioGroup"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","Common.TypeNameIdentifier":"InputRadioGroup","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":2051182940,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","Common.TypeNameIdentifier":"InputRadioGroup","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":508662150,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputSelect`1\">\r\n            <summary>\r\n            A dropdown selection component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the select element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Common.TypeNameIdentifier":"InputSelect","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":92454017,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputSelect`1\">\r\n            <summary>\r\n            A dropdown selection component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the select element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Common.TypeNameIdentifier":"InputSelect","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-761095015,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the select element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"InputSelect"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","Common.TypeNameIdentifier":"InputSelect","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":85331601,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the select element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Forms.InputSelect"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","Common.TypeNameIdentifier":"InputSelect","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1127546831,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputText\">\r\n            <summary>\r\n            An input component for editing <see cref=\"T:System.String\" /> values.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Common.TypeNameIdentifier":"InputText","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent"}},{"HashCode":1412090241,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputText\">\r\n            <summary>\r\n            An input component for editing <see cref=\"T:System.String\" /> values.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Common.TypeNameIdentifier":"InputText","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1984013923,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputTextArea\">\r\n            <summary>\r\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputTextArea"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Common.TypeNameIdentifier":"InputTextArea","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent"}},{"HashCode":-283689260,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputTextArea\">\r\n            <summary>\r\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputTextArea"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.PropertyName":"Value","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueChanged","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ValueExpression","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"DisplayName","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Common.TypeNameIdentifier":"InputTextArea","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-245684300,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1\">\r\n            <summary>\r\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValidationMessage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.For\">\r\n            <summary>\r\n            Specifies the field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","Common.TypeNameIdentifier":"ValidationMessage","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":1528528215,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1\">\r\n            <summary>\r\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.ValidationMessage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TValue","Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>"]},"Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.For\">\r\n            <summary>\r\n            Specifies the field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For","Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","Common.TypeNameIdentifier":"ValidationMessage","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1959080929,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationSummary\">\r\n            <summary>\r\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValidationSummary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.Model\">\r\n            <summary>\r\n            Gets or sets the model to produce the list of validation messages for.\r\n            When specified, this lists all errors that are associated with the model instance.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Model","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","Common.TypeNameIdentifier":"ValidationSummary","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent"}},{"HashCode":1490654527,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationSummary\">\r\n            <summary>\r\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.ValidationSummary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.Model\">\r\n            <summary>\r\n            Gets or sets the model to produce the list of validation messages for.\r\n            When specified, this lists all errors that are associated with the model instance.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Model","Common.GloballyQualifiedTypeName":"global::System.Object"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","Common.TypeNameIdentifier":"ValidationSummary","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":2012395568,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate\">\r\n            <summary>\r\n            After navigating from one page to another, sets focus to an element\r\n            matching a CSS selector. This can be used to build an accessible\r\n            navigation system compatible with screen readers.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FocusOnNavigate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This can be obtained from an enclosing\r\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RouteData","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData"}},{"Kind":"Components.Component","Name":"Selector","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.Selector\">\r\n            <summary>\r\n            Gets or sets a CSS selector describing the element to be focused after\r\n            navigation between pages.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Selector","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","Common.TypeNameIdentifier":"FocusOnNavigate","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Runtime.Name":"Components.IComponent"}},{"HashCode":-1759321182,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate\">\r\n            <summary>\r\n            After navigating from one page to another, sets focus to an element\r\n            matching a CSS selector. This can be used to build an accessible\r\n            navigation system compatible with screen readers.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This can be obtained from an enclosing\r\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RouteData","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData"}},{"Kind":"Components.Component","Name":"Selector","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.Selector\">\r\n            <summary>\r\n            Gets or sets a CSS selector describing the element to be focused after\r\n            navigation between pages.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Selector","Common.GloballyQualifiedTypeName":"global::System.String"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","Common.TypeNameIdentifier":"FocusOnNavigate","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1839350250,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.NavigationLock","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.NavigationLock\">\r\n            <summary>\r\n            A component that can be used to intercept navigation events. \r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NavigationLock"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnBeforeInternalNavigation","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.LocationChangingContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavigationLock.OnBeforeInternalNavigation\">\r\n            <summary>\r\n            Gets or sets a callback to be invoked when an internal navigation event occurs.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnBeforeInternalNavigation","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Routing.LocationChangingContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ConfirmExternalNavigation","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavigationLock.ConfirmExternalNavigation\">\r\n            <summary>\r\n            Gets or sets whether a browser dialog should prompt the user to either confirm or cancel\r\n            external navigations.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ConfirmExternalNavigation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavigationLock","Common.TypeNameIdentifier":"NavigationLock","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Runtime.Name":"Components.IComponent"}},{"HashCode":-1619313231,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.NavigationLock","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.NavigationLock\">\r\n            <summary>\r\n            A component that can be used to intercept navigation events. \r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.NavigationLock"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnBeforeInternalNavigation","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.LocationChangingContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavigationLock.OnBeforeInternalNavigation\">\r\n            <summary>\r\n            Gets or sets a callback to be invoked when an internal navigation event occurs.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OnBeforeInternalNavigation","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Routing.LocationChangingContext>","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ConfirmExternalNavigation","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavigationLock.ConfirmExternalNavigation\">\r\n            <summary>\r\n            Gets or sets whether a browser dialog should prompt the user to either confirm or cancel\r\n            external navigations.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ConfirmExternalNavigation","Common.GloballyQualifiedTypeName":"global::System.Boolean"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavigationLock","Common.TypeNameIdentifier":"NavigationLock","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1380850759,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.NavLink","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\">\r\n            <summary>\r\n            A component that renders an anchor tag, automatically toggling its 'active'\r\n            class based on whether its 'href' matches the current URI.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NavLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ActiveClass","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ActiveClass\">\r\n            <summary>\r\n            Gets or sets the CSS class name applied to the NavLink when the\r\n            current route matches the NavLink href.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ActiveClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be added to the generated\r\n            <c>a</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch","IsEnum":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.Match\">\r\n            <summary>\r\n            Gets or sets a value representing the URL matching behavior.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Match","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink","Common.TypeNameIdentifier":"NavLink","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Runtime.Name":"Components.IComponent"}},{"HashCode":642792029,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.NavLink","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\">\r\n            <summary>\r\n            A component that renders an anchor tag, automatically toggling its 'active'\r\n            class based on whether its 'href' matches the current URI.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.NavLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ActiveClass","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ActiveClass\">\r\n            <summary>\r\n            Gets or sets the CSS class name applied to the NavLink when the\r\n            current route matches the NavLink href.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ActiveClass","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be added to the generated\r\n            <c>a</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"AdditionalAttributes","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch","IsEnum":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.Match\">\r\n            <summary>\r\n            Gets or sets a value representing the URL matching behavior.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Match","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink","Common.TypeNameIdentifier":"NavLink","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1920388826,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"NavLink"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","Common.TypeNameIdentifier":"NavLink","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":792199978,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Routing.NavLink"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","Common.TypeNameIdentifier":"NavLink","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-230489831,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\">\r\n            <summary>\r\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeadContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent","Common.TypeNameIdentifier":"HeadContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.IComponent"}},{"HashCode":128167545,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\">\r\n            <summary>\r\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.HeadContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent","Common.TypeNameIdentifier":"HeadContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":1689854822,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HeadContent"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","Common.TypeNameIdentifier":"HeadContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":779040282,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.HeadContent"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","Common.TypeNameIdentifier":"HeadContent","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1266783900,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadOutlet","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\">\r\n            <summary>\r\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\" /> components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeadOutlet"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadOutlet","Common.TypeNameIdentifier":"HeadOutlet","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.IComponent"}},{"HashCode":550896023,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadOutlet","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\">\r\n            <summary>\r\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\" /> components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.HeadOutlet"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadOutlet","Common.TypeNameIdentifier":"HeadOutlet","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-886198252,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.PageTitle","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.PageTitle\">\r\n            <summary>\r\n            Enables rendering an HTML <c>&lt;title&gt;</c> to a <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PageTitle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered as the document title.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle","Common.TypeNameIdentifier":"PageTitle","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.IComponent"}},{"HashCode":-583895305,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.PageTitle","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.PageTitle\">\r\n            <summary>\r\n            Enables rendering an HTML <c>&lt;title&gt;</c> to a <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.PageTitle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered as the document title.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle","Common.TypeNameIdentifier":"PageTitle","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":886568814,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered as the document title.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PageTitle"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","Common.TypeNameIdentifier":"PageTitle","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":206831603,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered as the document title.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.PageTitle"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","Common.TypeNameIdentifier":"PageTitle","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1532515791,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.ErrorBoundary\">\r\n            <summary>\r\n            Captures errors thrown from its child content.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\r\n            <summary>\r\n            The content to be displayed when there is no error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ErrorContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Exception>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\r\n            <summary>\r\n            The content to be displayed when there is an error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Exception>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"MaximumErrorCount","TypeName":"System.Int32","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.MaximumErrorCount\">\r\n            <summary>\r\n            The maximum number of errors that can be handled. If more errors are received,\r\n            they will be treated as fatal. Calling <see cref=\"M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover\" /> resets the count.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaximumErrorCount","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","Common.TypeNameIdentifier":"ErrorBoundary","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.IComponent"}},{"HashCode":748353587,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.ErrorBoundary\">\r\n            <summary>\r\n            Captures errors thrown from its child content.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\r\n            <summary>\r\n            The content to be displayed when there is no error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ChildContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ErrorContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Exception>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\r\n            <summary>\r\n            The content to be displayed when there is an error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ErrorContent","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Exception>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"MaximumErrorCount","TypeName":"System.Int32","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.MaximumErrorCount\">\r\n            <summary>\r\n            The maximum number of errors that can be handled. If more errors are received,\r\n            they will be treated as fatal. Calling <see cref=\"M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover\" /> resets the count.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"MaximumErrorCount","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","Common.TypeNameIdentifier":"ErrorBoundary","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-1582794375,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\r\n            <summary>\r\n            The content to be displayed when there is no error.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ErrorBoundary"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","Common.TypeNameIdentifier":"ErrorBoundary","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1559812008,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\r\n            <summary>\r\n            The content to be displayed when there is no error.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.ErrorBoundary"}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","Common.TypeNameIdentifier":"ErrorBoundary","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":873037395,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\r\n            <summary>\r\n            The content to be displayed when there is an error.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ErrorContent","ParentTag":"ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ErrorContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","Common.TypeNameIdentifier":"ErrorBoundary","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":103384670,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\r\n            <summary>\r\n            The content to be displayed when there is an error.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ErrorContent","ParentTag":"Microsoft.AspNetCore.Components.Web.ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ErrorContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","Common.TypeNameIdentifier":"ErrorBoundary","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1577534888,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1\">\r\n            <summary>\r\n            Provides functionality for rendering a virtualized list of items.\r\n            </summary>\r\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TItem","Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>"]},"Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Common.PropertyName":"ChildContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Common.PropertyName":"ItemContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\r\n            <summary>\r\n            Gets or sets the template for items that have not yet been loaded in memory.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemSize","TypeName":"System.Single","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemSize\">\r\n            <summary>\r\n            Gets the size of each item in pixels. Defaults to 50px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ItemSize","Common.GloballyQualifiedTypeName":"global::System.Single"}},{"Kind":"Components.Component","Name":"ItemsProvider","TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemsProvider\">\r\n            <summary>\r\n            Gets or sets the function providing items to the list.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>","Common.PropertyName":"ItemsProvider","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.ICollection<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Items\">\r\n            <summary>\r\n            Gets or sets the fixed item source.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Items","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.ICollection<TItem>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OverscanCount","TypeName":"System.Int32","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.OverscanCount\">\r\n            <summary>\r\n            Gets or sets a value that determines how many additional items will be rendered\r\n            before and after the visible region. This help to reduce the frequency of rendering\r\n            during scrolling. However, higher values mean that more elements will be present\r\n            in the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OverscanCount","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"SpacerElement","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.SpacerElement\">\r\n             <summary>\r\n             Gets or sets the tag name of the HTML element that will be used as the virtualization spacer.\r\n             One such element will be rendered before the visible items, and one more after them, using\r\n             an explicit \"height\" style to control the scroll range.\r\n            \r\n             The default value is \"div\". If you are placing the <see cref=\"T:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1\" /> instance inside\r\n             an element that requires a specific child tag name, consider setting that here. For example when\r\n             rendering inside a \"tbody\", consider setting <see cref=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.SpacerElement\" /> to the value \"tr\".\r\n             </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SpacerElement","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","Common.TypeNameIdentifier":"Virtualize","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.GenericTyped":"True","Runtime.Name":"Components.IComponent"}},{"HashCode":950796927,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1\">\r\n            <summary>\r\n            Provides functionality for rendering a virtualized list of items.\r\n            </summary>\r\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":{"Id":13,"Args":["TItem","Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>"]},"Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Common.PropertyName":"ChildContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Common.PropertyName":"ItemContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\r\n            <summary>\r\n            Gets or sets the template for items that have not yet been loaded in memory.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Placeholder","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemSize","TypeName":"System.Single","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemSize\">\r\n            <summary>\r\n            Gets the size of each item in pixels. Defaults to 50px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ItemSize","Common.GloballyQualifiedTypeName":"global::System.Single"}},{"Kind":"Components.Component","Name":"ItemsProvider","TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemsProvider\">\r\n            <summary>\r\n            Gets or sets the function providing items to the list.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>","Common.PropertyName":"ItemsProvider","Components.DelegateSignature":"True","Components.GenericTyped":"True","Components.IsDelegateAwaitableResult":"True"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.ICollection<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Items\">\r\n            <summary>\r\n            Gets or sets the fixed item source.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Items","Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.ICollection<TItem>","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OverscanCount","TypeName":"System.Int32","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.OverscanCount\">\r\n            <summary>\r\n            Gets or sets a value that determines how many additional items will be rendered\r\n            before and after the visible region. This help to reduce the frequency of rendering\r\n            during scrolling. However, higher values mean that more elements will be present\r\n            in the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"OverscanCount","Common.GloballyQualifiedTypeName":"global::System.Int32"}},{"Kind":"Components.Component","Name":"SpacerElement","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.SpacerElement\">\r\n             <summary>\r\n             Gets or sets the tag name of the HTML element that will be used as the virtualization spacer.\r\n             One such element will be rendered before the visible items, and one more after them, using\r\n             an explicit \"height\" style to control the scroll range.\r\n            \r\n             The default value is \"div\". If you are placing the <see cref=\"T:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1\" /> instance inside\r\n             an element that requires a specific child tag name, consider setting that here. For example when\r\n             rendering inside a \"tbody\", consider setting <see cref=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.SpacerElement\" /> to the value \"tr\".\r\n             </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SpacerElement","Common.GloballyQualifiedTypeName":"global::System.String"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":{"Id":12},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","Common.TypeNameIdentifier":"Virtualize","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent"}},{"HashCode":-514167269,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ChildContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","Common.TypeNameIdentifier":"Virtualize","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":215248206,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ChildContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","Common.TypeNameIdentifier":"Virtualize","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1800818476,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemContent","ParentTag":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ItemContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","Common.TypeNameIdentifier":"Virtualize","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":2112976254,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemContent","ParentTag":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["ItemContent"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","Common.TypeNameIdentifier":"Virtualize","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1807588775,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\r\n            <summary>\r\n            Gets or sets the template for items that have not yet been loaded in memory.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Placeholder","ParentTag":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Placeholder"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","Common.TypeNameIdentifier":"Virtualize","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.IsSpecialKind":"Components.ChildContent","Runtime.Name":"Components.None"}},{"HashCode":1762038415,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\r\n            <summary>\r\n            Gets or sets the template for items that have not yet been loaded in memory.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Placeholder","ParentTag":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":{"Id":11,"Args":["Placeholder"]},"Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","Common.TypeNameIdentifier":"Virtualize","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-727369005,"Kind":"Components.EventHandler","Name":"onfocus","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onfocus","Microsoft.AspNetCore.Components.Web.FocusEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfocus","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocus:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocus:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":{"Id":14,"Args":["@onfocus","Microsoft.AspNetCore.Components.Web.FocusEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfocus"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onfocus"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onfocus"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1653693213,"Kind":"Components.EventHandler","Name":"onblur","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onblur","Microsoft.AspNetCore.Components.Web.FocusEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onblur","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onblur:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onblur:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onblur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":{"Id":14,"Args":["@onblur","Microsoft.AspNetCore.Components.Web.FocusEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onblur"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onblur"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onblur"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":778364182,"Kind":"Components.EventHandler","Name":"onfocusin","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onfocusin","Microsoft.AspNetCore.Components.Web.FocusEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfocusin","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusin:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusin:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfocusin","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":{"Id":14,"Args":["@onfocusin","Microsoft.AspNetCore.Components.Web.FocusEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfocusin"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onfocusin"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onfocusin"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-517322429,"Kind":"Components.EventHandler","Name":"onfocusout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onfocusout","Microsoft.AspNetCore.Components.Web.FocusEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfocusout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfocusout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":{"Id":14,"Args":["@onfocusout","Microsoft.AspNetCore.Components.Web.FocusEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfocusout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onfocusout"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onfocusout"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-936888182,"Kind":"Components.EventHandler","Name":"onmouseover","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onmouseover","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseover","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseover:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseover:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":{"Id":14,"Args":["@onmouseover","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseover"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onmouseover"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onmouseover"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-2029089480,"Kind":"Components.EventHandler","Name":"onmouseout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onmouseout","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":{"Id":14,"Args":["@onmouseout","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onmouseout"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onmouseout"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1210532359,"Kind":"Components.EventHandler","Name":"onmouseleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onmouseleave","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":{"Id":14,"Args":["@onmouseleave","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onmouseleave"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onmouseleave"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1179986610,"Kind":"Components.EventHandler","Name":"onmouseenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onmouseenter","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":{"Id":14,"Args":["@onmouseenter","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onmouseenter"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onmouseenter"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-392837186,"Kind":"Components.EventHandler","Name":"onmousemove","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onmousemove","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmousemove","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousemove:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousemove:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmousemove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":{"Id":14,"Args":["@onmousemove","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmousemove"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onmousemove"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onmousemove"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1242953820,"Kind":"Components.EventHandler","Name":"onmousedown","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onmousedown","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmousedown","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousedown:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousedown:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmousedown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":{"Id":14,"Args":["@onmousedown","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmousedown"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onmousedown"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onmousedown"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1914736575,"Kind":"Components.EventHandler","Name":"onmouseup","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onmouseup","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseup","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseup:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseup:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseup","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":{"Id":14,"Args":["@onmouseup","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseup"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onmouseup"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onmouseup"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1331383727,"Kind":"Components.EventHandler","Name":"onclick","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onclick","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onclick","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onclick:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onclick:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onclick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":{"Id":14,"Args":["@onclick","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onclick"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onclick"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onclick"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":536006733,"Kind":"Components.EventHandler","Name":"ondblclick","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ondblclick","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondblclick","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondblclick:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondblclick:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondblclick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":{"Id":14,"Args":["@ondblclick","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondblclick"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ondblclick"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ondblclick"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-366485848,"Kind":"Components.EventHandler","Name":"onwheel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onwheel","Microsoft.AspNetCore.Components.Web.WheelEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onwheel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwheel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwheel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onwheel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>","Documentation":{"Id":14,"Args":["@onwheel","Microsoft.AspNetCore.Components.Web.WheelEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onwheel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onwheel"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onwheel"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.WheelEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-160573819,"Kind":"Components.EventHandler","Name":"onmousewheel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onmousewheel","Microsoft.AspNetCore.Components.Web.WheelEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmousewheel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousewheel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousewheel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmousewheel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>","Documentation":{"Id":14,"Args":["@onmousewheel","Microsoft.AspNetCore.Components.Web.WheelEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmousewheel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onmousewheel"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onmousewheel"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.WheelEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1538066542,"Kind":"Components.EventHandler","Name":"oncontextmenu","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@oncontextmenu","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncontextmenu","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncontextmenu:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncontextmenu:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncontextmenu","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":{"Id":14,"Args":["@oncontextmenu","Microsoft.AspNetCore.Components.Web.MouseEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncontextmenu"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@oncontextmenu"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@oncontextmenu"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1705523732,"Kind":"Components.EventHandler","Name":"ondrag","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ondrag","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondrag","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrag:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrag:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondrag","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":{"Id":14,"Args":["@ondrag","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondrag"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ondrag"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ondrag"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1290771231,"Kind":"Components.EventHandler","Name":"ondragend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ondragend","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":{"Id":14,"Args":["@ondragend","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ondragend"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ondragend"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-337171814,"Kind":"Components.EventHandler","Name":"ondragenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ondragenter","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":{"Id":14,"Args":["@ondragenter","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ondragenter"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ondragenter"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1201691127,"Kind":"Components.EventHandler","Name":"ondragleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ondragleave","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":{"Id":14,"Args":["@ondragleave","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ondragleave"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ondragleave"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-519835019,"Kind":"Components.EventHandler","Name":"ondragover","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ondragover","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragover","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragover:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragover:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":{"Id":14,"Args":["@ondragover","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragover"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ondragover"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ondragover"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-202939013,"Kind":"Components.EventHandler","Name":"ondragstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ondragstart","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":{"Id":14,"Args":["@ondragstart","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ondragstart"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ondragstart"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":364403475,"Kind":"Components.EventHandler","Name":"ondrop","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ondrop","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondrop","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrop:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrop:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondrop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":{"Id":14,"Args":["@ondrop","Microsoft.AspNetCore.Components.Web.DragEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondrop"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ondrop"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ondrop"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1929574430,"Kind":"Components.EventHandler","Name":"onkeydown","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onkeydown","Microsoft.AspNetCore.Components.Web.KeyboardEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onkeydown","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeydown:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeydown:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onkeydown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":{"Id":14,"Args":["@onkeydown","Microsoft.AspNetCore.Components.Web.KeyboardEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onkeydown"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onkeydown"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onkeydown"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.KeyboardEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":110467606,"Kind":"Components.EventHandler","Name":"onkeyup","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onkeyup","Microsoft.AspNetCore.Components.Web.KeyboardEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onkeyup","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeyup:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeyup:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onkeyup","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":{"Id":14,"Args":["@onkeyup","Microsoft.AspNetCore.Components.Web.KeyboardEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onkeyup"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onkeyup"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onkeyup"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.KeyboardEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":582697943,"Kind":"Components.EventHandler","Name":"onkeypress","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onkeypress","Microsoft.AspNetCore.Components.Web.KeyboardEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onkeypress","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeypress:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeypress:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onkeypress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":{"Id":14,"Args":["@onkeypress","Microsoft.AspNetCore.Components.Web.KeyboardEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onkeypress"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onkeypress"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onkeypress"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.KeyboardEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-365542076,"Kind":"Components.EventHandler","Name":"onchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onchange","Microsoft.AspNetCore.Components.ChangeEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":{"Id":14,"Args":["@onchange","Microsoft.AspNetCore.Components.ChangeEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onchange"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onchange"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.ChangeEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":794708869,"Kind":"Components.EventHandler","Name":"oninput","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@oninput","Microsoft.AspNetCore.Components.ChangeEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oninput","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninput:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninput:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oninput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":{"Id":14,"Args":["@oninput","Microsoft.AspNetCore.Components.ChangeEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oninput"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@oninput"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@oninput"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.ChangeEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1603213185,"Kind":"Components.EventHandler","Name":"oninvalid","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@oninvalid","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oninvalid","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninvalid:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninvalid:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oninvalid","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@oninvalid","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oninvalid"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@oninvalid"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@oninvalid"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":836426675,"Kind":"Components.EventHandler","Name":"onreset","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onreset","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onreset","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreset:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreset:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onreset","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onreset","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onreset"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onreset"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onreset"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1485878008,"Kind":"Components.EventHandler","Name":"onselect","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onselect","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onselect","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselect:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselect:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onselect","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onselect","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onselect"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onselect"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onselect"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1818652440,"Kind":"Components.EventHandler","Name":"onselectstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onselectstart","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onselectstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onselectstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onselectstart","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onselectstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onselectstart"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onselectstart"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-758644927,"Kind":"Components.EventHandler","Name":"onselectionchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onselectionchange","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onselectionchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectionchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectionchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onselectionchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onselectionchange","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onselectionchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onselectionchange"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onselectionchange"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1853778474,"Kind":"Components.EventHandler","Name":"onsubmit","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onsubmit","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onsubmit","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsubmit:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsubmit:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onsubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onsubmit","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onsubmit"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onsubmit"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onsubmit"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1478138657,"Kind":"Components.EventHandler","Name":"onbeforecopy","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onbeforecopy","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforecopy","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecopy:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecopy:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforecopy","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onbeforecopy","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforecopy"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onbeforecopy"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onbeforecopy"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1954762307,"Kind":"Components.EventHandler","Name":"onbeforecut","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onbeforecut","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforecut","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecut:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecut:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforecut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onbeforecut","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforecut"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onbeforecut"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onbeforecut"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":68240426,"Kind":"Components.EventHandler","Name":"onbeforepaste","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onbeforepaste","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforepaste","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforepaste:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforepaste:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforepaste","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onbeforepaste","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforepaste"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onbeforepaste"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onbeforepaste"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1936131299,"Kind":"Components.EventHandler","Name":"oncopy","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@oncopy","Microsoft.AspNetCore.Components.Web.ClipboardEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncopy","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncopy:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncopy:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncopy","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":{"Id":14,"Args":["@oncopy","Microsoft.AspNetCore.Components.Web.ClipboardEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncopy"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@oncopy"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@oncopy"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ClipboardEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-651207526,"Kind":"Components.EventHandler","Name":"oncut","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@oncut","Microsoft.AspNetCore.Components.Web.ClipboardEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncut","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncut:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncut:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":{"Id":14,"Args":["@oncut","Microsoft.AspNetCore.Components.Web.ClipboardEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncut"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@oncut"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@oncut"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ClipboardEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1089411740,"Kind":"Components.EventHandler","Name":"onpaste","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpaste","Microsoft.AspNetCore.Components.Web.ClipboardEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpaste","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpaste:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpaste:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpaste","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":{"Id":14,"Args":["@onpaste","Microsoft.AspNetCore.Components.Web.ClipboardEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpaste"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpaste"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpaste"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ClipboardEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-679554340,"Kind":"Components.EventHandler","Name":"ontouchcancel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ontouchcancel","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchcancel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchcancel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchcancel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchcancel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":{"Id":14,"Args":["@ontouchcancel","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchcancel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ontouchcancel"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ontouchcancel"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":943674983,"Kind":"Components.EventHandler","Name":"ontouchend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ontouchend","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":{"Id":14,"Args":["@ontouchend","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ontouchend"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ontouchend"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":257218252,"Kind":"Components.EventHandler","Name":"ontouchmove","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ontouchmove","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchmove","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchmove:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchmove:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchmove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":{"Id":14,"Args":["@ontouchmove","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchmove"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ontouchmove"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ontouchmove"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":2036593677,"Kind":"Components.EventHandler","Name":"ontouchstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ontouchstart","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":{"Id":14,"Args":["@ontouchstart","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ontouchstart"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ontouchstart"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1103757234,"Kind":"Components.EventHandler","Name":"ontouchenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ontouchenter","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":{"Id":14,"Args":["@ontouchenter","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ontouchenter"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ontouchenter"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-530801748,"Kind":"Components.EventHandler","Name":"ontouchleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ontouchleave","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":{"Id":14,"Args":["@ontouchleave","Microsoft.AspNetCore.Components.Web.TouchEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ontouchleave"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ontouchleave"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1577454197,"Kind":"Components.EventHandler","Name":"ongotpointercapture","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ongotpointercapture","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ongotpointercapture","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ongotpointercapture:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ongotpointercapture:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ongotpointercapture","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":{"Id":14,"Args":["@ongotpointercapture","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ongotpointercapture"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ongotpointercapture"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ongotpointercapture"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-2091195272,"Kind":"Components.EventHandler","Name":"onlostpointercapture","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onlostpointercapture","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onlostpointercapture","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onlostpointercapture:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onlostpointercapture:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onlostpointercapture","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":{"Id":14,"Args":["@onlostpointercapture","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onlostpointercapture"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onlostpointercapture"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onlostpointercapture"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-2045316255,"Kind":"Components.EventHandler","Name":"onpointercancel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpointercancel","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointercancel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointercancel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointercancel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointercancel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":{"Id":14,"Args":["@onpointercancel","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointercancel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpointercancel"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpointercancel"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1382687032,"Kind":"Components.EventHandler","Name":"onpointerdown","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpointerdown","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerdown","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerdown:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerdown:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerdown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":{"Id":14,"Args":["@onpointerdown","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerdown"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpointerdown"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpointerdown"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":101473625,"Kind":"Components.EventHandler","Name":"onpointerenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpointerenter","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":{"Id":14,"Args":["@onpointerenter","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpointerenter"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpointerenter"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1542789096,"Kind":"Components.EventHandler","Name":"onpointerleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpointerleave","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":{"Id":14,"Args":["@onpointerleave","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpointerleave"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpointerleave"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1970868744,"Kind":"Components.EventHandler","Name":"onpointermove","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpointermove","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointermove","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointermove:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointermove:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointermove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":{"Id":14,"Args":["@onpointermove","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointermove"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpointermove"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpointermove"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1496598645,"Kind":"Components.EventHandler","Name":"onpointerout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpointerout","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":{"Id":14,"Args":["@onpointerout","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpointerout"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpointerout"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-80282310,"Kind":"Components.EventHandler","Name":"onpointerover","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpointerover","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerover","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerover:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerover:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":{"Id":14,"Args":["@onpointerover","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerover"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpointerover"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpointerover"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1553651268,"Kind":"Components.EventHandler","Name":"onpointerup","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpointerup","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerup","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerup:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerup:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerup","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":{"Id":14,"Args":["@onpointerup","Microsoft.AspNetCore.Components.Web.PointerEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerup"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpointerup"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpointerup"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-536806730,"Kind":"Components.EventHandler","Name":"oncanplay","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@oncanplay","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncanplay","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplay:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplay:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncanplay","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@oncanplay","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncanplay"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@oncanplay"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@oncanplay"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":908414765,"Kind":"Components.EventHandler","Name":"oncanplaythrough","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@oncanplaythrough","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncanplaythrough","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplaythrough:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplaythrough:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncanplaythrough","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@oncanplaythrough","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncanplaythrough"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@oncanplaythrough"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@oncanplaythrough"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-129079417,"Kind":"Components.EventHandler","Name":"oncuechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@oncuechange","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncuechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncuechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncuechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncuechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@oncuechange","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncuechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@oncuechange"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@oncuechange"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":790156873,"Kind":"Components.EventHandler","Name":"ondurationchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ondurationchange","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondurationchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondurationchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondurationchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondurationchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@ondurationchange","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondurationchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ondurationchange"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ondurationchange"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":476976603,"Kind":"Components.EventHandler","Name":"onemptied","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onemptied","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onemptied","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onemptied:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onemptied:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onemptied","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onemptied","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onemptied"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onemptied"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onemptied"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1456525810,"Kind":"Components.EventHandler","Name":"onpause","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpause","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpause","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpause:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpause:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpause","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onpause","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpause"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpause"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpause"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":177399041,"Kind":"Components.EventHandler","Name":"onplay","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onplay","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onplay","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplay:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplay:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onplay","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onplay","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onplay"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onplay"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onplay"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1969236839,"Kind":"Components.EventHandler","Name":"onplaying","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onplaying","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onplaying","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplaying:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplaying:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onplaying","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onplaying","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onplaying"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onplaying"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onplaying"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-738595097,"Kind":"Components.EventHandler","Name":"onratechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onratechange","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onratechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onratechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onratechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onratechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onratechange","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onratechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onratechange"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onratechange"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-955105252,"Kind":"Components.EventHandler","Name":"onseeked","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onseeked","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onseeked","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeked:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeked:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onseeked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onseeked","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onseeked"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onseeked"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onseeked"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-187878019,"Kind":"Components.EventHandler","Name":"onseeking","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onseeking","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onseeking","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeking:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeking:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onseeking","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onseeking","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onseeking"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onseeking"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onseeking"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1115466435,"Kind":"Components.EventHandler","Name":"onstalled","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onstalled","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onstalled","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstalled:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstalled:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onstalled","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onstalled","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onstalled"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onstalled"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onstalled"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":14718909,"Kind":"Components.EventHandler","Name":"onstop","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onstop","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onstop","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstop:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstop:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onstop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onstop","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onstop"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onstop"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onstop"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1798193991,"Kind":"Components.EventHandler","Name":"onsuspend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onsuspend","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onsuspend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsuspend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsuspend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onsuspend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onsuspend","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onsuspend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onsuspend"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onsuspend"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-83598432,"Kind":"Components.EventHandler","Name":"ontimeupdate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ontimeupdate","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontimeupdate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeupdate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeupdate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontimeupdate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@ontimeupdate","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontimeupdate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ontimeupdate"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ontimeupdate"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-546088352,"Kind":"Components.EventHandler","Name":"onvolumechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onvolumechange","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onvolumechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onvolumechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onvolumechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onvolumechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onvolumechange","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onvolumechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onvolumechange"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onvolumechange"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-147712496,"Kind":"Components.EventHandler","Name":"onwaiting","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onwaiting","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onwaiting","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwaiting:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwaiting:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onwaiting","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onwaiting","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onwaiting"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onwaiting"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onwaiting"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1877397063,"Kind":"Components.EventHandler","Name":"onloadstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onloadstart","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":{"Id":14,"Args":["@onloadstart","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onloadstart"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onloadstart"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-93156651,"Kind":"Components.EventHandler","Name":"ontimeout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ontimeout","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontimeout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontimeout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":{"Id":14,"Args":["@ontimeout","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontimeout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ontimeout"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ontimeout"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1530156502,"Kind":"Components.EventHandler","Name":"onabort","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onabort","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onabort","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onabort:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onabort:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onabort","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":{"Id":14,"Args":["@onabort","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onabort"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onabort"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onabort"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":841018137,"Kind":"Components.EventHandler","Name":"onload","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onload","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onload","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onload:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onload:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onload","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":{"Id":14,"Args":["@onload","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onload"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onload"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onload"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1646323413,"Kind":"Components.EventHandler","Name":"onloadend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onloadend","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":{"Id":14,"Args":["@onloadend","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onloadend"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onloadend"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1805914554,"Kind":"Components.EventHandler","Name":"onprogress","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onprogress","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onprogress","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onprogress:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onprogress:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onprogress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":{"Id":14,"Args":["@onprogress","Microsoft.AspNetCore.Components.Web.ProgressEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onprogress"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onprogress"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onprogress"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1414019166,"Kind":"Components.EventHandler","Name":"onerror","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onerror","Microsoft.AspNetCore.Components.Web.ErrorEventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onerror","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onerror:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onerror:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onerror","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ErrorEventArgs>","Documentation":{"Id":14,"Args":["@onerror","Microsoft.AspNetCore.Components.Web.ErrorEventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onerror"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onerror"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onerror"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ErrorEventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1684286683,"Kind":"Components.EventHandler","Name":"onactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onactivate","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onactivate","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onactivate"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onactivate"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1877185334,"Kind":"Components.EventHandler","Name":"onbeforeactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onbeforeactivate","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforeactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforeactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforeactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforeactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onbeforeactivate","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforeactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onbeforeactivate"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onbeforeactivate"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":1604892650,"Kind":"Components.EventHandler","Name":"onbeforedeactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onbeforedeactivate","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforedeactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforedeactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforedeactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforedeactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onbeforedeactivate","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforedeactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onbeforedeactivate"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onbeforedeactivate"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":455610339,"Kind":"Components.EventHandler","Name":"ondeactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ondeactivate","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondeactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondeactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondeactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondeactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@ondeactivate","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondeactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ondeactivate"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ondeactivate"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":484371961,"Kind":"Components.EventHandler","Name":"onended","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onended","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onended","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onended:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onended:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onended","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onended","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onended"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onended"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onended"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":2000527016,"Kind":"Components.EventHandler","Name":"onfullscreenchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onfullscreenchange","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfullscreenchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfullscreenchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onfullscreenchange","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfullscreenchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onfullscreenchange"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onfullscreenchange"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1453016704,"Kind":"Components.EventHandler","Name":"onfullscreenerror","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onfullscreenerror","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfullscreenerror","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenerror:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenerror:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfullscreenerror","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onfullscreenerror","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfullscreenerror"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onfullscreenerror"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onfullscreenerror"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1255032978,"Kind":"Components.EventHandler","Name":"onloadeddata","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onloadeddata","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadeddata","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadeddata:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadeddata:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadeddata","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onloadeddata","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadeddata"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onloadeddata"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onloadeddata"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":166892546,"Kind":"Components.EventHandler","Name":"onloadedmetadata","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onloadedmetadata","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadedmetadata","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadedmetadata:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadedmetadata:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadedmetadata","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onloadedmetadata","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadedmetadata"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onloadedmetadata"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onloadedmetadata"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1619086998,"Kind":"Components.EventHandler","Name":"onpointerlockchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpointerlockchange","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerlockchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerlockchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onpointerlockchange","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerlockchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpointerlockchange"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpointerlockchange"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":183890027,"Kind":"Components.EventHandler","Name":"onpointerlockerror","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onpointerlockerror","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerlockerror","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockerror:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockerror:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerlockerror","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onpointerlockerror","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerlockerror"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onpointerlockerror"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onpointerlockerror"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-960344618,"Kind":"Components.EventHandler","Name":"onreadystatechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onreadystatechange","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onreadystatechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreadystatechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreadystatechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onreadystatechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onreadystatechange","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onreadystatechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onreadystatechange"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onreadystatechange"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":823383190,"Kind":"Components.EventHandler","Name":"onscroll","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@onscroll","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onscroll","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onscroll:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onscroll:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onscroll","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@onscroll","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onscroll"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@onscroll"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@onscroll"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":830423229,"Kind":"Components.EventHandler","Name":"ontoggle","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":14,"Args":["@ontoggle","System.EventArgs"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontoggle","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontoggle:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontoggle:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontoggle","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":{"Id":14,"Args":["@ontoggle","System.EventArgs"]},"Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontoggle"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":{"Id":15,"Args":["@ontoggle"]},"Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":{"Id":16,"Args":["@ontoggle"]},"Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Common.TypeNameIdentifier":"EventHandlers","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.EventHandler.EventArgs":"System.EventArgs","Components.IsSpecialKind":"Components.EventHandler","Runtime.Name":"Components.None"}},{"HashCode":-1658677927,"Kind":"Components.Splat","Name":"Attributes","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":19},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@attributes","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Splat","Name":"@attributes","TypeName":"System.Object","Documentation":{"Id":19},"Metadata":{"Common.PropertyName":"Attributes","Common.DirectiveAttribute":"True"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Attributes","Components.IsSpecialKind":"Components.Splat","Runtime.Name":"Components.None"}},{"HashCode":87783689,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":0},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@bind-","NameComparison":1,"Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-...","TypeName":"System.Collections.Generic.Dictionary<string, object>","IndexerNamePrefix":"@bind-","IndexerTypeName":"System.Object","Documentation":{"Id":0},"Metadata":{"Common.PropertyName":"Bind","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":2},"Metadata":{"Common.PropertyName":"Format"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":1,"Args":["@bind-..."]},"Metadata":{"Common.PropertyName":"Event"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Bind","Common.TypeNameIdentifier":"Bind","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.Bind.Fallback":"True","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":1886728056,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":null,"Components.Bind.IsInvariantCulture":"False","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-751468505,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":null,"Components.Bind.IsInvariantCulture":"False","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-897546298,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["checked","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"checkbox","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"checkbox","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":{"Id":3,"Args":["checked","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_checked"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Event_checked"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-checked","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_checked"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":null,"Components.Bind.IsInvariantCulture":"False","Components.Bind.TypeAttribute":"checkbox","Components.Bind.ValueAttribute":"checked","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":2077438364,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"text","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"text","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":null,"Components.Bind.IsInvariantCulture":"False","Components.Bind.TypeAttribute":"text","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-478655573,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":null,"Components.Bind.IsInvariantCulture":"True","Components.Bind.TypeAttribute":"number","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-1727219745,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":null,"Components.Bind.IsInvariantCulture":"True","Components.Bind.TypeAttribute":"number","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":1609103576,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":"yyyy-MM-dd","Components.Bind.IsInvariantCulture":"True","Components.Bind.TypeAttribute":"date","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-263506177,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":"yyyy-MM-dd","Components.Bind.IsInvariantCulture":"True","Components.Bind.TypeAttribute":"date","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-1699770350,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":"yyyy-MM-ddTHH:mm:ss","Components.Bind.IsInvariantCulture":"True","Components.Bind.TypeAttribute":"datetime-local","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":1138129442,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":"yyyy-MM-ddTHH:mm:ss","Components.Bind.IsInvariantCulture":"True","Components.Bind.TypeAttribute":"datetime-local","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-342334592,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":"yyyy-MM","Components.Bind.IsInvariantCulture":"True","Components.Bind.TypeAttribute":"month","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":2016351310,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":"yyyy-MM","Components.Bind.IsInvariantCulture":"True","Components.Bind.TypeAttribute":"month","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-3753525,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":"HH:mm:ss","Components.Bind.IsInvariantCulture":"True","Components.Bind.TypeAttribute":"time","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-191892789,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind-value"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":"HH:mm:ss","Components.Bind.IsInvariantCulture":"True","Components.Bind.TypeAttribute":"time","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-380241744,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"select","Attributes":[{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"select","Attributes":[{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":null,"Components.Bind.IsInvariantCulture":"False","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":1598759353,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":3,"Args":["value","onchange"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"textarea","Attributes":[{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"textarea","Attributes":[{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":{"Id":3,"Args":["value","onchange"]},"Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":{"Id":6,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":{"Id":5},"Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":{"Id":7,"Args":["@bind"]},"Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Common.TypeNameIdentifier":"BindAttributes","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.Bind.ChangeAttribute":"onchange","Components.Bind.Format":null,"Components.Bind.IsInvariantCulture":"False","Components.Bind.ValueAttribute":"value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-1728660936,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputCheckbox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputCheckbox","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Common.TypeNameIdentifier":"InputCheckbox","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-135059254,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Common.TypeNameIdentifier":"InputCheckbox","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":2079193430,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputDate","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputDate","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Common.TypeNameIdentifier":"InputDate","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-1332181074,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputDate","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputDate","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Common.TypeNameIdentifier":"InputDate","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1272104786,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputNumber","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputNumber","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Common.TypeNameIdentifier":"InputNumber","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-2049750376,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputNumber","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputNumber","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Common.TypeNameIdentifier":"InputNumber","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-233555445,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputRadioGroup","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputRadioGroup","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Common.TypeNameIdentifier":"InputRadioGroup","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-785714819,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Common.TypeNameIdentifier":"InputRadioGroup","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":2032267197,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputSelect","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Common.TypeNameIdentifier":"InputSelect","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":811581651,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputSelect","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Common.TypeNameIdentifier":"InputSelect","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":1148665271,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputText","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputText","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Common.TypeNameIdentifier":"InputText","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":-115855893,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputText","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputText","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Common.TypeNameIdentifier":"InputText","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-403255426,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputTextArea","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputTextArea","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Common.TypeNameIdentifier":"InputTextArea","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Runtime.Name":"Components.None"}},{"HashCode":721455144,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":{"Id":10,"Args":["Value","ValueChanged"]},"Metadata":{"Common.PropertyName":"Value","Common.DirectiveAttribute":"True"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":{"Id":8},"Metadata":{"Common.PropertyName":"Get","Components.Bind.AlternativeNotation":"True"}},{"Name":"set","TypeName":"System.Delegate","Documentation":{"Id":9},"Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":{"Id":4},"Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Common.TypeNameIdentifier":"InputTextArea","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Components.Bind.ValueAttribute":"Value","Components.IsSpecialKind":"Components.Bind","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None"}},{"HashCode":-1143631698,"Kind":"Components.Ref","Name":"Ref","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":18},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ref","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Ref","Name":"@ref","TypeName":"System.Object","Documentation":{"Id":18},"Metadata":{"Common.PropertyName":"Ref","Common.DirectiveAttribute":"True"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Ref","Components.IsSpecialKind":"Components.Ref","Runtime.Name":"Components.None"}},{"HashCode":-1000828397,"Kind":"Components.Key","Name":"Key","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":{"Id":17},"CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@key","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Key","Name":"@key","TypeName":"System.Object","Documentation":{"Id":17},"Metadata":{"Common.PropertyName":"Key","Common.DirectiveAttribute":"True"}}],"Metadata":{"Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Key","Components.IsSpecialKind":"Components.Key","Runtime.Name":"Components.None"}}],"CSharpLanguageVersion":1100},"RootNamespace":"VehicleSpeedControlSystem.Client","Documents":[{"FilePath":"C:\\Users\\ittai\\source\\repos\\VehicleSpeedControlSystem\\Client\\Pages\\Counter.razor","TargetPath":"Pages\\Counter.razor","FileKind":"component"},{"FilePath":"C:\\Users\\ittai\\source\\repos\\VehicleSpeedControlSystem\\Client\\Pages\\CounterReserve.razor","TargetPath":"Pages\\CounterReserve.razor","FileKind":"component"},{"FilePath":"C:\\Users\\ittai\\source\\repos\\VehicleSpeedControlSystem\\Client\\Shared\\MainLayout.razor","TargetPath":"Shared\\MainLayout.razor","FileKind":"component"},{"FilePath":"C:\\Users\\ittai\\source\\repos\\VehicleSpeedControlSystem\\Client\\Pages\\IndeXr.razor","TargetPath":"Pages\\IndeXr.razor","FileKind":"component"},{"FilePath":"C:\\Users\\ittai\\source\\repos\\VehicleSpeedControlSystem\\Client\\Pages\\Notifications.razor","TargetPath":"Pages\\Notifications.razor","FileKind":"component"},{"FilePath":"C:\\Users\\ittai\\source\\repos\\VehicleSpeedControlSystem\\Client\\_Imports.razor","TargetPath":"_Imports.razor","FileKind":"componentImport"},{"FilePath":"C:\\Users\\ittai\\source\\repos\\VehicleSpeedControlSystem\\Client\\Pages\\DetailsPage.razor","TargetPath":"Pages\\DetailsPage.razor","FileKind":"component"},{"FilePath":"C:\\Users\\ittai\\source\\repos\\VehicleSpeedControlSystem\\Client\\Pages\\FetchData.razor","TargetPath":"Pages\\FetchData.razor","FileKind":"component"},{"FilePath":"C:\\Users\\ittai\\source\\repos\\VehicleSpeedControlSystem\\Client\\Shared\\SurveyPrompt.razor","TargetPath":"Shared\\SurveyPrompt.razor","FileKind":"component"},{"FilePath":"C:\\Users\\ittai\\source\\repos\\VehicleSpeedControlSystem\\Client\\Pages\\Index.razor","TargetPath":"Pages\\Index.razor","FileKind":"component"},{"FilePath":"C:\\Users\\ittai\\source\\repos\\VehicleSpeedControlSystem\\Client\\Pages\\SignIn.razor","TargetPath":"Pages\\SignIn.razor","FileKind":"component"},{"FilePath":"C:\\Users\\ittai\\source\\repos\\VehicleSpeedControlSystem\\Client\\Pages\\SignUp.razor","TargetPath":"Pages\\SignUp.razor","FileKind":"component"},{"FilePath":"C:\\Users\\ittai\\source\\repos\\VehicleSpeedControlSystem\\Client\\App.razor","TargetPath":"App.razor","FileKind":"component"},{"FilePath":"C:\\Users\\ittai\\source\\repos\\VehicleSpeedControlSystem\\Client\\Shared\\NavMenu.razor","TargetPath":"Shared\\NavMenu.razor","FileKind":"component"}],"SerializationFormat":"0.3"}